"use strict";(self.webpackChunk_jbrowse_web=self.webpackChunk_jbrowse_web||[]).push([[3638],{33638:(t,e,n)=>{n.d(e,{GenomesFile:()=>a,HubFile:()=>o,TrackDbFile:()=>r});class i extends Map{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{checkIndent:!0};super();const{checkIndent:n}=e;let i;this._checkIndent=n,i="string"===typeof t?t.trimEnd().split(/\r?\n/):t||[],this._keyAndCommentOrder=[],i.forEach((t=>{this.add(t)}))}add(t){if(""===t)throw new Error("Invalid stanza, contained blank lines");if(t.trim().startsWith("#"))return this._keyAndCommentOrder.push(t.trim()),this;if(t.trimEnd().endsWith("\\")){const e=t.trimEnd().slice(0,-1);return this._continuedLine?this._continuedLine+=e.trimStart():this._continuedLine=e,this}let e=t;if(this._continuedLine&&(e=this._continuedLine+e.trimStart(),this._continuedLine=void 0),this.indent||this._checkIndent){const t=e.match(/^([ \t]+)/);if(void 0===this.indent)t?[,this.indent]=t:this.indent="";else if(""===this.indent&&null!==t||this.indent&&t&&this.indent!==t[1])throw new Error("Inconsistent indentation of stanza")}else this.indent="";const n=e.trim(),i=n.indexOf(" ");if(-1===i){if(!this.nameKey)throw new Error("First line in a stanza must have both a key and a value");return this.has(n)?this:(this._keyAndCommentOrder.push(n),super.set(n,""))}const s=n.slice(0,i),r=n.slice(i+1);if(this.has(s)&&r!==this.get(s))throw new Error("Got duplicate key with a different value in stanza: "+'"'.concat(s,'" key has both ').concat(this.get(s)," and ").concat(r));return this._keyAndCommentOrder.push(s),this.nameKey||(this.nameKey=s,this.name=n.slice(i+1)),super.set(s,r)}set(t,e){if("string"!==typeof e)throw new Error("Value of ".concat(t," must be a string, got ").concat(typeof e));return super.set(t,e)}delete(t){if(t===this.nameKey)throw new Error("Cannot delete the first line in a stanza (you can still overwrite it with set()).");return this._keyAndCommentOrder.includes(t)&&(this._keyAndCommentOrder=this._keyAndCommentOrder.filter((e=>e!==t))),super.delete(t)}clear(){this._keyAndCommentOrder.length=0,this._continuedLine=void 0,this.indent=void 0,this.name=void 0,this.nameKey=void 0,super.clear()}toString(){if(0===this.size)return"";const t=[];return this._keyAndCommentOrder.forEach((e=>{e.startsWith("#")?t.push("".concat(this.indent).concat(e)):t.push("".concat(this.indent).concat(e," ").concat(this.get(e)).trimEnd())})),"".concat(t.join("\n"),"\n")}}class s extends Map{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{checkIndent:!0};super();const{checkIndent:n}=e;let i;this._checkIndent=n,i="string"===typeof t?t.trimEnd().split(/(?:[\t ]*\r?\n){2,}/):t||[],this._stanzaAndCommentOrder=[],i.forEach((t=>{this.add(t)}))}add(t){if(""===t)throw new Error("Invalid stanza, was empty");if(t.trim().startsWith("#")){const e=t.trimEnd().split(/\r?\n/).map((t=>t.trim()));if(e.every((t=>t.startsWith("#"))))return this._stanzaAndCommentOrder.push(e.join("\n")),this}const e=new i(t,{checkIndent:this._checkIndent});if(this.nameKey){if(e.nameKey!==this.nameKey)throw new Error("The first line in each stanza must have the same key. "+"Saw both ".concat(this.nameKey," and ").concat(e.nameKey))}else this.nameKey=e.nameKey;if(!e.name)throw new Error("No stanza name: ".concat(e.name));if(this.has(e.name))throw new Error("Got duplicate stanza name: ".concat(e.name));return this._stanzaAndCommentOrder.push(e.name),super.set(e.name,e)}update(t,e){if(!(e instanceof i))throw new Error("Value of ".concat(t," is not an RaStanza"));super.set(t,e)}delete(t){return this._stanzaAndCommentOrder.includes(t)&&(this._stanzaAndCommentOrder=this._stanzaAndCommentOrder.filter((e=>e!==t))),super.delete(t)}clear(){this._stanzaAndCommentOrder.length=0,this.nameKey=void 0,super.clear()}toString(){if(0===this.size)return"";const t=[];return this._stanzaAndCommentOrder.forEach((e=>{if(e.startsWith("#"))t.push("".concat(e,"\n"));else{const n=this.get(e);n&&t.push(n.toString())}})),t.join("\n")}}class r extends s{constructor(t){if(super(t,{checkIndent:!1}),"track"!==this.nameKey)throw new Error('trackDb has "'.concat(this.nameKey,'" instead of "track" as the first line in each track'));this.forEach(((t,e)=>{var n;const i=Array.from(t.keys()),s=[];if(["track","shortLabel"].forEach((t=>{i.includes(t)||s.push(t)})),s.length>0)throw new Error("Track ".concat(e," is missing required key(s): ").concat(s.join(", ")));const r=["superTrack","compositeTrack","container","view"];if(!i.some((t=>r.includes(t)))){if(!i.includes("bigDataUrl"))throw new Error("Track ".concat(e,' is missing required key "bigDataUrl"'));if(!i.includes("type")){const t=this.settings(e);if(!Array.from(t.keys()).includes("type"))throw new Error("Neither track ".concat(e,' nor any of its parent tracks have the required key "type"'))}}let o="",a=e;do{a=null===(n=this.get(a))||void 0===n?void 0:n.get("parent"),a&&([a]=a.split(" "),o+="    ")}while(a);const h=this.get(e);h&&(h.indent=o,this.set(e,h))}))}settings(t){var e;if(!this.has(t))throw new Error("Track ".concat(t," does not exist"));const n=[t];let i=t;do{i=null===(e=this.get(i))||void 0===e?void 0:e.get("parent"),i&&n.push(i)}while(i);const s=new Map;return n.reverse(),n.forEach((t=>{var e;null===(e=this.get(t))||void 0===e||e.forEach(((t,e)=>{s.set(e,t)}))})),s}}class o extends i{constructor(t){if(super(t),"hub"!==this.nameKey)throw new Error('Hub file must begin with a line like "hub <hub_name>"');const e=["hub","shortLabel","longLabel","genomesFile","email","descriptionUrl"],n=[];if(this.forEach(((t,i)=>{e.includes(i)||n.push(i)})),n.length>0)throw new Error("Hub file has invalid entr".concat(1===n.length?"y":"ies",": ").concat(n.join(", ")));const i=[];if(e.forEach((t=>{"descriptionUrl"===t||this.get(t)||i.push(t)})),i.length>0)throw new Error("Hub file is missing required entr".concat(1===i.length?"y":"ies",": ").concat(i.join(", ")))}}class a extends s{constructor(t){if(super(t),"genome"!==this.nameKey)throw new Error('Genomes file must begin with a line like "genome <genome_name>"');const e=["genome","trackDb"];this.forEach(((t,n)=>{const i=[];if(e.forEach((e=>{t.get(e)||i.push(e)})),i.length>0)throw new Error("Genomes file entry ".concat(n," is missing required entr").concat(1===i.length?"y":"ies",": ").concat(i.join(", ")))}))}}}}]);
//# sourceMappingURL=3638.b134809b.chunk.js.map