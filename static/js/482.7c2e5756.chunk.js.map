{"version":3,"file":"static/js/482.7c2e5756.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalFab.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackCategory.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabel.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackListNode.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalTree.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HamburgerMenu.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ShoppingCart.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Fab, Menu, MenuItem } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionModelWithConnections,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n}))\n\nconst HierarchicalFab = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  function handleFabClose() {\n    setAnchorEl(null)\n  }\n  const hasConnections = isSessionModelWithConnections(session)\n  const hasAddTrack = isSessionWithAddTracks(session)\n  return (\n    <>\n      {hasAddTrack || hasConnections ? (\n        <>\n          <Fab\n            color=\"secondary\"\n            className={classes.fab}\n            onClick={event => setAnchorEl(event.currentTarget)}\n          >\n            <AddIcon />\n          </Fab>\n          <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n          >\n            {hasConnections ? (\n              <MenuItem\n                onClick={() => {\n                  handleFabClose()\n                  if (isSessionModelWithWidgets(session)) {\n                    session.showWidget(\n                      session.addWidget(\n                        'AddConnectionWidget',\n                        'addConnectionWidget',\n                      ),\n                    )\n                  }\n                }}\n              >\n                Add connection\n              </MenuItem>\n            ) : null}\n            {hasAddTrack ? (\n              <MenuItem\n                onClick={() => {\n                  handleFabClose()\n                  if (isSessionModelWithWidgets(session)) {\n                    session.showWidget(\n                      session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                        view: model.view.id,\n                      }),\n                    )\n                  }\n                }}\n              >\n                Add track\n              </MenuItem>\n            ) : null}\n          </Menu>\n        </>\n      ) : null}\n    </>\n  )\n})\n\nexport default HierarchicalFab\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { HierarchicalTrackSelectorModel } from '../model'\nimport { TreeNode } from '../generateHierarchy'\n\nexport interface NodeData {\n  nestingLevel: number\n  checked: boolean\n  conf: AnyConfigurationModel\n  drawerPosition: unknown\n  id: string\n  isLeaf: boolean\n  name: string\n  onChange: Function\n  toggleCollapse: (arg: string) => void\n  tree: TreeNode\n  selected: boolean\n  model: HierarchicalTrackSelectorModel\n}\n\nexport function getAllChildren(subtree?: TreeNode): AnyConfigurationModel[] {\n  // @ts-expect-error\n  return (\n    subtree?.children.map(t =>\n      t.children.length ? getAllChildren(t) : t.conf!,\n    ) || []\n  ).flat(Infinity)\n}\n\nexport function treeToMap(tree: TreeNode, map = new Map<string, TreeNode>()) {\n  if (tree.id && tree.children.length) {\n    map.set(tree.id, tree)\n  }\n  for (const node of tree.children) {\n    treeToMap(node, map)\n  }\n  return map\n}\n\nexport function isUnsupported(name = '') {\n  return name.endsWith('(Unsupported)') || name.endsWith('(Unknown)')\n}\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\n\n// icons\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { getAllChildren, treeToMap, NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  contrastColor: {\n    color: theme.palette.tertiary.contrastText,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n    // width 100 so you can click anywhere on the category bar\n    width: '100%',\n  },\n}))\n\nexport default function Category({\n  isOpen,\n  setOpen,\n  data,\n}: {\n  isOpen: boolean\n  setOpen: (arg: boolean) => void\n  data: NodeData\n}) {\n  const { classes } = useStyles()\n  const [menuEl, setMenuEl] = useState<HTMLElement | null>(null)\n  const { name, model, id, tree, toggleCollapse } = data\n\n  return (\n    <div\n      className={classes.accordionText}\n      onClick={() => {\n        if (!menuEl) {\n          toggleCollapse(id)\n          setOpen(!isOpen)\n        }\n      }}\n    >\n      <Typography>\n        {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n        {name}\n        <IconButton\n          onClick={event => {\n            setMenuEl(event.currentTarget)\n            event.stopPropagation()\n          }}\n          className={classes.contrastColor}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Typography>\n      {menuEl ? (\n        <JBrowseMenu\n          anchorEl={menuEl}\n          menuItems={[\n            {\n              label: 'Add to selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.addToSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Remove from selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.removeFromSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Show all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (!entry.children.length) {\n                    model.view.showTrack(entry.id)\n                  }\n                }\n              },\n            },\n            {\n              label: 'Hide all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (!entry.children.length) {\n                    model.view.hideTrack(entry.id)\n                  }\n                }\n              },\n            },\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuEl(null)\n          }}\n          open={Boolean(menuEl)}\n          onClose={() => setMenuEl(null)}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Checkbox, FormControlLabel, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession } from '@jbrowse/core/util'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { isUnsupported, NodeData } from '../util'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()(theme => ({\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n}))\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nexport default function TrackLabel({ data }: { data: NodeData }) {\n  const { classes } = useStyles()\n  const { checked, conf, model, drawerPosition, id, name, onChange, selected } =\n    data\n  const description = (conf && readConfObject(conf, ['description'])) || ''\n  return (\n    <>\n      <Tooltip\n        title={description + (selected ? ' (in selection)' : '')}\n        placement={drawerPosition === 'left' ? 'right' : 'left'}\n      >\n        <FormControlLabel\n          className={classes.checkboxLabel}\n          control={\n            <Checkbox\n              className={classes.compactCheckbox}\n              checked={checked}\n              onChange={() => onChange(id)}\n              disabled={isUnsupported(name)}\n              inputProps={{\n                // @ts-expect-error\n                'data-testid': `htsTrackEntry-${id}`,\n              }}\n            />\n          }\n          label={\n            <div\n              data-testid={`htsTrackLabel-${id}`}\n              style={{ background: selected ? '#cccc' : undefined }}\n            >\n              <SanitizedHTML html={name} />\n            </div>\n          }\n        />\n      </Tooltip>\n      <TrackMenuButton model={model} selected={selected} id={id} conf={conf} />\n    </>\n  )\n}\n\nfunction TrackMenuButton({\n  id,\n  model,\n  selected,\n  conf,\n}: {\n  id: string\n  selected: boolean\n  conf: AnyConfigurationModel\n  model: HierarchicalTrackSelectorModel\n}) {\n  return (\n    <CascadingMenuButton\n      style={{ padding: 0 }}\n      data-testid={`htsTrackEntryMenu-${id}`}\n      menuItems={[\n        ...(getSession(model).getTrackActionMenuItems?.(conf) || []),\n        {\n          label: 'Add to selection',\n          onClick: () => model.addToSelection([conf]),\n        },\n        ...(selected\n          ? [\n              {\n                label: 'Remove from selection',\n                onClick: () => model.removeFromSelection([conf]),\n              },\n            ]\n          : []),\n      ]}\n    >\n      <MoreHorizIcon />\n    </CascadingMenuButton>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport Category from './TrackCategory'\nimport TrackLabel from './TrackLabel'\nimport { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary.main,\n    color: theme.palette.tertiary.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nexport default function Node({\n  data,\n  isOpen,\n  style,\n  setOpen,\n}: {\n  data: NodeData\n  isOpen: boolean\n  style?: { height: number }\n  setOpen: (arg: boolean) => void\n}) {\n  const { isLeaf, nestingLevel } = data\n\n  const { classes } = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style?.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <Category isOpen={isOpen} data={data} setOpen={setOpen} />\n          ) : (\n            <TrackLabel data={data} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useMemo, useRef, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\nimport { getSession } from '@jbrowse/core/util'\n// locals\nimport { TreeNode } from '../../generateHierarchy'\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport Node from './TrackListNode'\n\nfunction getNodeData(\n  node: TreeNode,\n  nestingLevel: number,\n  extra: Record<string, unknown>,\n  selection: Record<string, unknown>,\n) {\n  const isLeaf = !!node.conf\n  const selected = !!selection[node.id]\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      selected,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\ntype NodeData = ReturnType<typeof getNodeData>\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nconst HierarchicalTree = observer(function HierarchicalTree({\n  height,\n  tree,\n  model,\n}: {\n  height: number\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText, selection, view } = model\n  const treeRef = useRef<NodeData>(null)\n  const session = getSession(model)\n  const { drawerPosition } = session\n  const obj = useMemo(\n    () => Object.fromEntries(selection.map(s => [s.trackId, s])),\n    [selection],\n  )\n\n  const extra = useMemo(\n    () => ({\n      onChange: (trackId: string) => view.toggleTrack(trackId),\n      toggleCollapse: (pathName: string) => model.toggleCategory(pathName),\n      tree,\n      model,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition, tree],\n  )\n  const treeWalker = useCallback(\n    function* treeWalker() {\n      for (const child of tree.children) {\n        yield getNodeData(child, 0, extra, obj)\n      }\n\n      while (true) {\n        // @ts-expect-error\n        const parentMeta = yield\n\n        for (const curr of parentMeta.node.children) {\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra, obj)\n        }\n      }\n    },\n    [tree, extra, obj],\n  )\n\n  useEffect(() => {\n    // @ts-expect-error\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      {/* @ts-expect-error */}\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {/* @ts-expect-error */}\n        {Node}\n      </VariableSizeTree>\n    </>\n  )\n})\n\nexport default HierarchicalTree\n","import React, { Suspense, lazy, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  getSession,\n  isSessionModelWithConnectionEditing,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\n// icons\nimport MenuIcon from '@mui/icons-material/Menu'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\n\n// lazy components\nconst CloseConnectionDlg = lazy(\n  () => import('../dialogs/CloseConnectionDialog'),\n)\nconst DeleteConnectionDlg = lazy(\n  () => import('../dialogs/DeleteConnectionDialog'),\n)\nconst ManageConnectionsDlg = lazy(\n  () => import('../dialogs/ManageConnectionsDialog'),\n)\nconst ToggleConnectionsDlg = lazy(\n  () => import('../dialogs/ToggleConnectionsDialog'),\n)\n\ninterface ModalArgs {\n  connectionConf: AnyConfigurationModel\n  safelyBreakConnection: () => void\n  dereferenceTypeCount: Record<string, number>\n  name: string\n}\n\ninterface DialogDetails {\n  name: string\n  connectionConf: AnyConfigurationModel\n}\n\nconst HamburgerMenu = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const session = getSession(model)\n  const [modalInfo, setModalInfo] = useState<ModalArgs>()\n  const [deleteDlgDetails, setDeleteDlgDetails] = useState<DialogDetails>()\n  const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n  const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n\n  function breakConnection(\n    connectionConf: AnyConfigurationModel,\n    deletingConnection?: boolean,\n  ) {\n    const name = readConfObject(connectionConf, 'name')\n    const result = session.prepareToBreakConnection?.(connectionConf)\n    if (result) {\n      const [safelyBreakConnection, dereferenceTypeCount] = result\n      if (Object.keys(dereferenceTypeCount).length > 0) {\n        setModalInfo({\n          connectionConf,\n          safelyBreakConnection,\n          dereferenceTypeCount,\n          name,\n        })\n      } else {\n        safelyBreakConnection()\n      }\n    }\n    if (deletingConnection) {\n      setDeleteDlgDetails({ name, connectionConf })\n    }\n  }\n\n  return (\n    <>\n      <CascadingMenuButton\n        menuItems={[\n          ...(isSessionWithAddTracks(session)\n            ? [\n                {\n                  label: 'Add track...',\n                  onClick: () => {\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                          view: model.view.id,\n                        }),\n                      )\n                    }\n                  },\n                },\n              ]\n            : []),\n          ...(isSessionModelWithConnections(session)\n            ? [\n                {\n                  label: 'Turn on/off connections...',\n                  onClick: () => setConnectionToggleOpen(true),\n                },\n              ]\n            : []),\n          ...(isSessionModelWithConnectionEditing(session)\n            ? [\n                {\n                  label: 'Add connection...',\n                  onClick: () => {\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget(\n                          'AddConnectionWidget',\n                          'addConnectionWidget',\n                        ),\n                      )\n                    }\n                  },\n                },\n                {\n                  label: 'Delete connections...',\n                  onClick: () => setConnectionManagerOpen(true),\n                },\n              ]\n            : []),\n          { type: 'divider' },\n          {\n            label: 'Sort tracks by name',\n            type: 'checkbox',\n            checked: model.activeSortTrackNames,\n            onClick: () => model.setSortTrackNames(!model.activeSortTrackNames),\n          },\n          {\n            label: 'Sort categories by name',\n            type: 'checkbox',\n            checked: model.activeSortCategories,\n            onClick: () => model.setSortCategories(!model.activeSortCategories),\n          },\n          { type: 'divider' },\n          ...(model.hasAnySubcategories\n            ? [\n                {\n                  label: 'Collapse subcategories',\n                  onClick: () => model.collapseSubCategories(),\n                },\n              ]\n            : []),\n          {\n            label: 'Collapse top-level categories',\n            onClick: () => model.collapseTopLevelCategories(),\n          },\n          {\n            label: 'Expand all categories',\n            onClick: () => model.expandAllCategories(),\n          },\n        ]}\n      >\n        <MenuIcon />\n      </CascadingMenuButton>\n      <Suspense fallback={<React.Fragment />}>\n        {modalInfo ? (\n          <CloseConnectionDlg\n            modalInfo={modalInfo}\n            onClose={() => setModalInfo(undefined)}\n          />\n        ) : null}\n        {deleteDlgDetails ? (\n          <DeleteConnectionDlg\n            handleClose={() => setDeleteDlgDetails(undefined)}\n            deleteDialogDetails={deleteDlgDetails}\n            session={session}\n          />\n        ) : null}\n        {connectionManagerOpen ? (\n          <ManageConnectionsDlg\n            handleClose={() => setConnectionManagerOpen(false)}\n            breakConnection={breakConnection}\n            session={session}\n          />\n        ) : null}\n        {connectionToggleOpen ? (\n          <ToggleConnectionsDlg\n            handleClose={() => setConnectionToggleOpen(false)}\n            session={session}\n            breakConnection={breakConnection}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  )\n})\n\nexport default HamburgerMenu\n","import React, { Suspense, lazy, useState } from 'react'\nimport { Button, IconButton, InputAdornment, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport HamburgerMenu from './HamburgerMenu'\nimport ShoppingCart from '../ShoppingCart'\n\n// lazies\nconst FacetedDialog = lazy(() => import('../faceted/FacetedDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\nconst SearchTracksTextField = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText } = model\n  const { classes } = useStyles()\n  return (\n    <TextField\n      className={classes.searchBox}\n      label=\"Filter tracks\"\n      value={filterText}\n      onChange={event => model.setFilterText(event.target.value)}\n      fullWidth\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={() => model.clearFilterText()}>\n              <ClearIcon />\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  )\n})\n\nconst HierarchicalTrackSelectorHeader = observer(function ({\n  model,\n  setHeaderHeight,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setHeaderHeight: (n: number) => void\n}) {\n  const { classes } = useStyles()\n  const [facetedOpen, setFacetedOpen] = useState(false)\n\n  return (\n    <div\n      ref={ref => setHeaderHeight(ref?.getBoundingClientRect().height || 0)}\n      data-testid=\"hierarchical_track_selector\"\n    >\n      <div style={{ display: 'flex' }}>\n        <HamburgerMenu model={model} />\n        <ShoppingCart model={model} />\n        <SearchTracksTextField model={model} />\n        <Button\n          className={classes.menuIcon}\n          onClick={() => setFacetedOpen(true)}\n        >\n          Open faceted selector\n        </Button>\n      </div>\n\n      <Suspense fallback={<div />}>\n        {facetedOpen ? (\n          <FacetedDialog\n            handleClose={() => setFacetedOpen(false)}\n            model={model}\n          />\n        ) : null}\n      </Suspense>\n    </div>\n  )\n})\n\nexport default HierarchicalTrackSelectorHeader\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\nimport { TreeNode } from '../generateHierarchy'\nimport HierarchicalFab from './HierarchicalFab'\nimport HierarchicalTree from './tree/HierarchicalTree'\nimport HierarchicalHeader from './tree/HierarchicalHeader'\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({\n  tree,\n  model,\n  offset,\n}: {\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n  offset: number\n}) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {args => (\n        <HierarchicalTree\n          height={(args.height || offset) - offset}\n          model={model}\n          tree={tree}\n        />\n      )}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({\n  overrideDimensions,\n  children,\n}: {\n  overrideDimensions?: { width: number; height: number }\n  children: React.ReactNode\n}) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    <>{children}</>\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(function ({\n  model,\n  toolbarHeight,\n  overrideDimensions,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight: number\n  overrideDimensions?: { width: number; height: number }\n}) {\n  return (\n    <Wrapper overrideDimensions={overrideDimensions}>\n      <HierarchicalTrackSelector model={model} toolbarHeight={toolbarHeight} />\n      <HierarchicalFab model={model} />\n    </Wrapper>\n  )\n})\n\nconst HierarchicalTrackSelector = observer(function ({\n  model,\n  toolbarHeight = 0,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight?: number\n}) {\n  const [headerHeight, setHeaderHeight] = useState(0)\n  return (\n    <>\n      <HierarchicalHeader model={model} setHeaderHeight={setHeaderHeight} />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  )\n})\n\nexport default HierarchicalTrackSelectorContainer\n","import React, { useState } from 'react'\nimport { Badge, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport JBrowseMenu, { MenuItem } from '@jbrowse/core/ui/Menu'\nimport { getSession, getEnv } from '@jbrowse/core/util'\n\n// icons\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\nconst ShoppingCart = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { selection } = model\n  const { pluginManager } = getEnv(model)\n  const session = getSession(model)\n  const [selectionEl, setSelectionEl] = useState<HTMLButtonElement>()\n  const items = pluginManager.evaluateExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    [],\n    { session },\n  ) as MenuItem[]\n\n  return (\n    <>\n      {selection.length ? (\n        <IconButton\n          className={classes.menuIcon}\n          onClick={event => setSelectionEl(event.currentTarget)}\n        >\n          <Badge badgeContent={selection.length} color=\"primary\">\n            <ShoppingCartIcon />\n          </Badge>\n        </IconButton>\n      ) : null}\n\n      <JBrowseMenu\n        anchorEl={selectionEl}\n        open={Boolean(selectionEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setSelectionEl(undefined)\n        }}\n        onClose={() => setSelectionEl(undefined)}\n        menuItems={[\n          { label: 'Clear', onClick: () => model.clearSelection() },\n          ...items.map(item => ({\n            ...item,\n            ...('onClick' in item\n              ? { onClick: () => item.onClick(model) }\n              : {}),\n          })),\n        ]}\n      />\n    </>\n  )\n})\n\nexport default ShoppingCart\n"],"names":["useStyles","makeStyles","theme","fab","position","bottom","spacing","right","observer","_ref","model","classes","session","getSession","anchorEl","setAnchorEl","useState","handleFabClose","hasConnections","isSessionModelWithConnections","hasAddTrack","isSessionWithAddTracks","_jsx","_Fragment","children","_jsxs","Fab","color","className","onClick","event","currentTarget","AddIcon","Menu","open","Boolean","onClose","MenuItem","isSessionModelWithWidgets","showWidget","addWidget","view","id","getAllChildren","subtree","map","t","length","conf","flat","Infinity","treeToMap","tree","arguments","undefined","Map","set","node","isUnsupported","name","endsWith","contrastColor","palette","tertiary","contrastText","accordionText","margin","width","Category","isOpen","setOpen","data","menuEl","setMenuEl","toggleCollapse","Typography","ArrowDropDownIcon","ArrowRightIcon","IconButton","stopPropagation","MoreHorizIcon","JBrowseMenu","menuItems","label","r","get","addToSelection","removeFromSelection","entry","_treeToMap$get","showTrack","_treeToMap$get2","hideTrack","onMenuItemClick","_event","callback","compactCheckbox","padding","checkboxLabel","marginRight","backgroundColor","action","selected","TrackLabel","checked","drawerPosition","onChange","description","readConfObject","Tooltip","title","placement","FormControlLabel","control","Checkbox","disabled","inputProps","concat","style","background","SanitizedHTML","html","TrackMenuButton","_ref2","_getSession$getTrackA","_getSession","CascadingMenuButton","getTrackActionMenuItems","call","accordionBase","display","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","main","paddingLeft","Node","isLeaf","nestingLevel","marginLeft","Array","fill","_","idx","left","height","whiteSpace","getNodeData","extra","selection","defaultHeight","isOpenByDefault","filterText","treeRef","useRef","obj","useMemo","Object","fromEntries","s","trackId","toggleTrack","pathName","toggleCategory","treeWalker","useCallback","child","parentMeta","curr","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","VariableSizeTree","ref","CloseConnectionDlg","lazy","DeleteConnectionDlg","ManageConnectionsDlg","ToggleConnectionsDlg","modalInfo","setModalInfo","deleteDlgDetails","setDeleteDlgDetails","connectionToggleOpen","setConnectionToggleOpen","connectionManagerOpen","setConnectionManagerOpen","breakConnection","connectionConf","deletingConnection","_session$prepareToBre","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","keys","isSessionModelWithConnectionEditing","type","activeSortTrackNames","setSortTrackNames","activeSortCategories","setSortCategories","hasAnySubcategories","collapseSubCategories","collapseTopLevelCategories","expandAllCategories","MenuIcon","Suspense","fallback","React","handleClose","deleteDialogDetails","FacetedDialog","searchBox","menuIcon","marginBottom","SearchTracksTextField","TextField","value","setFilterText","target","fullWidth","InputProps","endAdornment","InputAdornment","clearFilterText","ClearIcon","setHeaderHeight","facetedOpen","setFacetedOpen","getBoundingClientRect","HamburgerMenu","ShoppingCart","Button","AutoSizedHierarchicalTree","offset","jest","AutoSizer","disableWidth","args","HierarchicalTree","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","_ref3","toolbarHeight","HierarchicalTrackSelector","HierarchicalFab","_ref4","headerHeight","HierarchicalHeader","hierarchy","pluginManager","getEnv","selectionEl","setSelectionEl","items","evaluateExtensionPoint","Badge","badgeContent","ShoppingCartIcon","clearSelection","item"],"sourceRoot":""}