{"version":3,"file":"static/js/1475.4a5ba343.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/shared/FilterByTag.tsx","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Link,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { IFilter } from '.'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst flagNames = [\n  'read paired',\n  'read mapped in proper pair',\n  'read unmapped',\n  'mate unmapped',\n  'read reverse strand',\n  'mate reverse strand',\n  'first in pair',\n  'second in pair',\n  'not primary alignment',\n  'read fails platform/vendor quality checks',\n  'read is PCR or optical duplicate',\n  'supplementary alignment',\n]\n\nfunction Bitmask(props: { flag?: number; setFlag: (arg: number) => void }) {\n  const { flag = 0, setFlag } = props\n  return (\n    <>\n      <TextField\n        type=\"number\"\n        value={flag}\n        onChange={event => setFlag(+event.target.value)}\n      />\n      {flagNames.map((name, index) => {\n        const val = flag & (1 << index)\n        const key = `${name}_${val}`\n        return (\n          <div key={key}>\n            <input\n              type=\"checkbox\"\n              checked={Boolean(val)}\n              onChange={event => {\n                if (event.target.checked) {\n                  setFlag(flag | (1 << index))\n                } else {\n                  setFlag(flag & ~(1 << index))\n                }\n              }}\n            />\n            <label htmlFor={key}>{name}</label>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nconst FilterByTagDialog = observer(function (props: {\n  model: {\n    filterBy: IFilter\n    setFilterBy: (arg: IFilter) => void\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { filterBy } = model\n  const [flagInclude, setFlagInclude] = useState(filterBy.flagInclude)\n  const [flagExclude, setFlagExclude] = useState(filterBy.flagExclude)\n  const [tag, setTag] = useState(filterBy.tagFilter?.tag || '')\n  const [tagValue, setTagValue] = useState(filterBy.tagFilter?.value || '')\n  const [readName, setReadName] = useState(filterBy.readName || '')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n\n  const site = 'https://broadinstitute.github.io/picard/explain-flags.html'\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Filter options\">\n      <DialogContent>\n        <Typography>\n          Set filter bitmask options. Refer to <Link href={site}>{site}</Link>{' '}\n          for details\n        </Typography>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <div style={{ display: 'flex' }}>\n            <div>\n              <Typography>Read must have ALL these flags</Typography>\n              <Bitmask flag={flagInclude} setFlag={setFlagInclude} />\n            </div>\n            <div>\n              <Typography>Read must have NONE of these flags</Typography>\n              <Bitmask flag={flagExclude} setFlag={setFlagExclude} />\n            </div>\n          </div>\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>\n            Filter by tag name and value. Use * in the value field to get all\n            reads containing any value for that tag. Example: filter tag name SA\n            with value * to get all split/supplementary reads. Other examples\n            include HP for haplotype, or RG for read group\n          </Typography>\n          <TextField\n            className={classes.field}\n            value={tag}\n            onChange={event => setTag(event.target.value)}\n            placeholder=\"Enter tag name\"\n            inputProps={{ maxLength: 2 }}\n            error={tag.length === 2 && !validTag}\n            helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n          />\n          <TextField\n            className={classes.field}\n            value={tagValue}\n            onChange={event => setTagValue(event.target.value)}\n            placeholder=\"Enter tag value\"\n          />\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>Filter by read name</Typography>\n          <TextField\n            className={classes.field}\n            value={readName}\n            onChange={event => setReadName(event.target.value)}\n            placeholder=\"Enter read name\"\n          />\n        </Paper>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            type=\"submit\"\n            onClick={() => {\n              model.setFilterBy({\n                flagInclude,\n                flagExclude,\n                readName,\n                tagFilter:\n                  tag !== ''\n                    ? {\n                        tag,\n                        value: tagValue,\n                      }\n                    : undefined,\n              })\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default FilterByTagDialog\n","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","margin","field","flagNames","Bitmask","props","flag","setFlag","_jsxs","_Fragment","children","_jsx","TextField","type","value","onChange","event","target","map","name","index","val","key","concat","checked","Boolean","htmlFor","observer","_filterBy$tagFilter","_filterBy$tagFilter2","model","handleClose","classes","filterBy","flagInclude","setFlagInclude","useState","flagExclude","setFlagExclude","tag","setTag","tagFilter","tagValue","setTagValue","readName","setReadName","validTag","match","site","Dialog","open","onClose","title","DialogContent","Typography","Link","href","Paper","className","variant","style","display","placeholder","inputProps","maxLength","error","length","helperText","DialogActions","Button","color","autoFocus","onClick","setFilterBy","undefined","colorTransformations","primary","textPrimary","secondary","textSecondary","_ref","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","slot","overridesResolver","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","getLinkUtilityClass","useUtilityClasses","clsx","current","Object","keys","includes","Array","isArray","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}