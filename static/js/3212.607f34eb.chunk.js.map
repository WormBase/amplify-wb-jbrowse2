{"version":3,"file":"static/js/3212.607f34eb.chunk.js","mappings":"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","sources":["../../../plugins/hic/src/HicAdapter/HicAdapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region, FileLocation } from '@jbrowse/core/util/types'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport type { GenericFilehandle } from 'generic-filehandle'\nimport HicStraw from 'hic-straw'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\ninterface ContactRecord {\n  bin1: number\n  bin2: number\n  counts: number\n}\n\ninterface HicMetadata {\n  chromosomes: {\n    name: string\n    length: number\n    id: number\n  }[]\n  resolutions: number[]\n}\ninterface Ref {\n  chr: string\n  start: number\n  end: number\n}\n\ninterface HicOptions extends BaseOptions {\n  resolution?: number\n  bpPerPx?: number\n}\n\n// wraps generic-filehandle so the read function only takes a position and length\n// in some ways, generic-filehandle wishes it was just this but it has\n// to adapt to the node.js fs promises API\nclass GenericFilehandleWrapper {\n  constructor(private filehandle: GenericFilehandle) {}\n\n  async read(position: number, length: number) {\n    const { buffer: b, bytesRead } = await this.filehandle.read(\n      Buffer.allocUnsafe(length),\n      0,\n      length,\n      position,\n    )\n    // xref https://stackoverflow.com/a/31394257/2129219\n    return b.buffer.slice(b.byteOffset, b.byteOffset + bytesRead)\n  }\n}\nexport function openFilehandleWrapper(\n  location: FileLocation,\n  pluginManager?: PluginManager,\n) {\n  return new GenericFilehandleWrapper(openLocation(location, pluginManager))\n}\n\ninterface HicParser {\n  getContactRecords: (\n    normalize: string,\n    ref: Ref,\n    ref2: Ref,\n    units: string,\n    binsize: number,\n  ) => Promise<ContactRecord[]>\n  getMetaData: () => Promise<HicMetadata>\n}\n\nexport default class HicAdapter extends BaseFeatureDataAdapter {\n  private hic: HicParser\n\n  public constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const hicLocation = this.getConf('hicLocation')\n    this.hic = new HicStraw({\n      file: openFilehandleWrapper(hicLocation, this.pluginManager),\n    })\n  }\n\n  private async setup(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    statusCallback('Downloading .hic header')\n    const result = await this.hic.getMetaData()\n    statusCallback('')\n    return result\n  }\n\n  public async getHeader(opts?: BaseOptions) {\n    const ret = await this.setup(opts)\n    const { chromosomes, ...rest } = ret\n    return rest\n  }\n\n  async getRefNames(opts?: BaseOptions) {\n    const metadata = await this.setup(opts)\n    return metadata.chromosomes.map(chr => chr.name)\n  }\n\n  async getResolution(bpPerPx: number, opts?: BaseOptions) {\n    const { resolutions } = await this.setup(opts)\n\n    let chosenResolution = resolutions.at(-1)!\n\n    for (let i = resolutions.length - 1; i >= 0; i -= 1) {\n      const r = resolutions[i]\n      if (r <= 2 * bpPerPx) {\n        chosenResolution = r\n      }\n    }\n    return chosenResolution\n  }\n\n  getFeatures(region: Region, opts: HicOptions = {}) {\n    return ObservableCreate<ContactRecord>(async observer => {\n      const { refName: chr, start, end } = region\n      const { resolution, bpPerPx = 1, statusCallback = () => {} } = opts\n      const res = await this.getResolution(bpPerPx / (resolution || 1000), opts)\n      statusCallback('Downloading .hic data')\n\n      const records = await this.hic.getContactRecords(\n        'KR',\n        { start, chr, end },\n        { start, chr, end },\n        'BP',\n        res,\n      )\n      records.forEach(record => {\n        observer.next(record)\n      })\n      statusCallback('')\n      observer.complete()\n    }, opts.signal) as any // eslint-disable-line @typescript-eslint/no-explicit-any\n  }\n\n  // don't do feature stats estimation, similar to bigwigadapter\n  async getMultiRegionFeatureDensityStats(_regions: Region[]) {\n    return { featureDensity: 0 }\n  }\n\n  freeResources(/* { region } */): void {}\n}\n"],"names":["GenericFilehandleWrapper","_read","filehandle","_classCallCheck","_createClass","key","value","_x","_x2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","position","length","_yield$this$filehandl","b","bytesRead","wrap","_context","prev","next","this","read","Buffer","allocUnsafe","sent","buffer","abrupt","slice","byteOffset","stop","apply","arguments","openFilehandleWrapper","location","pluginManager","openLocation","HicAdapter","_BaseFeatureDataAdapt","_setup","_getHeader","_getRefNames","_getResolution","_getMultiRegionFeatureDensityStats","_inherits","_super","_createSuper","config","getSubAdapter","_this","call","hic","hicLocation","getConf","HicStraw","file","_x3","_callee2","opts","_ref$statusCallback","statusCallback","result","_context2","getMetaData","_x4","_callee3","ret","rest","_context3","setup","chromosomes","_objectWithoutProperties","_excluded","_x5","_callee4","metadata","_context4","map","chr","name","_x6","_x7","_callee5","bpPerPx","_yield$this$setup","resolutions","chosenResolution","i","r","_context5","at","region","_ref2","_this2","undefined","ObservableCreate","_x8","_callee6","observer","start","end","resolution","_opts$bpPerPx","_opts$statusCallback","res","_context6","refName","getResolution","getContactRecords","forEach","record","complete","signal","_x9","_callee7","_regions","_context7","featureDensity","BaseFeatureDataAdapter"],"sourceRoot":""}