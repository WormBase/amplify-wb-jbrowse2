{"version":3,"file":"static/js/8930.85d9b596.chunk.js","mappings":"uUAcMA,EAAU,SAACC,GACf,IAAMC,EAAmB,GACnBC,EAAiB,GAWvB,OAVAF,EAAEG,MAAM,cACLC,KAAI,SAAAJ,GAAC,OAAIA,EAAEK,MAAM,IACjBC,QAAO,SAAAN,GAAC,QAAMA,CAAC,IACfO,SAAQ,SAAAC,GACHA,EAAKC,WAAW,KAClBR,EAAOS,KAAKF,GACHA,GACTN,EAAKQ,KAAKF,EAEd,IACK,CAAEP,OAAQA,EAAOU,KAAK,MAAOC,MAAOV,EAC7C,EAEA,SAASW,EAAOC,GACd,OAAkB,KAAXA,EAAI,IAAwB,MAAXA,EAAI,IAAyB,IAAXA,EAAI,EAChD,CAAC,IAEoBC,EAAU,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAAAC,EAAAA,EAAAA,GAAAP,EAAAC,GAAA,IAAAO,GAAAC,EAAAA,EAAAA,GAAAT,GAAA,SAAAA,IAAA,IAAAU,GAAAC,EAAAA,EAAAA,GAAA,KAAAX,GAAA,QAAAY,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAGR,OAHQP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KAGnBM,iBAAW,EAAAX,CAAA,CAsFU,OAtFVY,EAAAA,EAAAA,GAAAtB,EAAA,EAAAuB,IAAA,YAAAC,MAAA,kBAAAtB,EAAAA,IAAAuB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAKrB,SAAAC,IAAA,IAAAC,EAAA3C,EAAA,OAAAwC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC2BC,KAAKC,QAAO,OAAvB,OAAuBN,EAAAE,EAAAK,KAA7BlD,EAAM2C,EAAN3C,OAAM6C,EAAAM,OAAA,SACPnD,GAAM,wBAAA6C,EAAAO,OAAA,GAAAV,EAAA,WACdT,MAAA,KAAAN,UAAA,IAAAU,IAAA,cAAAC,MAAA,kBAAArB,EAAAA,IAAAsB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAY,IAAA,IAAAC,EAAAtD,EAAAuD,EAAA,OAAAf,EAAAA,EAAAA,KAAAI,MAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EAC2BC,KAAKC,QAAO,OACK,OADLK,EAAAE,EAAAN,KAA7BlD,EAAMsD,EAANtD,OACFuD,EAAS,IAAIE,EAAAA,EAAI,CAAEzD,OAAQA,IAASwD,EAAAL,OAAA,SACnCI,EAAOG,eAAa,wBAAAF,EAAAJ,OAAA,GAAAC,EAAA,WAC5BpB,MAAA,KAAAN,UAAA,GAED,CAAAU,IAAA,SAAAC,MAAA,kBAAApB,EAAAA,IAAAqB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACA,SAAAkB,IAAA,IAAAC,EAAA/C,EAAAgD,EAAAC,EAAAC,EAAA/D,EAAAW,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA9B,EAAA,OAAAG,EAAAA,EAAAA,KAAAI,MAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OAC+B,OAAvBa,EAAKZ,KAAKqB,cAAaD,EAAArB,KAAA,GACXuB,EAAAA,EAAAA,cAAatB,KAAKuB,QAAQ,eAAgBX,GAAIY,WAAU,OAAjE,IAEM5D,EAFTC,EAAGuD,EAAAlB,MAEiB,CAAAkB,EAAArB,KAAA,gBAAAqB,EAAArB,KAAA,GAAS0B,EAAAA,EAAAA,OAAM5D,GAAI,OAAAuD,EAAAM,GAAAN,EAAAlB,KAAAkB,EAAArB,KAAA,iBAAAqB,EAAAM,GAAG7D,EAAG,QAAvC,MAANgD,EAAMO,EAAAM,IAGD9C,OAAS,WAAW,CAAAwC,EAAArB,KAAA,eACvB,IAAI4B,MAAM,8CAA6C,QAGzDb,GAAM,IAAIc,aAAcC,OAAOhB,GAAOE,EAClBjE,EAAQgE,GAA1B9D,EAAM+D,EAAN/D,OAAQW,EAAKoD,EAALpD,MACVqD,EAAe,CAAC,EAACC,GAAAa,EAAAA,EAAAA,GAELnE,EAAMR,KAAI,SAACI,EAAMwE,GAAQ,IAADC,EACxCC,EAA6C1E,EAAKL,MAAM,MAAKgF,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAtDG,EAAOF,EAAA,GAAEG,EAAMH,EAAA,GAAII,EAAGJ,EAAA,GAAQK,EAAIL,EAAA,GACnCM,GAASH,EAAS,EAClBI,EAAMD,EAAQF,EAAI1D,OAExB,MAAO,CAAErB,KAAAA,EAAM6E,QAAAA,EAASI,MAAAA,EAAOE,OADM,QAAvBV,EAAAO,EAAKI,MAAM,oBAAY,IAAAX,OAAA,EAAvBA,EAA0B,GAAG5E,SAAUqF,GACjBV,GAAAA,EACtC,KAAE,IANF,IAAAd,EAAA2B,MAAA1B,EAAAD,EAAA4B,KAAAC,MAAW3B,EAAGD,EAAA5B,MAOND,EAAM8B,EAAIiB,QACXpB,EAAa3B,KAChB2B,EAAa3B,GAAO,IAAI0D,EAAAA,IAE1B/B,EAAa3B,GAAK2D,OAAO,CAAC7B,EAAIqB,MAAOrB,EAAIuB,KAAMvB,EAChD,OAAA8B,GAAAhC,EAAAiC,EAAAD,EAAA,SAAAhC,EAAAlE,GAAA,QAAAqE,EAAAjB,OAAA,SAEM,CAAEnD,OAAAA,EAAQgE,aAAAA,IAAc,yBAAAI,EAAAhB,OAAA,GAAAO,EAAA,WAChC1B,MAAA,KAAAN,UAAA,IAAAU,IAAA,QAAAC,MAAA,kBAAAnB,EAAAA,IAAAoB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAA0D,IAAA,IAAAC,EAAA,YAAA5D,EAAAA,EAAAA,KAAAI,MAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,OAMG,OALIC,KAAKb,cACRa,KAAKb,YAAca,KAAKsD,SAASC,OAAM,SAAAL,GAErC,MADAE,EAAKjE,iBAAcqE,EACbN,CACR,KACDG,EAAAlD,OAAA,SACMH,KAAKb,aAAW,wBAAAkE,EAAAjD,OAAA,GAAA+C,EAAA,WACxBlE,MAAA,KAAAN,UAAA,IAAAU,IAAA,cAAAC,MAAA,kBAAAlB,EAAAA,IAAAmB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAgE,IAAA,IAAAC,EAAA1C,EAAA2C,EAAAhF,UAAA,OAAAa,EAAAA,EAAAA,KAAAI,MAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,OAA4C,OAAL4D,EAAA/E,OAAA,QAAA4E,IAAAG,EAAA,GAAAA,EAAA,GAAG,CAAC,EAACC,EAAA7D,KAAA,EACXC,KAAKC,QAAO,OAAvB,OAAuByD,EAAAE,EAAA1D,KAAnCc,EAAY0C,EAAZ1C,aAAY4C,EAAAzD,OAAA,SACb0D,OAAOC,KAAK9C,IAAa,wBAAA4C,EAAAxD,OAAA,GAAAqD,EAAA,WACjCxE,MAAA,KAAAN,UAAA,IAAAU,IAAA,cAAAC,MAED,SAAmByE,GAAyC,IAADC,EAAAC,EAAA,KAAxBC,EAAiBvF,UAAAC,OAAA,QAAA4E,IAAA7E,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,OAAOwF,EAAAA,EAAAA,mBAAgB,SAAAC,GAAA,OAAAJ,EAAAA,IAAAzE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAU,SAAA4E,EAAMC,GAAQ,IAAAC,EAAA/B,EAAAE,EAAAN,EAAAoC,EAAAxH,EAAAgE,EAAAT,EAAA,OAAAf,EAAAA,EAAAA,KAAAI,MAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,OAEhB,OAFgB0E,EAAA3E,KAAA,EAEnC0C,EAAwBuB,EAAxBvB,MAAOE,EAAiBqB,EAAjBrB,IAAKN,EAAY2B,EAAZ3B,QAAOqC,EAAA1E,KAAA,EACYkE,EAAKhE,QAAO,OAAAuE,EAAAC,EAAAvE,KAA3ClD,EAAMwH,EAANxH,OAAQgE,EAAYwD,EAAZxD,aACVT,EAAS,IAAIE,EAAAA,EAAI,CAAEzD,OAAAA,IACJ,QAArBuH,EAAAvD,EAAaoB,UAAQ,IAAAmC,GAArBA,EAAuBG,OAAO,CAAClC,EAAOE,IAAMpF,SAAQ,SAAAP,GAAC,OACnDuH,EAASvE,KACP,IAAI4E,EAAAA,EAAW,CACbC,QAASrE,EAAOsE,UAAU9H,EAAEQ,MAC5BgD,OAAAA,EACAwB,GAAG,GAAD7C,OAAK+E,EAAKlC,GAAE,KAAA7C,OAAInC,EAAEgF,MAEvB,IAEHuC,EAASQ,WAAUL,EAAA1E,KAAA,iBAAA0E,EAAA3E,KAAA,GAAA2E,EAAA/C,GAAA+C,EAAA,SAEnBH,EAASS,MAAKN,EAAA/C,IAAG,yBAAA+C,EAAArE,OAAA,GAAAiE,EAAA,oBAEpBpF,MAAA,KAAAN,UAAA,GAAEuF,EAAKc,OACV,GAAC,CAAA3F,IAAA,gBAAAC,MAED,WAA8B,KAACxB,CAAA,CAzFF,CAASmH,EAAAA,wBAAnBnH,EACLoH,aAAe,CAAC,cAAe,c","sources":["../../../plugins/variants/src/VcfAdapter/VcfAdapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region, Feature } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport IntervalTree from '@flatten-js/interval-tree'\nimport { unzip } from '@gmod/bgzf-filehandle'\nimport VCF from '@gmod/vcf'\n\n// local\nimport VcfFeature from '../VcfFeature'\n\nconst readVcf = (f: string) => {\n  const header: string[] = []\n  const rest: string[] = []\n  f.split(/\\n|\\r\\n|\\r/)\n    .map(f => f.trim())\n    .filter(f => !!f)\n    .forEach(line => {\n      if (line.startsWith('#')) {\n        header.push(line)\n      } else if (line) {\n        rest.push(line)\n      }\n    })\n  return { header: header.join('\\n'), lines: rest }\n}\n\nfunction isGzip(buf: Buffer) {\n  return buf[0] === 31 && buf[1] === 139 && buf[2] === 8\n}\n\nexport default class VcfAdapter extends BaseFeatureDataAdapter {\n  public static capabilities = ['getFeatures', 'getRefNames']\n\n  protected vcfFeatures?: Promise<{\n    header: string\n    intervalTree: Record<string, IntervalTree>\n  }>\n\n  public async getHeader() {\n    const { header } = await this.setup()\n    return header\n  }\n\n  async getMetadata() {\n    const { header } = await this.setup()\n    const parser = new VCF({ header: header })\n    return parser.getMetadata()\n  }\n\n  // converts lines into an interval tree\n  public async setupP() {\n    const pm = this.pluginManager\n    const buf = await openLocation(this.getConf('vcfLocation'), pm).readFile()\n\n    const buffer = isGzip(buf) ? await unzip(buf) : buf\n\n    // 512MB  max chrome string length is 512MB\n    if (buffer.length > 536_870_888) {\n      throw new Error('Data exceeds maximum string length (512MB)')\n    }\n\n    const str = new TextDecoder().decode(buffer)\n    const { header, lines } = readVcf(str)\n    const intervalTree = {} as Record<string, IntervalTree>\n\n    for (const obj of lines.map((line, id) => {\n      const [refName, startP, , ref, , , , info] = line.split('\\t')\n      const start = +startP - 1\n      const def = start + ref.length\n      const end = +(info.match(/END=(\\d+)/)?.[1].trim() || def)\n      return { line, refName, start, end, id }\n    })) {\n      const key = obj.refName\n      if (!intervalTree[key]) {\n        intervalTree[key] = new IntervalTree()\n      }\n      intervalTree[key].insert([obj.start, obj.end], obj)\n    }\n\n    return { header, intervalTree }\n  }\n\n  public async setup() {\n    if (!this.vcfFeatures) {\n      this.vcfFeatures = this.setupP().catch(e => {\n        this.vcfFeatures = undefined\n        throw e\n      })\n    }\n    return this.vcfFeatures\n  }\n\n  public async getRefNames(_: BaseOptions = {}) {\n    const { intervalTree } = await this.setup()\n    return Object.keys(intervalTree)\n  }\n\n  public getFeatures(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      try {\n        const { start, end, refName } = region\n        const { header, intervalTree } = await this.setup()\n        const parser = new VCF({ header })\n        intervalTree[refName]?.search([start, end]).forEach(f =>\n          observer.next(\n            new VcfFeature({\n              variant: parser.parseLine(f.line),\n              parser,\n              id: `${this.id}-${f.id}`,\n            }),\n          ),\n        )\n        observer.complete()\n      } catch (e) {\n        observer.error(e)\n      }\n    }, opts.signal)\n  }\n\n  public freeResources(): void {}\n}\n"],"names":["readVcf","f","header","rest","split","map","trim","filter","forEach","line","startsWith","push","join","lines","isGzip","buf","VcfAdapter","_BaseFeatureDataAdapt","_getHeader","_getMetadata","_setupP","_setup","_getRefNames","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","vcfFeatures","_createClass","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$this$setup","wrap","_context","prev","next","this","setup","sent","abrupt","stop","_callee2","_yield$this$setup2","parser","_context2","VCF","getMetadata","_callee3","pm","buffer","str","_readVcf","intervalTree","_iterator","_step","obj","_context3","pluginManager","openLocation","getConf","readFile","unzip","t0","Error","TextDecoder","decode","_createForOfIteratorHelper","id","_info$match","_line$split","_line$split2","_slicedToArray","refName","startP","ref","info","start","def","end","match","s","n","done","IntervalTree","insert","err","e","_callee4","_this2","_context4","setupP","catch","undefined","_callee5","_yield$this$setup3","_args5","_context5","Object","keys","region","_ref","_this3","opts","ObservableCreate","_x","_callee6","observer","_intervalTree$refName","_yield$_this3$setup","_context6","search","VcfFeature","variant","parseLine","complete","error","signal","BaseFeatureDataAdapter","capabilities"],"sourceRoot":""}