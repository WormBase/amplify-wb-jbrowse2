{"version":3,"file":"static/js/1227.1b6760ba.chunk.js","mappings":"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","sources":["../../../plugins/menus/src/AboutWidget/components/AboutWidget.tsx","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode, getEnv } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { Typography, Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n  },\n  subtitle: {\n    margin: theme.spacing(1),\n  },\n  pluginList: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n}))\n\nconst AboutWidget = observer(function ({\n  model,\n}: {\n  model: IAnyStateTreeNode\n}) {\n  const { classes } = useStyles()\n  const { version } = getSession(model)\n  const { pluginManager } = getEnv(model)\n  const { plugins } = pluginManager as PluginManager\n  const corePlugins = new Set(\n    plugins\n      .filter(p => pluginManager.pluginMetadata[p.name]?.isCore)\n      .map(p => p.name),\n  )\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" align=\"center\">\n        JBrowse 2\n      </Typography>\n      <Typography variant=\"h6\" align=\"center\" className={classes.subtitle}>\n        {version}\n      </Typography>\n      <Typography align=\"center\">\n        JBrowse is a{' '}\n        <Link href=\"http://gmod.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          GMOD\n        </Link>{' '}\n        project\n      </Typography>\n      <br />\n      <Typography align=\"center\">\n        Â© 2019-2022 The Evolutionary Software Foundation\n      </Typography>\n      <div className={classes.pluginList}>\n        <Typography>External plugins loaded</Typography>\n        <ul>\n          {plugins\n            .filter(plugin => !corePlugins.has(plugin.name))\n            .map(plugin => {\n              const { url, name, version = '' } = plugin\n              const text = `${name} ${version || ''}`\n              return (\n                <li key={plugin.name}>\n                  {plugin.url ? (\n                    <Link target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {text}\n                    </Link>\n                  ) : (\n                    <Typography>{text}</Typography>\n                  )}\n                </li>\n              )\n            })}\n        </ul>\n        <Typography>Core plugins loaded</Typography>\n        <ul>\n          {plugins\n            .filter(plugin => corePlugins.has(plugin.name))\n            .map(plugin => (\n              <li key={plugin.name}>\n                <Typography>\n                  {plugin.name} {plugin.version || ''}\n                </Typography>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  )\n})\n\nexport default AboutWidget\n","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","root","margin","spacing","paddingTop","subtitle","pluginList","marginTop","observer","_ref","model","classes","version","getSession","pluginManager","getEnv","plugins","corePlugins","Set","filter","p","_pluginManager$plugin","pluginMetadata","name","isCore","map","_jsxs","className","children","_jsx","Typography","variant","align","Link","href","target","rel","plugin","has","url","text","concat","colorTransformations","primary","textPrimary","secondary","textSecondary","error","ownerState","transformedColor","color","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","slot","overridesResolver","props","styles","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","getLinkUtilityClass","useUtilityClasses","clsx","event","current","Object","keys","includes","Array","isArray","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}