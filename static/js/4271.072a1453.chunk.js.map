{"version":3,"file":"static/js/4271.072a1453.chunk.js","mappings":"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","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/ShareBookmarksDialog.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/sessionSharing.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\n\nimport {\n  Alert,\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport copy from 'copy-to-clipboard'\n\nimport { getSession } from '@jbrowse/core/util'\nimport { Dialog, ErrorMessage } from '@jbrowse/core/ui'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { shareSessionToDynamo } from '../sessionSharing'\nimport { GridBookmarkModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  flexItem: {\n    margin: 5,\n  },\n}))\n\nconst ShareBookmarksDialog = observer(function ({\n  onClose,\n  model,\n}: {\n  onClose: () => void\n  model: GridBookmarkModel\n}) {\n  const { classes } = useStyles()\n  const [url, setUrl] = useState('')\n  const [error, setError] = useState<unknown>()\n  const [loading, setLoading] = useState(true)\n  const session = getSession(model)\n  const { selectedBookmarks } = model\n  const shareAll = selectedBookmarks.length === 0\n  const bookmarksToShare =\n    selectedBookmarks.length === 0\n      ? model.allBookmarksModel\n      : model.sharedBookmarksModel\n\n  useEffect(() => {\n    let cancelled = false\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        setLoading(true)\n        const snap = getSnapshot(bookmarksToShare)\n\n        const locationUrl = new URL(window.location.href)\n        const result = await shareSessionToDynamo(\n          snap,\n          session.shareURL,\n          locationUrl.href,\n        )\n        if (!cancelled) {\n          const params = new URLSearchParams(locationUrl.search)\n          params.set('bookmarks', `share-${result.json.sessionId}`)\n          params.set('password', result.password)\n          locationUrl.search = params.toString()\n          setUrl(locationUrl.href)\n          setLoading(false)\n        }\n      } catch (e) {\n        setError(e)\n        session.notify(`${e}`, 'error')\n      } finally {\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      cancelled = true\n    }\n  }, [bookmarksToShare, session])\n  return (\n    <Dialog open onClose={onClose} title=\"Share bookmarks\">\n      <DialogContent\n        style={{ display: 'flex', flexFlow: 'column', gap: '5px' }}\n      >\n        <Alert severity=\"info\">\n          {shareAll ? (\n            <>\n              <span>All bookmarks will be shared.</span>\n              <br />\n              <span>\n                Use the checkboxes to select individual bookmarks to share.\n              </span>\n            </>\n          ) : (\n            'Only selected bookmarks will be shared.'\n          )}\n        </Alert>\n        <DialogContentText>\n          Copy the URL below to share your bookmarks.\n        </DialogContentText>\n        {error ? (\n          <ErrorMessage error={error} />\n        ) : loading ? (\n          <Typography>Generating short URL...</Typography>\n        ) : (\n          <TextField\n            label=\"URL\"\n            value={url}\n            InputProps={{ readOnly: true }}\n            variant=\"filled\"\n            fullWidth\n            onClick={event => {\n              const target = event.target as HTMLTextAreaElement\n              target.select()\n            }}\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          className={classes.flexItem}\n          data-testid=\"dialogShare\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          startIcon={<ContentCopyIcon />}\n          onClick={async () => {\n            copy(url)\n            session.notify('Copied to clipboard', 'success')\n            onClose()\n          }}\n        >\n          Copy share link\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default ShareBookmarksDialog\n","// duplicated from products/jbrowse-web/src/sessionSharing.ts ; could possibly be moved into a higher directory and shared between the two\nimport { toUrlSafeB64 } from './utils'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      [...window.crypto.getRandomValues(new Uint8Array(length * 2))]\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replaceAll(/[+/]/g, '')\n    .slice(0, length)\n}\n\nconst encrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  const Utf8 = await import('crypto-js/enc-utf8')\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: unknown,\n  url: string,\n  referer: string,\n) {\n  const sess = await toUrlSafeB64(JSON.stringify(session))\n  const password = generateUID(5)\n  const encryptedSession = await encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]\n  const url = `${baseUrl}?sessionId=${encodeURIComponent(sessionId)}`\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n"],"names":["useStyles","makeStyles","flexItem","margin","ShareBookmarksDialog","observer","_ref","onClose","model","classes","_useState","useState","_useState2","_slicedToArray","url","setUrl","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","session","getSession","selectedBookmarks","shareAll","length","bookmarksToShare","allBookmarksModel","sharedBookmarksModel","useEffect","cancelled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","snap","locationUrl","result","params","wrap","_context","prev","next","getSnapshot","URL","window","location","href","shareSessionToDynamo","shareURL","sent","URLSearchParams","search","set","concat","json","sessionId","password","toString","t0","notify","finish","stop","_jsxs","Dialog","open","title","children","DialogContent","style","display","flexFlow","gap","_jsx","Alert","severity","_Fragment","DialogContentText","ErrorMessage","Typography","TextField","label","value","InputProps","readOnly","variant","fullWidth","onClick","event","target","select","DialogActions","Button","className","color","disabled","startIcon","ContentCopyIcon","_callee2","_context2","copy","encrypt","text","AES","abrupt","_x","_x2","apply","arguments","decrypt","_ref2","Utf8","bytes","_x3","_x4","getErrorMsg","err","JSON","parse","message","e","_x5","_x6","_x7","_shareSessionToDynamo","_callee3","referer","sess","encryptedSession","data","response","_context3","toUrlSafeB64","stringify","btoa","_toConsumableArray","crypto","getRandomValues","Uint8Array","map","b","String","fromCharCode","join","replaceAll","slice","FormData","append","Date","now","fetch","method","mode","body","ok","Error","readSessionFromDynamo","_x8","_x9","_x10","_x11","_readSessionFromDynamo","_callee4","baseUrl","sessionQueryParam","signal","_context4","split","encodeURIComponent"],"sourceRoot":""}