{"version":3,"file":"static/js/4947.e54d372e.chunk.js","mappings":"sPAYMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,KAAM,CACJC,MAAO,OAwDX,WAAeC,EAAAA,EAAAA,WApDf,SAAyBC,GAOvB,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACPC,EAAYR,IAAZQ,QACRC,EAA2BH,EAAnBI,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EACtBE,GAAsBC,EAAAA,EAAAA,UAAS,GAADC,OAAIH,IAAYI,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvCK,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAElB,OACEI,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAASd,EAAae,MAAM,iBAAgBC,SAAA,EACvDL,EAAAA,EAAAA,MAACM,EAAAA,EAAa,CAACC,UAAWjB,EAAQN,KAAKqB,SAAA,EACrCG,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAJ,SAAC,8GAIZG,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,MAAOb,EACPc,SAAU,SAAAC,GAAK,OAAId,EAAOc,EAAMC,OAAOH,MAAM,EAC7CI,YAAY,oCAGhBf,EAAAA,EAAAA,MAACgB,EAAAA,EAAa,CAAAX,SAAA,EACZG,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,KAAK,SACLC,WAAS,EACTC,QAAS,WACPlC,EAAMmC,aACI,KAARzB,GAAe0B,OAAOC,OAAO3B,QAAc4B,GAAN5B,GAEvCT,GACF,EAAEgB,SACH,YAGDG,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,YACNG,QAAS,kBAAMjC,GAAa,EAACgB,SAC9B,gBAMT,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetMaxHeight.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  root: {\n    width: 500,\n  },\n})\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Filter options\">\n      <DialogContent className={classes.root}>\n        <Typography>\n          Set max height for the track. For example, you can increase this if\n          the layout says &quot;Max height reached&quot;\n        </Typography>\n        <TextField\n          value={max}\n          onChange={event => setMax(event.target.value)}\n          placeholder=\"Enter max height for layout\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          autoFocus\n          onClick={() => {\n            model.setMaxHeight(\n              max !== '' && !Number.isNaN(+max) ? +max : undefined,\n            )\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => handleClose()}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"names":["useStyles","makeStyles","root","width","observer","props","model","handleClose","classes","_model$maxHeight","maxHeight","_useState","useState","concat","_useState2","_slicedToArray","max","setMax","_jsxs","Dialog","open","onClose","title","children","DialogContent","className","_jsx","Typography","TextField","value","onChange","event","target","placeholder","DialogActions","Button","variant","color","type","autoFocus","onClick","setMaxHeight","Number","isNaN","undefined"],"sourceRoot":""}