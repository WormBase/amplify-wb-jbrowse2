{"version":3,"file":"static/js/18.629da6ae.chunk.js","mappings":"qOAKA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCC,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,KAETC,cAAe,CACbD,MAAO,YAII,SAASE,EAA6BC,GAQjD,IARkD,YACpDC,EACAC,SAAUC,EACVC,SAAUC,GAKXL,EACC,MAAM,QAAEM,GAAYf,KACbW,EAAUK,IAAeC,EAAAA,EAAAA,UAAS,GAADC,OAAIN,KACrCC,EAAUM,IAAeF,EAAAA,EAAAA,UAAS,GAADC,OAAIJ,IACtCM,GAAiBC,OAAOC,OAAOX,GAC/BY,GAAiBF,OAAOC,OAAOT,GACrC,OACEW,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CACLC,SAAS,KACTC,MAAI,EACJC,QAASA,IAAMlB,IACfmB,MAAM,4BAA2BC,SAAA,EAEjCN,EAAAA,EAAAA,MAACO,EAAAA,EAAa,CAACC,UAAWjB,EAAQR,cAAcuB,SAAA,EAC9CG,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,yDACNH,UAAWjB,EAAQZ,QACnBiC,MAAOzB,EACP0B,WAAajB,EAAiC,GAAjB,eAC7BkB,OAAQlB,EACRmB,SAAUC,GAASxB,EAAYwB,EAAMC,OAAOL,UAE9CH,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,uDACNH,UAAWjB,EAAQZ,QACnBiC,MAAOvB,EACPwB,WAAad,EAAiC,GAAjB,eAC7Be,OAAQf,EACRgB,SAAUC,GAASrB,EAAYqB,EAAMC,OAAOL,aAIhDZ,EAAAA,EAAAA,MAACkB,EAAAA,EAAa,CAAAZ,SAAA,EACZG,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,QAASA,IACPlC,EAAY,CACVG,UAAWA,EACXF,UAAWA,IAGfkC,UAAWzB,IAAkBG,EAC7BuB,MAAM,UACNC,QAAQ,YAAWjB,SACpB,YAGDG,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,QAASA,IAAMlC,IACfoC,MAAM,YACNE,WAAS,EACTD,QAAQ,YAAWjB,SACpB,gBAMT,C","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeatureSettingsDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, DialogContent, DialogActions, TextField } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  formElt: {\n    margin: theme.spacing(3),\n    width: 400,\n  },\n  dialogContent: {\n    width: '80em',\n  },\n}))\n\nexport default function SequenceFeatureSettingsDialog({\n  handleClose,\n  intronBp: intronBpArg,\n  upDownBp: upDownBpArg,\n}: {\n  handleClose: (arg?: { intronBp: number; upDownBp: number }) => void\n  intronBp: number\n  upDownBp: number\n}) {\n  const { classes } = useStyles()\n  const [intronBp, setIntronBp] = useState(`${intronBpArg}`)\n  const [upDownBp, setUpDownBp] = useState(`${upDownBpArg}`)\n  const intronBpValid = !Number.isNaN(+intronBp)\n  const upDownBpValid = !Number.isNaN(+upDownBp)\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => handleClose()}\n      title=\"Feature sequence settings\"\n    >\n      <DialogContent className={classes.dialogContent}>\n        <TextField\n          label=\"Number of intronic bases around splice site to display\"\n          className={classes.formElt}\n          value={intronBp}\n          helperText={!intronBpValid ? 'Not a number' : ''}\n          error={!intronBpValid}\n          onChange={event => setIntronBp(event.target.value)}\n        />\n        <TextField\n          label=\"Number of bases up/down stream of feature to display\"\n          className={classes.formElt}\n          value={upDownBp}\n          helperText={!upDownBpValid ? 'Not a number' : ''}\n          error={!upDownBpValid}\n          onChange={event => setUpDownBp(event.target.value)}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() =>\n            handleClose({\n              upDownBp: +upDownBp,\n              intronBp: +intronBp,\n            })\n          }\n          disabled={!intronBpValid || !upDownBpValid}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          autoFocus\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["useStyles","makeStyles","theme","formElt","margin","spacing","width","dialogContent","SequenceFeatureSettingsDialog","_ref","handleClose","intronBp","intronBpArg","upDownBp","upDownBpArg","classes","setIntronBp","useState","concat","setUpDownBp","intronBpValid","Number","isNaN","upDownBpValid","_jsxs","Dialog","maxWidth","open","onClose","title","children","DialogContent","className","_jsx","TextField","label","value","helperText","error","onChange","event","target","DialogActions","Button","onClick","disabled","color","variant","autoFocus"],"sourceRoot":""}