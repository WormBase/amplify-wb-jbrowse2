{"version":3,"file":"static/js/1068.569ac574.chunk.js","mappings":"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","sources":["../../../packages/core/pluggableElementTypes/models/components/SaveTrackData.tsx","../../../node_modules/@mui/icons-material/GetApp.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\nimport { saveAs } from 'file-saver'\nimport { observer } from 'mobx-react'\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui'\nimport {\n  getSession,\n  getContainingView,\n  Feature,\n  Region,\n  AbstractTrackModel,\n  AbstractSessionModel,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\n\n// icons\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nconst useStyles = makeStyles()({\n  root: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n})\n\nasync function fetchFeatures(\n  track: IAnyStateTreeNode,\n  regions: Region[],\n  signal?: AbortSignal,\n) {\n  const { rpcManager } = getSession(track)\n  const adapterConfig = getConf(track, ['adapter'])\n  const sessionId = 'getFeatures'\n  return rpcManager.call(sessionId, 'CoreGetFeatures', {\n    adapterConfig,\n    regions,\n    sessionId,\n    signal,\n  }) as Promise<Feature[]>\n}\ninterface FileTypeExporter {\n  name: string\n  extension: string\n  callback: (arg: {\n    features: Feature[]\n    session: AbstractSessionModel\n    assemblyName: string\n  }) => Promise<string> | string\n}\nconst SaveTrackDataDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: AbstractTrackModel & {\n    saveTrackFileFormatOptions: () => Record<string, FileTypeExporter>\n  }\n  handleClose: () => void\n}) {\n  const options = model.saveTrackFileFormatOptions()\n  const { classes } = useStyles()\n  const [error, setError] = useState<unknown>()\n  const [features, setFeatures] = useState<Feature[]>()\n  const [type, setType] = useState(Object.keys(options)[0])\n  const [str, setStr] = useState('')\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const view = getContainingView(model) as { visibleRegions?: Region[] }\n        setError(undefined)\n        setFeatures(await fetchFeatures(model, view.visibleRegions || []))\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [model])\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const view = getContainingView(model)\n        const session = getSession(model)\n        if (!features) {\n          return\n        }\n        const generator = options[type] || {\n          callback: () => 'Unknown',\n        }\n        setStr(\n          await generator.callback({\n            features,\n            session,\n            assemblyName: view.visibleRegions[0].assemblyName,\n          }),\n        )\n      } catch (e) {\n        setError(e)\n      }\n    })()\n  }, [type, features, options, model])\n\n  const loading = !features\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose} title=\"Save track data\">\n      <DialogContent className={classes.root}>\n        {error ? <ErrorMessage error={error} /> : null}\n        {features && !features.length ? (\n          <Typography>No features found</Typography>\n        ) : null}\n\n        <FormControl>\n          <FormLabel>File type</FormLabel>\n          <RadioGroup value={type} onChange={e => setType(e.target.value)}>\n            {Object.entries(options).map(([key, val]) => (\n              <FormControlLabel\n                key={key}\n                value={key}\n                control={<Radio />}\n                label={val.name}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          multiline\n          minRows={5}\n          maxRows={15}\n          fullWidth\n          value={\n            loading\n              ? 'Loading...'\n              : str.length > 100_000\n              ? 'Too large to view here, click \"Download\" to results to file'\n              : str\n          }\n          InputProps={{\n            readOnly: true,\n            classes: {\n              input: classes.textAreaFont,\n            },\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const ext = options[type].extension\n            const blob = new Blob([str], { type: 'text/plain;charset=utf-8' })\n            saveAs(blob, `jbrowse_track_data.${ext}`)\n          }}\n          startIcon={<GetAppIcon />}\n        >\n          Download\n        </Button>\n\n        <Button variant=\"contained\" type=\"submit\" onClick={() => handleClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SaveTrackDataDialog\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span')({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["useStyles","makeStyles","root","width","textAreaFont","fontFamily","fetchFeatures","_x","_x2","_x3","_fetchFeatures","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","track","regions","signal","_getSession","rpcManager","adapterConfig","sessionId","wrap","_context3","prev","next","getSession","getConf","abrupt","call","stop","SaveTrackDataDialog","observer","_ref","model","handleClose","options","saveTrackFileFormatOptions","classes","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","features","setFeatures","_useState5","Object","keys","_useState6","type","setType","_useState7","_useState8","str","setStr","useEffect","_callee","view","_context","getContainingView","undefined","t0","visibleRegions","t1","sent","t2","console","_callee2","session","generator","_context2","callback","assemblyName","loading","_jsxs","Dialog","maxWidth","open","onClose","title","children","DialogContent","className","_jsx","ErrorMessage","length","Typography","FormControl","FormLabel","RadioGroup","value","onChange","e","target","entries","map","_ref4","_ref5","key","val","FormControlLabel","control","Radio","label","name","TextField","variant","multiline","minRows","maxRows","fullWidth","InputProps","readOnly","input","DialogActions","Button","onClick","ext","extension","blob","Blob","saveAs","concat","startIcon","GetAppIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","RadioButtonIconRoot","styled","position","display","RadioButtonIconBackground","RadioButtonUncheckedIcon","transform","RadioButtonIconDot","RadioButtonCheckedIcon","theme","ownerState","_extends","left","transition","transitions","create","easing","easeIn","duration","shortest","checked","easeOut","props","_props$checked","_props$classes","fontSize","background","dot","_excluded","RadioRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","slot","overridesResolver","styles","capitalize","color","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","_defineProperty","radioClasses","disabled","defaultCheckedIcon","RadioButtonIcon","defaultIcon","React","inProps","ref","_defaultIcon$props$fo","_defaultCheckedIcon$p","a","b","useThemeProps","checkedProp","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","nameProp","onChangeProp","_props$size","size","other","_objectWithoutPropertiesLoose","slots","composeClasses","getRadioUtilityClass","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","String","clsx","generateUtilityClass","generateUtilityClasses","actions","defaultValue","valueProp","rootRef","_useControlled","useControlled","controlled","_useControlled2","setValueState","focus","current","querySelector","handleRef","useForkRef","useId","contextValue","event","RadioGroupContext","Provider","FormGroup","role"],"sourceRoot":""}