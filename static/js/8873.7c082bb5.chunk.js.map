{"version":3,"file":"static/js/8873.7c082bb5.chunk.js","mappings":"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","sources":["../../../plugins/variants/src/VcfTabixAdapter/VcfTabixAdapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { Feature } from '@jbrowse/core/util'\nimport { TabixIndexedFile } from '@gmod/tabix'\nimport VcfParser from '@gmod/vcf'\n\n// local\nimport VcfFeature from '../VcfFeature'\n\nexport default class extends BaseFeatureDataAdapter {\n  private configured?: Promise<{\n    vcf: TabixIndexedFile\n    parser: VcfParser\n  }>\n\n  private async configurePre() {\n    const pm = this.pluginManager\n    const vcfGzLocation = this.getConf('vcfGzLocation')\n    const location = this.getConf(['index', 'location'])\n    const indexType = this.getConf(['index', 'indexType'])\n\n    const filehandle = openLocation(vcfGzLocation, pm)\n    const isCSI = indexType === 'CSI'\n    const vcf = new TabixIndexedFile({\n      filehandle,\n      csiFilehandle: isCSI ? openLocation(location, pm) : undefined,\n      tbiFilehandle: !isCSI ? openLocation(location, pm) : undefined,\n      chunkCacheSize: 50 * 2 ** 20,\n      chunkSizeLimit: 1000000000,\n    })\n\n    const header = await vcf.getHeader()\n    return {\n      vcf,\n      parser: new VcfParser({ header }),\n    }\n  }\n\n  protected async configure() {\n    if (!this.configured) {\n      this.configured = this.configurePre().catch(e => {\n        this.configured = undefined\n        throw e\n      })\n    }\n    return this.configured\n  }\n\n  public async getRefNames(opts: BaseOptions = {}) {\n    const { vcf } = await this.configure()\n    return vcf.getReferenceSequenceNames(opts)\n  }\n\n  async getHeader() {\n    const { vcf } = await this.configure()\n    return vcf.getHeader()\n  }\n\n  async getMetadata() {\n    const { parser } = await this.configure()\n    return parser.getMetadata()\n  }\n\n  public getFeatures(query: NoAssemblyRegion, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const { refName, start, end } = query\n      const { vcf, parser } = await this.configure()\n      await vcf.getLines(refName, start, end, {\n        lineCallback: (line, fileOffset) => {\n          observer.next(\n            new VcfFeature({\n              variant: parser.parseLine(line),\n              parser,\n              id: `${this.id}-vcf-${fileOffset}`,\n            }),\n          )\n        },\n        ...opts,\n      })\n      observer.complete()\n    }, opts.signal)\n  }\n\n  public freeResources(/* { region } */): void {}\n}\n"],"names":["_default","_BaseFeatureDataAdapt","_configurePre","_configure","_getRefNames","_getHeader","_getMetadata","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","configured","_createClass","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pm","vcfGzLocation","location","indexType","filehandle","isCSI","vcf","header","wrap","_context","prev","next","this","pluginManager","getConf","openLocation","TabixIndexedFile","csiFilehandle","undefined","tbiFilehandle","chunkCacheSize","Math","pow","chunkSizeLimit","getHeader","sent","abrupt","parser","VcfParser","stop","_callee2","_this2","_context2","configurePre","catch","e","_callee3","opts","_yield$this$configure","_args3","_context3","configure","getReferenceSequenceNames","_callee4","_yield$this$configure2","_context4","_callee5","_yield$this$configure3","_context5","getMetadata","query","_ref","_this3","ObservableCreate","_x","_callee6","observer","refName","start","end","_yield$_this3$configu","_context6","getLines","_objectSpread","lineCallback","line","fileOffset","VcfFeature","variant","parseLine","id","complete","signal","BaseFeatureDataAdapter"],"sourceRoot":""}