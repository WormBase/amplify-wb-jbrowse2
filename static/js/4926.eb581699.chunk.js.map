{"version":3,"file":"static/js/4926.eb581699.chunk.js","mappings":"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","sources":["../../../plugins/legacy-jbrowse/src/JBrowse1Connection/util.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigParse.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigLoad.ts","../../../node_modules/get-value/index.js","../../../node_modules/is-primitive/index.js","../../../node_modules/isobject/index.js","../../../node_modules/set-value/index.js","../../../node_modules/set-value/node_modules/is-plain-object/index.js"],"sourcesContent":["import getValue from 'get-value'\nimport { Track, Source } from './types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTrack(arg: any): arg is Track {\n  return arg?.label && typeof arg.label === 'string'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isSource(arg: any): arg is Source {\n  return arg?.url && typeof arg.url === 'string'\n}\n\n/**\n * updates a with values from b, recursively\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Obj = Record<string, any>\nexport function deepUpdate(a: Obj, b: Obj): Obj {\n  for (const prop of Object.keys(b)) {\n    if (\n      prop in a &&\n      typeof b[prop] === 'object' &&\n      typeof a[prop] === 'object'\n    ) {\n      deepUpdate(a[prop], b[prop])\n    } else if (a[prop] === undefined || b[prop] !== undefined) {\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * replace variables in a template string with values\n *\n * @param template - String with variable names in curly brackets\n * e.g., `http://foo/{bar}?arg={baz.foo}`\n * @param fillWith - object with attribute-value mappings\n * e.g., `{ 'bar': 'someurl', 'baz': { 'foo': 42 } }`\n * @returns the template string with variables in fillWith replaced\n * e.g., 'htp://foo/someurl?arg=valueforbaz'\n */\nexport function fillTemplate(template: string, fillWith: Obj): string {\n  return template.replaceAll(/{([\\s\\w.]+)}/g, (match, varName) => {\n    varName = varName.replaceAll(/\\s+/g, '')\n    const fill = getValue(fillWith, varName)\n    if (fill !== undefined) {\n      return typeof fill === 'function' ? fill(varName) : fill\n    }\n    if (fillWith.callback) {\n      // @ts-expect-error\n      const v = fillWith.callback.call(this, varName)\n      if (v !== undefined) {\n        return v\n      }\n    }\n    return match\n  })\n}\n\n/**\n * Clones objects (including DOM nodes) and all children.\n * Warning: do not clone cyclic structures\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n * @param src - The object to clone\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function clone(src: any): any {\n  if (\n    !src ||\n    typeof src !== 'object' ||\n    Object.prototype.toString.call(src) === '[object Function]'\n  ) {\n    // null, undefined, any non-object, or function\n    return src // anything\n  }\n  if (src.nodeType && 'cloneNode' in src) {\n    // DOM Node\n    return src.cloneNode(true) // Node\n  }\n  if (src instanceof Date) {\n    // Date\n    return new Date(src.getTime()) // Date\n  }\n  if (src instanceof RegExp) {\n    // RegExp\n    return new RegExp(src) // RegExp\n  }\n  let r\n  let i\n  let l\n  if (Array.isArray(src)) {\n    // array\n    r = []\n    for (i = 0, l = src.length; i < l; ++i) {\n      if (i in src) {\n        r[i] = clone(src[i])\n      }\n    }\n    // we don't clone functions for performance reasons\n    //    }else if(d.isFunction(src)){\n    //      // function\n    //      r = function(){ return src.apply(this, arguments); };\n  } else {\n    // generic objects\n    r = src.constructor ? new src.constructor() : {}\n  }\n  return mixin(r, src, clone)\n}\n\n/**\n * Copies/adds all properties of source to dest; returns dest.\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n *\n * All properties, including functions (sometimes termed \"methods\"), excluding\n * any non-standard extensions found in Object.prototype, are copied/added to\n * dest. Copying/adding each particular property is delegated to copyFunc\n * (if any); copyFunc defaults to the Javascript assignment operator if not\n * provided. Notice that by default, mixin executes a so-called \"shallow copy\"\n * and aggregate types are copied/added by reference.\n * @param dest - The object to which to copy/add all properties contained in\n * source.\n * @param source - The object from which to draw all properties to copy into dest.\n * @param copyFunc - The process used to copy/add a property in source; defaults\n * to the Javascript assignment operator.\n * @returns dest, as modified\n */\nfunction mixin(dest: Obj, source: Obj, copyFunc: Function): Obj {\n  let name\n  let s\n  const empty = {}\n  for (name in source) {\n    // the (!(name in empty) || empty[name] !== s) condition avoids copying\n    // properties in \"source\" inherited from Object.prototype.\t For example,\n    // if dest has a custom toString() method, don't overwrite it with the\n    // toString() method that source inherited from Object.prototype\n    s = source[name]\n    if (\n      !(name in dest) ||\n      // @ts-expect-error\n      (dest[name] !== s && (!(name in empty) || empty[name] !== s))\n    ) {\n      dest[name] = copyFunc ? copyFunc(s) : s\n    }\n  }\n\n  return dest // Object\n}\n","/* eslint no-cond-assign: [\"error\", \"except-parens\"] */\nimport getValue from 'get-value'\nimport setValue from 'set-value'\nimport { objectHash } from '@jbrowse/core/util'\nimport { isSource, isTrack } from './util'\nimport { Config, Track, Source, Store, Names } from './types'\n\nexport function parseJB1Json(config: Config | string, url: string): Config {\n  if (typeof config === 'string') {\n    let parsedConf\n    try {\n      parsedConf = JSON.parse(config)\n    } catch (error) {\n      throw new Error(`${error} when parsing configuration.`)\n    }\n    return regularizeConf(parsedConf, url)\n  }\n  return regularizeConf(config, url)\n}\n\nexport function parseJB1Conf(config: string, url: string): Config {\n  let parsedConf\n  try {\n    parsedConf = parse(config, url)\n  } catch (error) {\n    throw new Error(`${error} when parsing configuration.`)\n  }\n  return regularizeConf(parsedConf, url)\n}\n\nfunction isAlwaysArray(varName: string): boolean {\n  if (varName === 'include') {\n    return true\n  }\n  return false\n}\n\nfunction parse(text: string, url: string): Config {\n  let section: string[] = []\n  let keyPath: string[] | undefined\n  let operation: string\n  let value: string | undefined\n  const data: Config = { tracks: {} }\n  let lineNumber: number\n\n  function recordVal(): void {\n    if (value !== undefined) {\n      let parsedValue:\n        | string\n        | number\n        | boolean\n        | string[]\n        | number[]\n        | boolean[]\n      try {\n        // parse json\n        const match = value.match(/^json:(.+)/i)\n        if (match) {\n          parsedValue = JSON.parse(match[1])\n        }\n        // parse numbers if it looks numeric\n        else if (/^[+-]?[\\d.,]+([eE][-+]?\\d+)?$/.test(value)) {\n          parsedValue = parseFloat(value.replaceAll(',', ''))\n        } else {\n          parsedValue = value\n        }\n\n        if (!keyPath) {\n          throw new Error(`Error parsing in section ${section.join(' - ')}`)\n        }\n        const path = [...section, ...keyPath].join('.')\n        if (operation === '+=') {\n          let existing = getValue(data, path)\n          if (existing) {\n            if (!Array.isArray(existing)) {\n              existing = [existing]\n            }\n          } else {\n            existing = []\n          }\n\n          existing.push(parsedValue)\n          parsedValue = existing\n        }\n        if (parsedValue === 'true') {\n          parsedValue = true\n        }\n        if (parsedValue === 'false') {\n          parsedValue = false\n        }\n        setValue(data, path, parsedValue)\n      } catch (e) {\n        throw new Error(\n          `syntax error${url ? ` in ${url}` : ''}${\n            lineNumber ? ` at line ${lineNumber - 1}` : ''\n          }`,\n        )\n      }\n    }\n  }\n\n  text.split(/\\n|\\r\\n|\\r/).forEach((textLine, i): void => {\n    lineNumber = i + 1\n    const line = textLine.replace(/^\\s*#.+/, '')\n\n    // new section\n    let match: RegExpMatchArray | null\n    if ((match = line.match(/^\\s*\\[([^\\]]+)/))) {\n      // new section\n      recordVal()\n      keyPath = undefined\n      value = undefined\n      section = match[1].trim().split(/\\s*\\.\\s*/)\n      if (section.length === 1 && section[0].toLowerCase() === 'general') {\n        section = []\n      }\n    }\n    // new value\n    else if (\n      (match = line.match(\n        value === undefined ? /^([^+=]+)(\\+?=)(.*)/ : /^(\\S[^+=]+)(\\+?=)(.*)/,\n      ))\n    ) {\n      recordVal()\n      keyPath = match[1].trim().split(/\\s*\\.\\s*/)\n      ;[, , operation] = match\n      if (isAlwaysArray([...section, ...keyPath].join('.'))) {\n        operation = '+='\n      }\n      value = match[3].trim()\n    }\n    // add to existing array value\n    else if (\n      keyPath !== undefined &&\n      (match = line.match(/^\\s{0,4}\\+\\s*(.+)/))\n    ) {\n      recordVal()\n      operation = '+='\n      value = match[1].trim()\n    }\n    // add to existing value\n    else if (value !== undefined && (match = line.match(/^\\s+(\\S.*)/))) {\n      value += value.length ? ` ${match[1].trim()}` : match[1].trim()\n    }\n    // done with last value\n    else {\n      recordVal()\n      keyPath = undefined\n      value = undefined\n    }\n  })\n\n  recordVal()\n\n  return data\n}\n\n/**\n * Applies defaults and any other necessary tweaks to the loaded configuration.\n * @param conf - the object containing the configuration, which it modifies\n * in-place\n * @param url - URL of the config file\n * @returns the same object it was passed\n */\nexport function regularizeConf(conf: Config, url: string): Config {\n  // if tracks is not an array, convert it to one\n  if (conf.tracks && !Array.isArray(conf.tracks)) {\n    // if it's a single track config, wrap it in an arrayref\n    if (isTrack(conf.tracks)) {\n      conf.tracks = [conf.tracks]\n    }\n    // otherwise, coerce it to an array\n    else {\n      const tracks: Track[] = []\n      for (const label of Object.keys(conf.tracks)) {\n        const track = conf.tracks[label]\n        if (isTrack(track)) {\n          tracks.push(track)\n        } else {\n          tracks.push({ label, ...track })\n        }\n      }\n      conf.tracks = tracks\n    }\n  }\n\n  // regularize trackMetadata.sources\n  const meta = conf.trackMetadata\n  if (meta?.sources) {\n    // if it's a single source config, wrap it in an arrayref\n    if (typeof meta.sources === 'string') {\n      meta.sources = [meta.sources]\n    }\n    if (isSource(meta.sources)) {\n      meta.sources = [meta.sources]\n    }\n\n    if (!Array.isArray(meta.sources)) {\n      const sources: Source[] = []\n      for (const name of Object.keys(meta.sources)) {\n        const source = meta.sources[name]\n        if (!('name' in source)) {\n          source.name = name\n        }\n        sources.push(source)\n      }\n      meta.sources = sources\n    }\n\n    // coerce any string source defs to be URLs, and try to detect their types\n    meta.sources = meta.sources.map((sourceDef: string | Source): Source => {\n      if (typeof sourceDef === 'string') {\n        const newSourceDef: Source = { url: sourceDef }\n        const typeMatch = sourceDef.match(/\\.(\\w+)$/)\n        if (typeMatch) {\n          newSourceDef.type = typeMatch[1].toLowerCase()\n        }\n        return newSourceDef\n      }\n      return sourceDef\n    })\n  }\n\n  conf.sourceUrl = conf.sourceUrl || url\n  if (conf.sourceUrl.startsWith('/')) {\n    conf.sourceUrl = new URL(conf.sourceUrl, window.location.href).href\n  }\n  conf.baseUrl = conf.baseUrl || new URL('.', conf.sourceUrl).href\n  if (conf.baseUrl.length && !conf.baseUrl.endsWith('/')) {\n    conf.baseUrl += '/'\n  }\n\n  if (conf.sourceUrl) {\n    // set a default baseUrl in each of the track and store confs, and the names\n    // conf, if needed\n    const addBase: (Track | Store | Names)[] = []\n    if (conf.tracks) {\n      addBase.push(...conf.tracks)\n    }\n    if (conf.stores) {\n      addBase.push(...Object.values(conf.stores))\n    }\n    if (conf.names) {\n      addBase.push(conf.names)\n    }\n\n    addBase.forEach((t): void => {\n      if (!t.baseUrl) {\n        t.baseUrl = conf.baseUrl || '/'\n      }\n    })\n\n    // resolve the refSeqs and nameUrl if present\n    if (conf.refSeqs && typeof conf.refSeqs === 'string') {\n      conf.refSeqs = new URL(conf.refSeqs, conf.sourceUrl).href\n    }\n    if (conf.nameUrl) {\n      conf.nameUrl = new URL(conf.nameUrl, conf.sourceUrl).href\n    }\n  }\n\n  conf.stores = conf.stores || {}\n  ;(conf.tracks || []).forEach((trackConfig: Track): void => {\n    // if there is a `config` subpart, just copy its keys in to the top-level\n    // config\n    if (trackConfig.config) {\n      const c = trackConfig.config\n      delete trackConfig.config\n      trackConfig = { ...c, ...trackConfig }\n    }\n\n    // skip if it's a new-style track def\n    if (trackConfig.store) {\n      return\n    }\n\n    let trackClassName: string\n    if (trackConfig.type === 'FeatureTrack') {\n      trackClassName = 'JBrowse/View/Track/HTMLFeatures'\n    } else if (trackConfig.type === 'ImageTrack') {\n      trackClassName = 'JBrowse/View/Track/FixedImage'\n    } else if (trackConfig.type === 'ImageTrack.Wiggle') {\n      trackClassName = 'JBrowse/View/Track/FixedImage/Wiggle'\n    } else if (trackConfig.type === 'SequenceTrack') {\n      trackClassName = 'JBrowse/View/Track/Sequence'\n    } else {\n      trackClassName = regularizeClass('JBrowse/View/Track', trackConfig.type)\n    }\n\n    trackConfig.type = trackClassName\n\n    synthesizeTrackStoreConfig(conf, trackConfig)\n\n    if (trackConfig.histograms) {\n      if (!trackConfig.histograms.baseUrl) {\n        trackConfig.histograms.baseUrl = trackConfig.baseUrl\n      }\n      synthesizeTrackStoreConfig(conf, trackConfig.histograms)\n    }\n  })\n\n  return conf\n}\n\n/**\n * prefix class name with `root` if it contains no slashes\n * @param root - Prefix root\n * @param className - class name\n */\nfunction regularizeClass(root: string, className: string | undefined): string {\n  if (!className) {\n    return ''\n  }\n  if (!className.includes('/')) {\n    className = `${root}/${className}`\n  }\n  className = className.replace(/^\\//, '')\n  return className\n}\n\nfunction guessStoreClass(\n  trackConfig: Track | undefined,\n  urlTemplate: string,\n): string {\n  if (!trackConfig) {\n    return ''\n  }\n  if (trackConfig.type && trackConfig.type.includes('/FixedImage')) {\n    return `JBrowse/Store/TiledImage/Fixed${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.jsonz?$/i.test(urlTemplate)) {\n    return `JBrowse/Store/SeqFeature/NCList${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.bam$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BAM'\n  }\n  if (/\\.cram$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/CRAM'\n  }\n  if (/\\.gff3?$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3'\n  }\n  if (/\\.bed$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BED'\n  }\n  if (/\\.vcf.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/VCFTabix'\n  }\n  if (/\\.gff3?.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3Tabix'\n  }\n  if (/\\.bed.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BEDTabix'\n  }\n  if (/\\.(bw|bigwig)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigWig'\n  }\n  if (/\\.(bb|bigbed)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigBed'\n  }\n  if (/\\.(fa|fasta)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/IndexedFasta'\n  }\n  if (/\\.(fa|fasta)\\.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BgzipIndexedFasta'\n  }\n  if (/\\.2bit$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/TwoBit'\n  }\n  if (trackConfig.type && trackConfig.type.endsWith('/Sequence')) {\n    return 'JBrowse/Store/Sequence/StaticChunked'\n  }\n  return ''\n}\n\nfunction synthesizeTrackStoreConfig(\n  mainConf: Config,\n  trackConfig: Track,\n): void {\n  // figure out what data store class to use with the track, applying some\n  // defaults if it is not explicit in the configuration\n  const { urlTemplate = '' } = trackConfig\n\n  const storeClass = trackConfig.storeClass\n    ? regularizeClass('JBrowse/Store', trackConfig.storeClass)\n    : guessStoreClass(trackConfig, urlTemplate)\n\n  if (!storeClass) {\n    console.warn(\n      `Unable to determine an appropriate data store to use with track '${trackConfig.label}', please explicitly specify a storeClass in the configuration.`,\n    )\n    return\n  }\n\n  // synthesize a separate store conf\n  const storeConf: Store = { ...trackConfig, type: storeClass }\n\n  // if this is the first sequence store we see, and we have no refseqs store\n  // defined explicitly, make this the refseqs store.\n  storeConf.name =\n    (storeClass === 'JBrowse/Store/Sequence/StaticChunked' ||\n      storeClass === 'JBrowse/Store/Sequence/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/TwoBit' ||\n      storeClass === 'JBrowse/Store/Sequence/TwoBit' ||\n      trackConfig.useAsRefSeqStore) &&\n    !mainConf.stores?.refseqs\n      ? 'refseqs'\n      : `store${objectHash(storeConf)}`\n  // record it\n  if (!mainConf.stores) {\n    mainConf.stores = {}\n  }\n  mainConf.stores[storeConf.name] = storeConf\n\n  // connect it to the track conf\n  trackConfig.store = storeConf.name\n}\n","import { openLocation } from '@jbrowse/core/util/io'\nimport { parseJB1Json, parseJB1Conf, regularizeConf } from './jb1ConfigParse'\nimport { clone, deepUpdate, fillTemplate } from './util'\nimport {\n  JBLocation,\n  UriLocation,\n  LocalPathLocation,\n  Config,\n  Track,\n  Include,\n} from './types'\n\nfunction isUriLocation(location: JBLocation): location is UriLocation {\n  return (location as UriLocation).uri !== undefined\n}\n\nfunction isLocalPathLocation(\n  location: JBLocation,\n): location is LocalPathLocation {\n  return (location as LocalPathLocation).localPath !== undefined\n}\n\nexport async function fetchJb1(\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  dataRoot: JBLocation = { uri: '', locationType: 'UriLocation' },\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  baseConfig: Config = {\n    include: ['{dataRoot}/trackList.json', '{dataRoot}/tracks.conf'],\n  },\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  baseConfigRoot: JBLocation = { uri: '', locationType: 'UriLocation' },\n): Promise<Config> {\n  const protocol = 'uri' in dataRoot ? 'uri' : 'localPath'\n  const dataRootReg = JSON.parse(JSON.stringify(dataRoot))\n  let dataRootLocation = ''\n  if (isUriLocation(dataRoot)) {\n    dataRootLocation = dataRoot.uri\n  }\n  if (isLocalPathLocation(dataRoot)) {\n    dataRootLocation = dataRoot.localPath\n  }\n  if (dataRootLocation.endsWith('/')) {\n    dataRootReg[protocol] = dataRootLocation.slice(0, -1)\n  }\n  if (\n    (isUriLocation(baseConfigRoot) && baseConfigRoot.uri) ||\n    (isLocalPathLocation(baseConfigRoot) && baseConfigRoot.localPath)\n  ) {\n    const baseProtocol = 'uri' in baseConfigRoot ? 'uri' : 'localPath'\n    let baseConfigLocation = ''\n    if (isUriLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.uri\n    }\n    if (isLocalPathLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.localPath\n    }\n    if (baseConfigLocation.endsWith('/')) {\n      baseConfigLocation = baseConfigLocation.slice(0, -1)\n    }\n    let newConfig: Config = {}\n    for (const conf of ['jbrowse.conf', 'jbrowse_conf.json']) {\n      let fetchedConfig = null\n      try {\n        // @ts-expect-error\n        fetchedConfig = await fetchConfigFile({\n          [baseProtocol]: `${baseConfigLocation}/${conf}`,\n        })\n      } catch (error) {\n        console.error(\n          `tried to access ${baseConfigLocation}/${conf}, but failed`,\n        )\n      }\n      newConfig = mergeConfigs(newConfig, fetchedConfig) || {}\n    }\n    if (dataRootReg[protocol]) {\n      newConfig.dataRoot = dataRootReg[protocol]\n    }\n    return createFinalConfig(newConfig)\n  }\n  const newConfig = regularizeConf(baseConfig, window.location.href)\n  if (dataRootReg[protocol]) {\n    newConfig.dataRoot = dataRootReg[protocol]\n  }\n  return createFinalConfig(newConfig)\n}\n\nexport async function createFinalConfig(\n  baseConfig: Config,\n  defaults = configDefaults,\n): Promise<Config> {\n  const configWithDefaults = deepUpdate(clone(defaults), baseConfig)\n  let finalConfig = await loadIncludes(configWithDefaults)\n  finalConfig = mergeConfigs(finalConfig, baseConfig) || finalConfig\n  fillTemplates(finalConfig, finalConfig)\n  validateConfig(finalConfig)\n  return finalConfig\n}\n\nexport async function fetchConfigFile(location: JBLocation): Promise<Config> {\n  const result = await openLocation(location).readFile('utf8')\n  if (isUriLocation(location)) {\n    return parseJb1(result, location.uri)\n  }\n  if (isLocalPathLocation(location)) {\n    return parseJb1(result, location.localPath)\n  }\n  return parseJb1(result)\n}\n\nexport function parseJb1(config: string, url = ''): Config {\n  if (config.trim().startsWith('{')) {\n    return parseJB1Json(config, url)\n  }\n  return parseJB1Conf(config, url)\n}\n\n/**\n * Merges config object b into a. Properties in b override those in a.\n */\nfunction mergeConfigs(a: Config | null, b: Config | null): Config | null {\n  if (b === null) {\n    return null\n  }\n\n  if (a === null) {\n    a = {}\n  }\n\n  for (const prop of Object.keys(b)) {\n    if (prop === 'tracks' && prop in a) {\n      const aTracks = a[prop] || []\n      const bTracks = b[prop] || []\n      if (Array.isArray(aTracks) && Array.isArray(bTracks)) {\n        a[prop] = mergeTrackConfigs(aTracks || [], bTracks || [])\n      } else {\n        throw new Error(\n          `Track config has not been properly regularized: ${aTracks} ${bTracks}`,\n        )\n      }\n    } else if (\n      !noRecursiveMerge(prop) &&\n      prop in a &&\n      // @ts-expect-error\n      typeof b[prop] === 'object' &&\n      // @ts-expect-error\n      typeof a[prop] === 'object'\n    ) {\n      // @ts-expect-error\n      a[prop] = deepUpdate(a[prop], b[prop])\n    } else if (prop === 'dataRoot') {\n      if (\n        a[prop] === undefined ||\n        (a[prop] === 'data' && b[prop] !== undefined)\n      ) {\n        a[prop] = b[prop]\n      }\n      // @ts-expect-error\n    } else if (a[prop] === undefined || b[prop] !== undefined) {\n      // @ts-expect-error\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * Special-case merging of two `tracks` configuration arrays.\n */\nfunction mergeTrackConfigs(a: Track[], b: Track[]): Track[] {\n  if (!b.length) {\n    return a\n  }\n\n  // index the tracks in `a` by track label\n  const aTracks: Record<string, Track> = {}\n  a.forEach((t, i): void => {\n    t.index = i\n    aTracks[t.label] = t\n  })\n\n  b.forEach((bT): void => {\n    const aT = aTracks[bT.label]\n    if (aT) {\n      mergeConfigs(aT, bT)\n    } else {\n      a.push(bT)\n    }\n  })\n\n  return a\n}\n\n/**\n * Recursively fetch, parse, and merge all the includes in the given config\n * object.  Calls the callback with the resulting configuration when finished.\n * @param inputConfig - Config to load includes into\n */\nasync function loadIncludes(inputConfig: Config): Promise<Config> {\n  inputConfig = clone(inputConfig)\n\n  async function loadRecur(\n    config: Config,\n    upstreamConf: Config,\n  ): Promise<Config> {\n    const sourceUrl = config.sourceUrl || config.baseUrl\n    if (!sourceUrl) {\n      throw new Error(\n        `Could not determine source URL: ${JSON.stringify(config)}`,\n      )\n    }\n    const newUpstreamConf = mergeConfigs(clone(upstreamConf), config)\n    if (!newUpstreamConf) {\n      throw new Error('Problem merging configs')\n    }\n    const includes = fillTemplates(\n      regularizeIncludes(config.include || []),\n      newUpstreamConf,\n    )\n    delete config.include\n\n    const loads = includes.map(async (include): Promise<Config> => {\n      include.cacheBuster = inputConfig.cacheBuster\n      const includedData = await fetchConfigFile({\n        uri: new URL(include.url, sourceUrl).href,\n        locationType: 'UriLocation',\n      })\n      return loadRecur(includedData, newUpstreamConf)\n    })\n    const includedDataObjects = await Promise.all(loads)\n    includedDataObjects.forEach((includedData): void => {\n      config = mergeConfigs(config, includedData) || config\n    })\n    return config\n  }\n\n  return loadRecur(inputConfig, {})\n}\n\nfunction regularizeIncludes(\n  includes: Include | string | (Include | string)[] | null,\n): Include[] {\n  if (!includes) {\n    return []\n  }\n\n  // coerce include to an array\n  if (!Array.isArray(includes)) {\n    includes = [includes]\n  }\n\n  return includes.map((include): Include => {\n    // coerce bare strings in the includes to URLs\n    if (typeof include === 'string') {\n      include = { url: include }\n    }\n\n    // set defaults for format and version\n    if (!('format' in include)) {\n      include.format = include.url.endsWith('.conf') ? 'conf' : 'JB_json'\n    }\n    if (include.format === 'JB_json' && !('version' in include)) {\n      include.version = 1\n    }\n    return include\n  })\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unnecessary-type-constraint\nfunction fillTemplates<T extends any>(subconfig: T, config: Config): T {\n  if (!subconfig) {\n    return subconfig\n  }\n  if (Array.isArray(subconfig)) {\n    for (let i = 0; i < subconfig.length; i += 1) {\n      subconfig[i] = fillTemplates(subconfig[i], config)\n    }\n  } else if (typeof subconfig === 'object') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const sub = subconfig as Record<string, any>\n    for (const name of Object.keys(sub)) {\n      sub[name] = fillTemplates(sub[name], config)\n    }\n  } else if (typeof subconfig === 'string') {\n    // @ts-expect-error\n    return fillTemplate(subconfig, config)\n  }\n\n  return subconfig\n}\n\n/**\n * list of config properties that should not be recursively merged\n * @param propName - name of config property\n */\nfunction noRecursiveMerge(propName: string): boolean {\n  return propName === 'datasets'\n}\n\nconst configDefaults = {\n  tracks: [],\n\n  containerID: 'GenomeBrowser',\n  dataRoot: 'data',\n  show_tracklist: true,\n  show_nav: true,\n  show_menu: true,\n  show_overview: true,\n  show_fullviewlink: true,\n  update_browser_title: true,\n  updateBrowserURL: true,\n\n  refSeqs: '{dataRoot}/seq/refSeqs.json',\n  include: ['jbrowse.conf', 'jbrowse_conf.json'],\n  nameUrl: '{dataRoot}/names/root.json',\n\n  datasets: {\n    _DEFAULT_EXAMPLES: true,\n    volvox: { url: '?data=sample_data/json/volvox', name: 'Volvox Example' },\n    modencode: {\n      url: '?data=sample_data/json/modencode',\n      name: 'MODEncode Example',\n    },\n    yeast: { url: '?data=sample_data/json/yeast', name: 'Yeast Example' },\n  },\n\n  highlightSearchedRegions: false,\n  highResolutionMode: 'auto',\n}\n\n/**\n * Examine the loaded and merged configuration for errors.  Throws\n * exceptions if it finds anything amiss.\n * @returns nothing meaningful\n */\nfunction validateConfig(config: Config): void {\n  if (!config.tracks) {\n    config.tracks = []\n  }\n  if (!config.baseUrl) {\n    throw new Error('Must provide a `baseUrl` in configuration')\n  }\n}\n","/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path, options) {\n  if (!isObject(options)) {\n    options = { default: options };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if ((hasProp = prop in target)) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) Jon Schlinkert (https://github.com/jonschlinkert).\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst { deleteProperty } = Reflect;\nconst isPrimitive = require('is-primitive');\nconst isPlainObject = require('is-plain-object');\n\nconst isObject = value => {\n  return (typeof value === 'object' && value !== null) || typeof value === 'function';\n};\n\nconst isUnsafeKey = key => {\n  return key === '__proto__' || key === 'constructor' || key === 'prototype';\n};\n\nconst validateKey = key => {\n  if (!isPrimitive(key)) {\n    throw new TypeError('Object keys must be strings or symbols');\n  }\n\n  if (isUnsafeKey(key)) {\n    throw new Error(`Cannot set unsafe key: \"${key}\"`);\n  }\n};\n\nconst toStringKey = input => {\n  return Array.isArray(input) ? input.flat().map(String).join(',') : input;\n};\n\nconst createMemoKey = (input, options) => {\n  if (typeof input !== 'string' || !options) return input;\n  let key = input + ';';\n  if (options.arrays !== undefined) key += `arrays=${options.arrays};`;\n  if (options.separator !== undefined) key += `separator=${options.separator};`;\n  if (options.split !== undefined) key += `split=${options.split};`;\n  if (options.merge !== undefined) key += `merge=${options.merge};`;\n  if (options.preservePaths !== undefined) key += `preservePaths=${options.preservePaths};`;\n  return key;\n};\n\nconst memoize = (input, options, fn) => {\n  const key = toStringKey(options ? createMemoKey(input, options) : input);\n  validateKey(key);\n\n  const value = setValue.cache.get(key) || fn();\n  setValue.cache.set(key, value);\n  return value;\n};\n\nconst splitString = (input, options = {}) => {\n  const sep = options.separator || '.';\n  const preserve = sep === '/' ? false : options.preservePaths;\n\n  if (typeof input === 'string' && preserve !== false && /\\//.test(input)) {\n    return [input];\n  }\n\n  const parts = [];\n  let part = '';\n\n  const push = part => {\n    let number;\n    if (part.trim() !== '' && Number.isInteger((number = Number(part)))) {\n      parts.push(number);\n    } else {\n      parts.push(part);\n    }\n  };\n\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n\n    if (value === '\\\\') {\n      part += input[++i];\n      continue;\n    }\n\n    if (value === sep) {\n      push(part);\n      part = '';\n      continue;\n    }\n\n    part += value;\n  }\n\n  if (part) {\n    push(part);\n  }\n\n  return parts;\n};\n\nconst split = (input, options) => {\n  if (options && typeof options.split === 'function') return options.split(input);\n  if (typeof input === 'symbol') return [input];\n  if (Array.isArray(input)) return input;\n  return memoize(input, options, () => splitString(input, options));\n};\n\nconst assignProp = (obj, prop, value, options) => {\n  validateKey(prop);\n\n  // Delete property when \"value\" is undefined\n  if (value === undefined) {\n    deleteProperty(obj, prop);\n\n  } else if (options && options.merge) {\n    const merge = options.merge === 'function' ? options.merge : Object.assign;\n\n    // Only merge plain objects\n    if (merge && isPlainObject(obj[prop]) && isPlainObject(value)) {\n      obj[prop] = merge(obj[prop], value);\n    } else {\n      obj[prop] = value;\n    }\n\n  } else {\n    obj[prop] = value;\n  }\n\n  return obj;\n};\n\nconst setValue = (target, path, value, options) => {\n  if (!path || !isObject(target)) return target;\n\n  const keys = split(path, options);\n  let obj = target;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const next = keys[i + 1];\n\n    validateKey(key);\n\n    if (next === undefined) {\n      assignProp(obj, key, value, options);\n      break;\n    }\n\n    if (typeof next === 'number' && !Array.isArray(obj[key])) {\n      obj = obj[key] = [];\n      continue;\n    }\n\n    if (!isObject(obj[key])) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  return target;\n};\n\nsetValue.split = split;\nsetValue.cache = new Map();\nsetValue.clear = () => {\n  setValue.cache = new Map();\n};\n\nmodule.exports = setValue;\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n"],"names":["isTrack","arg","label","deepUpdate","a","b","_i","_Object$keys","Object","keys","length","prop","undefined","clone","src","prototype","toString","call","nodeType","cloneNode","Date","getTime","RegExp","r","i","l","Array","isArray","constructor","dest","source","copyFunc","name","s","empty","mixin","parseJB1Conf","config","url","parsedConf","text","keyPath","operation","value","lineNumber","section","data","tracks","recordVal","parsedValue","match","JSON","parse","test","parseFloat","replaceAll","Error","concat","join","path","_toConsumableArray","existing","getValue","push","setValue","e","split","forEach","textLine","line","replace","trim","toLowerCase","_match","_match2","_slicedToArray","varName","isAlwaysArray","error","regularizeConf","conf","track","_objectSpread","meta","trackMetadata","sources","_i2","_Object$keys2","map","sourceDef","newSourceDef","typeMatch","type","sourceUrl","startsWith","URL","window","location","href","baseUrl","endsWith","addBase","apply","stores","values","names","t","refSeqs","nameUrl","trackConfig","c","trackClassName","store","regularizeClass","synthesizeTrackStoreConfig","histograms","root","className","includes","mainConf","_mainConf$stores","_trackConfig$urlTempl","urlTemplate","storeClass","backendVersion","guessStoreClass","storeConf","useAsRefSeqStore","refseqs","objectHash","console","warn","isUriLocation","uri","isLocalPathLocation","localPath","fetchJb1","_fetchJb","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dataRoot","baseConfig","baseConfigRoot","protocol","dataRootReg","dataRootLocation","baseProtocol","baseConfigLocation","_newConfig","_arr","fetchedConfig","newConfig","_args","arguments","wrap","_context","prev","next","include","locationType","stringify","slice","fetchConfigFile","_defineProperty","sent","t0","mergeConfigs","abrupt","createFinalConfig","stop","_x","_createFinalConfig","_callee2","configWithDefaults","finalConfig","_args2","_context2","configDefaults","loadIncludes","fillTemplates","validateConfig","_x2","_fetchConfigFile2","_callee3","result","_context3","openLocation","readFile","parseJb1","parseJB1Json","aTracks","bTracks","mergeTrackConfigs","index","bT","aT","_x3","_loadIncludes","_callee6","inputConfig","_loadRecur","loadRecur","_context6","_x4","_x5","_callee5","upstreamConf","_ref","newUpstreamConf","loads","_context5","regularizeIncludes","_x6","_callee4","includedData","_context4","cacheBuster","Promise","all","format","version","subconfig","sub","_i3","template","fillWith","_this","fill","callback","v","fillTemplate","containerID","show_tracklist","show_nav","show_menu","show_overview","show_fullviewlink","update_browser_title","updateBrowserURL","datasets","_DEFAULT_EXAMPLES","volvox","modencode","yeast","highlightSearchedRegions","highResolutionMode","isObject","require","segs","joinChar","options","isValid","key","target","isValidObject","val","module","exports","default","String","isString","splitChar","separator","len","idx","hasProp","n","deleteProperty","Reflect","isPrimitive","isPlainObject","validateKey","TypeError","isUnsafeKey","memoize","input","fn","flat","toStringKey","arrays","merge","preservePaths","createMemoKey","cache","get","set","sep","preserve","parts","part","number","Number","isInteger","splitString","assignProp","obj","assign","Map","clear","isObjectObject","o","ctor","prot","hasOwnProperty"],"sourceRoot":""}