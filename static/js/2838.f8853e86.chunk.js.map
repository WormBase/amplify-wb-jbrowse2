{"version":3,"file":"static/js/2838.f8853e86.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/SyntenyFeatureDetail.tsx","../../../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../../../node_modules/@mui/material/Toolbar/Toolbar.js","../../../node_modules/@mui/material/Toolbar/toolbarClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport copy from 'copy-to-clipboard'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport {\n  BaseCoreDetails,\n  BaseAttributes,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { SimpleFeatureSerialized } from '@jbrowse/core/util/simpleFeature'\n\nfunction Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const display = String(value)\n  if (display.length > 100) {\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={() => {\n            copy(display)\n            setCopied(true)\n            setTimeout(() => {\n              setCopied(false)\n            }, 700)\n          }}\n        >\n          {copied ? 'Copied to clipboard' : 'Copy'}\n        </button>\n        <button type=\"button\" onClick={() => setShow(val => !val)}>\n          {show ? 'Show less' : 'Show more'}\n        </button>\n        <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n      </>\n    )\n  }\n  return <div>{display}</div>\n}\n\nfunction CustomFeatureDetails(props: { feature: SimpleFeatureSerialized }) {\n  return (\n    <BaseAttributes\n      {...props}\n      formatter={(value: unknown) => <Formatter value={value} />}\n    />\n  )\n}\n\nconst BreakpointAlignmentsFeatureDetail = observer(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ({ model }: { model: any }) => {\n    const { feature1, feature2 } = JSON.parse(JSON.stringify(model.featureData))\n    return (\n      <Paper data-testid=\"alignment-side-drawer\">\n        <BaseCoreDetails title=\"Feature 1\" feature={feature1} />\n        <BaseCoreDetails title=\"Feature 2\" feature={feature2} />\n        <CustomFeatureDetails feature={feature1} />\n        <CustomFeatureDetails feature={feature2} />\n      </Paper>\n    )\n  },\n)\n\nexport default BreakpointAlignmentsFeatureDetail\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;"],"names":["Formatter","_ref","value","show","setShow","useState","copied","setCopied","display","String","length","_jsxs","_Fragment","children","_jsx","type","onClick","copy","setTimeout","val","concat","slice","CustomFeatureDetails","props","BaseAttributes","formatter","observer","_ref2","model","feature1","feature2","JSON","parse","stringify","featureData","Paper","BaseCoreDetails","title","feature","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_excluded","ToolbarRoot","styled","name","slot","overridesResolver","styles","ownerState","root","disableGutters","gutters","variant","theme","_extends","position","alignItems","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","inProps","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","getToolbarUtilityClass","useUtilityClasses","as","clsx","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}