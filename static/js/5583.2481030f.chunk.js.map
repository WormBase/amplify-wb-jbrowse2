{"version":3,"file":"static/js/5583.2481030f.chunk.js","mappings":"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","sources":["../../../packages/core/pluggableElementTypes/models/components/SaveTrackData.tsx","../../../node_modules/@mui/icons-material/GetApp.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\nimport { saveAs } from 'file-saver'\nimport { observer } from 'mobx-react'\nimport { Dialog, ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  getSession,\n  getContainingView,\n  Feature,\n  Region,\n  AbstractTrackModel,\n  AbstractSessionModel,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\n\n// icons\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nconst useStyles = makeStyles()({\n  root: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n})\n\nasync function fetchFeatures(\n  track: IAnyStateTreeNode,\n  regions: Region[],\n  signal?: AbortSignal,\n) {\n  const { rpcManager } = getSession(track)\n  const adapterConfig = getConf(track, ['adapter'])\n  const sessionId = 'getFeatures'\n  return rpcManager.call(sessionId, 'CoreGetFeatures', {\n    adapterConfig,\n    regions,\n    sessionId,\n    signal,\n  }) as Promise<Feature[]>\n}\ninterface FileTypeExporter {\n  name: string\n  extension: string\n  callback: (arg: {\n    features: Feature[]\n    session: AbstractSessionModel\n    assemblyName: string\n  }) => Promise<string> | string\n}\nconst SaveTrackDataDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: AbstractTrackModel & {\n    saveTrackFileFormatOptions: () => Record<string, FileTypeExporter>\n  }\n  handleClose: () => void\n}) {\n  const options = model.saveTrackFileFormatOptions()\n  const { classes } = useStyles()\n  const [error, setError] = useState<unknown>()\n  const [features, setFeatures] = useState<Feature[]>()\n  const [type, setType] = useState(Object.keys(options)[0])\n  const [str, setStr] = useState('')\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const view = getContainingView(model) as { visibleRegions?: Region[] }\n        setError(undefined)\n        setFeatures(await fetchFeatures(model, view.visibleRegions || []))\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [model])\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const { visibleRegions } = getContainingView(model) as {\n          visibleRegions?: Region[]\n        }\n        const session = getSession(model)\n        if (!features || !visibleRegions) {\n          return\n        }\n        const generator = options[type] || {\n          callback: () => 'Unknown',\n        }\n        setStr(\n          await generator.callback({\n            features,\n            session,\n            assemblyName: visibleRegions[0].assemblyName,\n          }),\n        )\n      } catch (e) {\n        setError(e)\n      }\n    })()\n  }, [type, features, options, model])\n\n  const loading = !features\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose} title=\"Save track data\">\n      <DialogContent className={classes.root}>\n        {error ? <ErrorMessage error={error} /> : null}\n        {features && !features.length ? (\n          <Typography>No features found</Typography>\n        ) : null}\n\n        <FormControl>\n          <FormLabel>File type</FormLabel>\n          <RadioGroup value={type} onChange={e => setType(e.target.value)}>\n            {Object.entries(options).map(([key, val]) => (\n              <FormControlLabel\n                key={key}\n                value={key}\n                control={<Radio />}\n                label={val.name}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          multiline\n          minRows={5}\n          maxRows={15}\n          fullWidth\n          value={\n            loading\n              ? 'Loading...'\n              : str.length > 100_000\n              ? 'Too large to view here, click \"Download\" to results to file'\n              : str\n          }\n          InputProps={{\n            readOnly: true,\n            classes: {\n              input: classes.textAreaFont,\n            },\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const ext = options[type].extension\n            const blob = new Blob([str], { type: 'text/plain;charset=utf-8' })\n            saveAs(blob, `jbrowse_track_data.${ext}`)\n          }}\n          startIcon={<GetAppIcon />}\n        >\n          Download\n        </Button>\n\n        <Button variant=\"contained\" type=\"submit\" onClick={() => handleClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SaveTrackDataDialog\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'GetApp');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["useStyles","makeStyles","root","width","textAreaFont","fontFamily","observer","model","handleClose","options","saveTrackFileFormatOptions","classes","error","setError","useState","features","setFeatures","type","setType","Object","keys","str","setStr","useEffect","view","getContainingView","undefined","async","track","regions","signal","rpcManager","getSession","adapterConfig","getConf","sessionId","call","fetchFeatures","visibleRegions","e","console","session","generator","callback","assemblyName","loading","React","Dialog","maxWidth","open","onClose","title","DialogContent","className","ErrorMessage","length","Typography","FormControl","FormLabel","RadioGroup","value","onChange","target","entries","map","key","val","FormControlLabel","control","Radio","label","name","TextField","variant","multiline","minRows","maxRows","fullWidth","InputProps","readOnly","input","DialogActions","Button","onClick","ext","extension","blob","Blob","saveAs","startIcon","GetAppIcon","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","createSvgIcon","RadioButtonIconRoot","styled","shouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","theme","ownerState","left","transition","transitions","create","easing","easeIn","duration","shortest","checked","easeOut","props","fontSize","children","background","dot","_excluded","RadioRoot","SwitchBase","prop","slot","overridesResolver","styles","size","capitalize","color","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","active","main","radioClasses","disabled","defaultCheckedIcon","defaultIcon","inProps","ref","_defaultIcon$props$fo","_defaultCheckedIcon$p","useThemeProps","checkedProp","checkedIcon","icon","nameProp","onChangeProp","other","slots","composeClasses","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","a","b","String","clsx","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","setValueState","controlled","focus","current","querySelector","handleRef","contextValue","event","Provider","role"],"sourceRoot":""}