{"version":3,"file":"static/js/3577.7a7bb79a.chunk.js","mappings":"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","sources":["../../../plugins/legacy-jbrowse/src/JBrowse1Connection/util.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigParse.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigLoad.ts","../../../node_modules/get-value/index.js","../../../node_modules/is-primitive/index.js","../../../node_modules/isobject/index.js","../../../node_modules/set-value/index.js","../../../node_modules/set-value/node_modules/is-plain-object/index.js"],"sourcesContent":["import getValue from 'get-value'\nimport { Track, Source } from './types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTrack(arg: any): arg is Track {\n  return arg?.label && typeof arg.label === 'string'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isSource(arg: any): arg is Source {\n  return arg?.url && typeof arg.url === 'string'\n}\n\n/**\n * updates a with values from b, recursively\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Obj = Record<string, any>\nexport function deepUpdate(a: Obj, b: Obj): Obj {\n  for (const prop of Object.keys(b)) {\n    if (\n      prop in a &&\n      typeof b[prop] === 'object' &&\n      typeof a[prop] === 'object'\n    ) {\n      deepUpdate(a[prop], b[prop])\n    } else if (a[prop] === undefined || b[prop] !== undefined) {\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * replace variables in a template string with values\n *\n * @param template - String with variable names in curly brackets\n * e.g., `http://foo/{bar}?arg={baz.foo}`\n * @param fillWith - object with attribute-value mappings\n * e.g., `{ 'bar': 'someurl', 'baz': { 'foo': 42 } }`\n * @returns the template string with variables in fillWith replaced\n * e.g., 'htp://foo/someurl?arg=valueforbaz'\n */\nexport function fillTemplate(template: string, fillWith: Obj): string {\n  return template.replaceAll(/{([\\s\\w.]+)}/g, (match, varName) => {\n    varName = varName.replaceAll(/\\s+/g, '')\n    const fill = getValue(fillWith, varName)\n    if (fill !== undefined) {\n      return typeof fill === 'function' ? fill(varName) : fill\n    }\n    if (fillWith.callback) {\n      // @ts-expect-error\n      const v = fillWith.callback.call(this, varName)\n      if (v !== undefined) {\n        return v\n      }\n    }\n    return match\n  })\n}\n\n/**\n * Clones objects (including DOM nodes) and all children.\n * Warning: do not clone cyclic structures\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n * @param src - The object to clone\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function clone(src: any): any {\n  if (\n    !src ||\n    typeof src !== 'object' ||\n    Object.prototype.toString.call(src) === '[object Function]'\n  ) {\n    // null, undefined, any non-object, or function\n    return src // anything\n  }\n  if (src.nodeType && 'cloneNode' in src) {\n    // DOM Node\n    return src.cloneNode(true) // Node\n  }\n  if (src instanceof Date) {\n    // Date\n    return new Date(src.getTime()) // Date\n  }\n  if (src instanceof RegExp) {\n    // RegExp\n    return new RegExp(src) // RegExp\n  }\n  let r\n  let i\n  let l\n  if (Array.isArray(src)) {\n    // array\n    r = []\n    for (i = 0, l = src.length; i < l; ++i) {\n      if (i in src) {\n        r[i] = clone(src[i])\n      }\n    }\n    // we don't clone functions for performance reasons\n    //    }else if(d.isFunction(src)){\n    //      // function\n    //      r = function(){ return src.apply(this, arguments); };\n  } else {\n    // generic objects\n    r = src.constructor ? new src.constructor() : {}\n  }\n  return mixin(r, src, clone)\n}\n\n/**\n * Copies/adds all properties of source to dest; returns dest.\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n *\n * All properties, including functions (sometimes termed \"methods\"), excluding\n * any non-standard extensions found in Object.prototype, are copied/added to\n * dest. Copying/adding each particular property is delegated to copyFunc\n * (if any); copyFunc defaults to the Javascript assignment operator if not\n * provided. Notice that by default, mixin executes a so-called \"shallow copy\"\n * and aggregate types are copied/added by reference.\n * @param dest - The object to which to copy/add all properties contained in\n * source.\n * @param source - The object from which to draw all properties to copy into dest.\n * @param copyFunc - The process used to copy/add a property in source; defaults\n * to the Javascript assignment operator.\n * @returns dest, as modified\n */\nfunction mixin(dest: Obj, source: Obj, copyFunc: Function): Obj {\n  let name\n  let s\n  const empty = {}\n  for (name in source) {\n    // the (!(name in empty) || empty[name] !== s) condition avoids copying\n    // properties in \"source\" inherited from Object.prototype.\t For example,\n    // if dest has a custom toString() method, don't overwrite it with the\n    // toString() method that source inherited from Object.prototype\n    s = source[name]\n    if (\n      !(name in dest) ||\n      // @ts-expect-error\n      (dest[name] !== s && (!(name in empty) || empty[name] !== s))\n    ) {\n      dest[name] = copyFunc ? copyFunc(s) : s\n    }\n  }\n\n  return dest // Object\n}\n","/* eslint no-cond-assign: [\"error\", \"except-parens\"] */\nimport getValue from 'get-value'\nimport setValue from 'set-value'\nimport { objectHash } from '@jbrowse/core/util'\nimport { isSource, isTrack } from './util'\nimport { Config, Track, Source, Store, Names } from './types'\n\nexport function parseJB1Json(config: Config | string, url: string): Config {\n  if (typeof config === 'string') {\n    let parsedConf\n    try {\n      parsedConf = JSON.parse(config)\n    } catch (error) {\n      throw new Error(`${error} when parsing configuration.`)\n    }\n    return regularizeConf(parsedConf, url)\n  }\n  return regularizeConf(config, url)\n}\n\nexport function parseJB1Conf(config: string, url: string): Config {\n  let parsedConf\n  try {\n    parsedConf = parse(config, url)\n  } catch (error) {\n    throw new Error(`${error} when parsing configuration.`)\n  }\n  return regularizeConf(parsedConf, url)\n}\n\nfunction isAlwaysArray(varName: string): boolean {\n  if (varName === 'include') {\n    return true\n  }\n  return false\n}\n\nfunction parse(text: string, url: string): Config {\n  let section: string[] = []\n  let keyPath: string[] | undefined\n  let operation: string\n  let value: string | undefined\n  const data: Config = { tracks: {} }\n  let lineNumber: number\n\n  function recordVal(): void {\n    if (value !== undefined) {\n      let parsedValue:\n        | string\n        | number\n        | boolean\n        | string[]\n        | number[]\n        | boolean[]\n      try {\n        // parse json\n        const match = value.match(/^json:(.+)/i)\n        if (match) {\n          parsedValue = JSON.parse(match[1])\n        }\n        // parse numbers if it looks numeric\n        else if (/^[+-]?[\\d.,]+([eE][-+]?\\d+)?$/.test(value)) {\n          parsedValue = parseFloat(value.replaceAll(',', ''))\n        } else {\n          parsedValue = value\n        }\n\n        if (!keyPath) {\n          throw new Error(`Error parsing in section ${section.join(' - ')}`)\n        }\n        const path = [...section, ...keyPath].join('.')\n        if (operation === '+=') {\n          let existing = getValue(data, path)\n          if (existing) {\n            if (!Array.isArray(existing)) {\n              existing = [existing]\n            }\n          } else {\n            existing = []\n          }\n\n          existing.push(parsedValue)\n          parsedValue = existing\n        }\n        if (parsedValue === 'true') {\n          parsedValue = true\n        }\n        if (parsedValue === 'false') {\n          parsedValue = false\n        }\n        setValue(data, path, parsedValue)\n      } catch (e) {\n        throw new Error(\n          `syntax error${url ? ` in ${url}` : ''}${\n            lineNumber ? ` at line ${lineNumber - 1}` : ''\n          }`,\n        )\n      }\n    }\n  }\n\n  text.split(/\\n|\\r\\n|\\r/).forEach((textLine, i): void => {\n    lineNumber = i + 1\n    const line = textLine.replace(/^\\s*#.+/, '')\n\n    // new section\n    let match: RegExpMatchArray | null\n    if ((match = line.match(/^\\s*\\[([^\\]]+)/))) {\n      // new section\n      recordVal()\n      keyPath = undefined\n      value = undefined\n      section = match[1].trim().split(/\\s*\\.\\s*/)\n      if (section.length === 1 && section[0].toLowerCase() === 'general') {\n        section = []\n      }\n    }\n    // new value\n    else if (\n      (match = line.match(\n        value === undefined ? /^([^+=]+)(\\+?=)(.*)/ : /^(\\S[^+=]+)(\\+?=)(.*)/,\n      ))\n    ) {\n      recordVal()\n      keyPath = match[1].trim().split(/\\s*\\.\\s*/)\n      ;[, , operation] = match\n      if (isAlwaysArray([...section, ...keyPath].join('.'))) {\n        operation = '+='\n      }\n      value = match[3].trim()\n    }\n    // add to existing array value\n    else if (\n      keyPath !== undefined &&\n      (match = line.match(/^\\s{0,4}\\+\\s*(.+)/))\n    ) {\n      recordVal()\n      operation = '+='\n      value = match[1].trim()\n    }\n    // add to existing value\n    else if (value !== undefined && (match = line.match(/^\\s+(\\S.*)/))) {\n      value += value.length ? ` ${match[1].trim()}` : match[1].trim()\n    }\n    // done with last value\n    else {\n      recordVal()\n      keyPath = undefined\n      value = undefined\n    }\n  })\n\n  recordVal()\n\n  return data\n}\n\n/**\n * Applies defaults and any other necessary tweaks to the loaded configuration.\n * @param conf - the object containing the configuration, which it modifies\n * in-place\n * @param url - URL of the config file\n * @returns the same object it was passed\n */\nexport function regularizeConf(conf: Config, url: string): Config {\n  // if tracks is not an array, convert it to one\n  if (conf.tracks && !Array.isArray(conf.tracks)) {\n    // if it's a single track config, wrap it in an arrayref\n    if (isTrack(conf.tracks)) {\n      conf.tracks = [conf.tracks]\n    }\n    // otherwise, coerce it to an array\n    else {\n      const tracks: Track[] = []\n      for (const label of Object.keys(conf.tracks)) {\n        const track = conf.tracks[label]\n        if (isTrack(track)) {\n          tracks.push(track)\n        } else {\n          tracks.push({ label, ...track })\n        }\n      }\n      conf.tracks = tracks\n    }\n  }\n\n  // regularize trackMetadata.sources\n  const meta = conf.trackMetadata\n  if (meta?.sources) {\n    // if it's a single source config, wrap it in an arrayref\n    if (typeof meta.sources === 'string') {\n      meta.sources = [meta.sources]\n    }\n    if (isSource(meta.sources)) {\n      meta.sources = [meta.sources]\n    }\n\n    if (!Array.isArray(meta.sources)) {\n      const sources: Source[] = []\n      for (const name of Object.keys(meta.sources)) {\n        const source = meta.sources[name]\n        if (!('name' in source)) {\n          source.name = name\n        }\n        sources.push(source)\n      }\n      meta.sources = sources\n    }\n\n    // coerce any string source defs to be URLs, and try to detect their types\n    meta.sources = meta.sources.map((sourceDef: string | Source): Source => {\n      if (typeof sourceDef === 'string') {\n        const newSourceDef: Source = { url: sourceDef }\n        const typeMatch = sourceDef.match(/\\.(\\w+)$/)\n        if (typeMatch) {\n          newSourceDef.type = typeMatch[1].toLowerCase()\n        }\n        return newSourceDef\n      }\n      return sourceDef\n    })\n  }\n\n  conf.sourceUrl = conf.sourceUrl || url\n  if (conf.sourceUrl.startsWith('/')) {\n    conf.sourceUrl = new URL(conf.sourceUrl, window.location.href).href\n  }\n  conf.baseUrl = conf.baseUrl || new URL('.', conf.sourceUrl).href\n  if (conf.baseUrl.length && !conf.baseUrl.endsWith('/')) {\n    conf.baseUrl += '/'\n  }\n\n  if (conf.sourceUrl) {\n    // set a default baseUrl in each of the track and store confs, and the names\n    // conf, if needed\n    const addBase: (Track | Store | Names)[] = []\n    if (conf.tracks) {\n      addBase.push(...conf.tracks)\n    }\n    if (conf.stores) {\n      addBase.push(...Object.values(conf.stores))\n    }\n    if (conf.names) {\n      addBase.push(conf.names)\n    }\n\n    addBase.forEach((t): void => {\n      if (!t.baseUrl) {\n        t.baseUrl = conf.baseUrl || '/'\n      }\n    })\n\n    // resolve the refSeqs and nameUrl if present\n    if (conf.refSeqs && typeof conf.refSeqs === 'string') {\n      conf.refSeqs = new URL(conf.refSeqs, conf.sourceUrl).href\n    }\n    if (conf.nameUrl) {\n      conf.nameUrl = new URL(conf.nameUrl, conf.sourceUrl).href\n    }\n  }\n\n  conf.stores = conf.stores || {}\n  ;(conf.tracks || []).forEach((trackConfig: Track): void => {\n    // if there is a `config` subpart, just copy its keys in to the top-level\n    // config\n    if (trackConfig.config) {\n      const c = trackConfig.config\n      delete trackConfig.config\n      trackConfig = { ...c, ...trackConfig }\n    }\n\n    // skip if it's a new-style track def\n    if (trackConfig.store) {\n      return\n    }\n\n    let trackClassName: string\n    if (trackConfig.type === 'FeatureTrack') {\n      trackClassName = 'JBrowse/View/Track/HTMLFeatures'\n    } else if (trackConfig.type === 'ImageTrack') {\n      trackClassName = 'JBrowse/View/Track/FixedImage'\n    } else if (trackConfig.type === 'ImageTrack.Wiggle') {\n      trackClassName = 'JBrowse/View/Track/FixedImage/Wiggle'\n    } else if (trackConfig.type === 'SequenceTrack') {\n      trackClassName = 'JBrowse/View/Track/Sequence'\n    } else {\n      trackClassName = regularizeClass('JBrowse/View/Track', trackConfig.type)\n    }\n\n    trackConfig.type = trackClassName\n\n    synthesizeTrackStoreConfig(conf, trackConfig)\n\n    if (trackConfig.histograms) {\n      if (!trackConfig.histograms.baseUrl) {\n        trackConfig.histograms.baseUrl = trackConfig.baseUrl\n      }\n      synthesizeTrackStoreConfig(conf, trackConfig.histograms)\n    }\n  })\n\n  return conf\n}\n\n/**\n * prefix class name with `root` if it contains no slashes\n * @param root - Prefix root\n * @param className - class name\n */\nfunction regularizeClass(root: string, className: string | undefined): string {\n  if (!className) {\n    return ''\n  }\n  if (!className.includes('/')) {\n    className = `${root}/${className}`\n  }\n  className = className.replace(/^\\//, '')\n  return className\n}\n\nfunction guessStoreClass(\n  trackConfig: Track | undefined,\n  urlTemplate: string,\n): string {\n  if (!trackConfig) {\n    return ''\n  }\n  if (trackConfig.type && trackConfig.type.includes('/FixedImage')) {\n    return `JBrowse/Store/TiledImage/Fixed${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.jsonz?$/i.test(urlTemplate)) {\n    return `JBrowse/Store/SeqFeature/NCList${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.bam$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BAM'\n  }\n  if (/\\.cram$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/CRAM'\n  }\n  if (/\\.gff3?$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3'\n  }\n  if (/\\.bed$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BED'\n  }\n  if (/\\.vcf.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/VCFTabix'\n  }\n  if (/\\.gff3?.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3Tabix'\n  }\n  if (/\\.bed.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BEDTabix'\n  }\n  if (/\\.(bw|bigwig)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigWig'\n  }\n  if (/\\.(bb|bigbed)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigBed'\n  }\n  if (/\\.(fa|fasta)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/IndexedFasta'\n  }\n  if (/\\.(fa|fasta)\\.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BgzipIndexedFasta'\n  }\n  if (/\\.2bit$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/TwoBit'\n  }\n  if (trackConfig.type && trackConfig.type.endsWith('/Sequence')) {\n    return 'JBrowse/Store/Sequence/StaticChunked'\n  }\n  return ''\n}\n\nfunction synthesizeTrackStoreConfig(\n  mainConf: Config,\n  trackConfig: Track,\n): void {\n  // figure out what data store class to use with the track, applying some\n  // defaults if it is not explicit in the configuration\n  const { urlTemplate = '' } = trackConfig\n\n  const storeClass = trackConfig.storeClass\n    ? regularizeClass('JBrowse/Store', trackConfig.storeClass)\n    : guessStoreClass(trackConfig, urlTemplate)\n\n  if (!storeClass) {\n    console.warn(\n      `Unable to determine an appropriate data store to use with track '${trackConfig.label}', please explicitly specify a storeClass in the configuration.`,\n    )\n    return\n  }\n\n  // synthesize a separate store conf\n  const storeConf: Store = { ...trackConfig, type: storeClass }\n\n  // if this is the first sequence store we see, and we have no refseqs store\n  // defined explicitly, make this the refseqs store.\n  storeConf.name =\n    (storeClass === 'JBrowse/Store/Sequence/StaticChunked' ||\n      storeClass === 'JBrowse/Store/Sequence/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/TwoBit' ||\n      storeClass === 'JBrowse/Store/Sequence/TwoBit' ||\n      trackConfig.useAsRefSeqStore) &&\n    !mainConf.stores?.refseqs\n      ? 'refseqs'\n      : `store${objectHash(storeConf)}`\n  // record it\n  if (!mainConf.stores) {\n    mainConf.stores = {}\n  }\n  mainConf.stores[storeConf.name] = storeConf\n\n  // connect it to the track conf\n  trackConfig.store = storeConf.name\n}\n","import { openLocation } from '@jbrowse/core/util/io'\nimport { parseJB1Json, parseJB1Conf, regularizeConf } from './jb1ConfigParse'\nimport { clone, deepUpdate, fillTemplate } from './util'\nimport {\n  JBLocation,\n  UriLocation,\n  LocalPathLocation,\n  Config,\n  Track,\n  Include,\n} from './types'\n\nfunction isUriLocation(location: JBLocation): location is UriLocation {\n  return (location as UriLocation).uri !== undefined\n}\n\nfunction isLocalPathLocation(\n  location: JBLocation,\n): location is LocalPathLocation {\n  return (location as LocalPathLocation).localPath !== undefined\n}\n\nexport async function fetchJb1(\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  dataRoot: JBLocation = { uri: '', locationType: 'UriLocation' },\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  baseConfig: Config = {\n    include: ['{dataRoot}/trackList.json', '{dataRoot}/tracks.conf'],\n  },\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  baseConfigRoot: JBLocation = { uri: '', locationType: 'UriLocation' },\n): Promise<Config> {\n  const protocol = 'uri' in dataRoot ? 'uri' : 'localPath'\n  const dataRootReg = JSON.parse(JSON.stringify(dataRoot))\n  let dataRootLocation = ''\n  if (isUriLocation(dataRoot)) {\n    dataRootLocation = dataRoot.uri\n  }\n  if (isLocalPathLocation(dataRoot)) {\n    dataRootLocation = dataRoot.localPath\n  }\n  if (dataRootLocation.endsWith('/')) {\n    dataRootReg[protocol] = dataRootLocation.slice(0, -1)\n  }\n  if (\n    (isUriLocation(baseConfigRoot) && baseConfigRoot.uri) ||\n    (isLocalPathLocation(baseConfigRoot) && baseConfigRoot.localPath)\n  ) {\n    const baseProtocol = 'uri' in baseConfigRoot ? 'uri' : 'localPath'\n    let baseConfigLocation = ''\n    if (isUriLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.uri\n    }\n    if (isLocalPathLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.localPath\n    }\n    if (baseConfigLocation.endsWith('/')) {\n      baseConfigLocation = baseConfigLocation.slice(0, -1)\n    }\n    let newConfig: Config = {}\n    for (const conf of ['jbrowse.conf', 'jbrowse_conf.json']) {\n      let fetchedConfig = null\n      try {\n        // @ts-expect-error\n        fetchedConfig = await fetchConfigFile({\n          [baseProtocol]: `${baseConfigLocation}/${conf}`,\n        })\n      } catch (error) {\n        console.error(\n          `tried to access ${baseConfigLocation}/${conf}, but failed`,\n        )\n      }\n      newConfig = mergeConfigs(newConfig, fetchedConfig) || {}\n    }\n    if (dataRootReg[protocol]) {\n      newConfig.dataRoot = dataRootReg[protocol]\n    }\n    return createFinalConfig(newConfig)\n  }\n  const newConfig = regularizeConf(baseConfig, window.location.href)\n  if (dataRootReg[protocol]) {\n    newConfig.dataRoot = dataRootReg[protocol]\n  }\n  return createFinalConfig(newConfig)\n}\n\nexport async function createFinalConfig(\n  baseConfig: Config,\n  defaults = configDefaults,\n): Promise<Config> {\n  const configWithDefaults = deepUpdate(clone(defaults), baseConfig)\n  let finalConfig = await loadIncludes(configWithDefaults)\n  finalConfig = mergeConfigs(finalConfig, baseConfig) || finalConfig\n  fillTemplates(finalConfig, finalConfig)\n  validateConfig(finalConfig)\n  return finalConfig\n}\n\nexport async function fetchConfigFile(location: JBLocation): Promise<Config> {\n  const result = await openLocation(location).readFile('utf8')\n  if (isUriLocation(location)) {\n    return parseJb1(result, location.uri)\n  }\n  if (isLocalPathLocation(location)) {\n    return parseJb1(result, location.localPath)\n  }\n  return parseJb1(result)\n}\n\nexport function parseJb1(config: string, url = ''): Config {\n  if (config.trim().startsWith('{')) {\n    return parseJB1Json(config, url)\n  }\n  return parseJB1Conf(config, url)\n}\n\n/**\n * Merges config object b into a. Properties in b override those in a.\n */\nfunction mergeConfigs(a: Config | null, b: Config | null): Config | null {\n  if (b === null) {\n    return null\n  }\n\n  if (a === null) {\n    a = {}\n  }\n\n  for (const prop of Object.keys(b)) {\n    if (prop === 'tracks' && prop in a) {\n      const aTracks = a[prop] || []\n      const bTracks = b[prop] || []\n      if (Array.isArray(aTracks) && Array.isArray(bTracks)) {\n        a[prop] = mergeTrackConfigs(aTracks || [], bTracks || [])\n      } else {\n        throw new Error(\n          `Track config has not been properly regularized: ${aTracks} ${bTracks}`,\n        )\n      }\n    } else if (\n      !noRecursiveMerge(prop) &&\n      prop in a &&\n      // @ts-expect-error\n      typeof b[prop] === 'object' &&\n      // @ts-expect-error\n      typeof a[prop] === 'object'\n    ) {\n      // @ts-expect-error\n      a[prop] = deepUpdate(a[prop], b[prop])\n    } else if (prop === 'dataRoot') {\n      if (\n        a[prop] === undefined ||\n        (a[prop] === 'data' && b[prop] !== undefined)\n      ) {\n        a[prop] = b[prop]\n      }\n      // @ts-expect-error\n    } else if (a[prop] === undefined || b[prop] !== undefined) {\n      // @ts-expect-error\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * Special-case merging of two `tracks` configuration arrays.\n */\nfunction mergeTrackConfigs(a: Track[], b: Track[]): Track[] {\n  if (!b.length) {\n    return a\n  }\n\n  // index the tracks in `a` by track label\n  const aTracks: Record<string, Track> = {}\n  a.forEach((t, i): void => {\n    t.index = i\n    aTracks[t.label] = t\n  })\n\n  b.forEach((bT): void => {\n    const aT = aTracks[bT.label]\n    if (aT) {\n      mergeConfigs(aT, bT)\n    } else {\n      a.push(bT)\n    }\n  })\n\n  return a\n}\n\n/**\n * Recursively fetch, parse, and merge all the includes in the given config\n * object.  Calls the callback with the resulting configuration when finished.\n * @param inputConfig - Config to load includes into\n */\nasync function loadIncludes(inputConfig: Config): Promise<Config> {\n  inputConfig = clone(inputConfig)\n\n  async function loadRecur(\n    config: Config,\n    upstreamConf: Config,\n  ): Promise<Config> {\n    const sourceUrl = config.sourceUrl || config.baseUrl\n    if (!sourceUrl) {\n      throw new Error(\n        `Could not determine source URL: ${JSON.stringify(config)}`,\n      )\n    }\n    const newUpstreamConf = mergeConfigs(clone(upstreamConf), config)\n    if (!newUpstreamConf) {\n      throw new Error('Problem merging configs')\n    }\n    const includes = fillTemplates(\n      regularizeIncludes(config.include || []),\n      newUpstreamConf,\n    )\n    delete config.include\n\n    const loads = includes.map(async (include): Promise<Config> => {\n      include.cacheBuster = inputConfig.cacheBuster\n      const includedData = await fetchConfigFile({\n        uri: new URL(include.url, sourceUrl).href,\n        locationType: 'UriLocation',\n      })\n      return loadRecur(includedData, newUpstreamConf)\n    })\n    const includedDataObjects = await Promise.all(loads)\n    includedDataObjects.forEach((includedData): void => {\n      config = mergeConfigs(config, includedData) || config\n    })\n    return config\n  }\n\n  return loadRecur(inputConfig, {})\n}\n\nfunction regularizeIncludes(\n  includes: Include | string | (Include | string)[] | null,\n): Include[] {\n  if (!includes) {\n    return []\n  }\n\n  // coerce include to an array\n  if (!Array.isArray(includes)) {\n    includes = [includes]\n  }\n\n  return includes.map((include): Include => {\n    // coerce bare strings in the includes to URLs\n    if (typeof include === 'string') {\n      include = { url: include }\n    }\n\n    // set defaults for format and version\n    if (!('format' in include)) {\n      include.format = include.url.endsWith('.conf') ? 'conf' : 'JB_json'\n    }\n    if (include.format === 'JB_json' && !('version' in include)) {\n      include.version = 1\n    }\n    return include\n  })\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unnecessary-type-constraint\nfunction fillTemplates<T extends any>(subconfig: T, config: Config): T {\n  if (!subconfig) {\n    return subconfig\n  }\n  if (Array.isArray(subconfig)) {\n    for (let i = 0; i < subconfig.length; i += 1) {\n      subconfig[i] = fillTemplates(subconfig[i], config)\n    }\n  } else if (typeof subconfig === 'object') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const sub = subconfig as Record<string, any>\n    for (const name of Object.keys(sub)) {\n      sub[name] = fillTemplates(sub[name], config)\n    }\n  } else if (typeof subconfig === 'string') {\n    // @ts-expect-error\n    return fillTemplate(subconfig, config)\n  }\n\n  return subconfig\n}\n\n/**\n * list of config properties that should not be recursively merged\n * @param propName - name of config property\n */\nfunction noRecursiveMerge(propName: string): boolean {\n  return propName === 'datasets'\n}\n\nconst configDefaults = {\n  tracks: [],\n\n  containerID: 'GenomeBrowser',\n  dataRoot: 'data',\n  show_tracklist: true,\n  show_nav: true,\n  show_menu: true,\n  show_overview: true,\n  show_fullviewlink: true,\n  update_browser_title: true,\n  updateBrowserURL: true,\n\n  refSeqs: '{dataRoot}/seq/refSeqs.json',\n  include: ['jbrowse.conf', 'jbrowse_conf.json'],\n  nameUrl: '{dataRoot}/names/root.json',\n\n  datasets: {\n    _DEFAULT_EXAMPLES: true,\n    volvox: { url: '?data=sample_data/json/volvox', name: 'Volvox Example' },\n    modencode: {\n      url: '?data=sample_data/json/modencode',\n      name: 'MODEncode Example',\n    },\n    yeast: { url: '?data=sample_data/json/yeast', name: 'Yeast Example' },\n  },\n\n  highlightSearchedRegions: false,\n  highResolutionMode: 'auto',\n}\n\n/**\n * Examine the loaded and merged configuration for errors.  Throws\n * exceptions if it finds anything amiss.\n * @returns nothing meaningful\n */\nfunction validateConfig(config: Config): void {\n  if (!config.tracks) {\n    config.tracks = []\n  }\n  if (!config.baseUrl) {\n    throw new Error('Must provide a `baseUrl` in configuration')\n  }\n}\n","/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path, options) {\n  if (!isObject(options)) {\n    options = { default: options };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if ((hasProp = prop in target)) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) Jon Schlinkert (https://github.com/jonschlinkert).\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst { deleteProperty } = Reflect;\nconst isPrimitive = require('is-primitive');\nconst isPlainObject = require('is-plain-object');\n\nconst isObject = value => {\n  return (typeof value === 'object' && value !== null) || typeof value === 'function';\n};\n\nconst isUnsafeKey = key => {\n  return key === '__proto__' || key === 'constructor' || key === 'prototype';\n};\n\nconst validateKey = key => {\n  if (!isPrimitive(key)) {\n    throw new TypeError('Object keys must be strings or symbols');\n  }\n\n  if (isUnsafeKey(key)) {\n    throw new Error(`Cannot set unsafe key: \"${key}\"`);\n  }\n};\n\nconst toStringKey = input => {\n  return Array.isArray(input) ? input.flat().map(String).join(',') : input;\n};\n\nconst createMemoKey = (input, options) => {\n  if (typeof input !== 'string' || !options) return input;\n  let key = input + ';';\n  if (options.arrays !== undefined) key += `arrays=${options.arrays};`;\n  if (options.separator !== undefined) key += `separator=${options.separator};`;\n  if (options.split !== undefined) key += `split=${options.split};`;\n  if (options.merge !== undefined) key += `merge=${options.merge};`;\n  if (options.preservePaths !== undefined) key += `preservePaths=${options.preservePaths};`;\n  return key;\n};\n\nconst memoize = (input, options, fn) => {\n  const key = toStringKey(options ? createMemoKey(input, options) : input);\n  validateKey(key);\n\n  const value = setValue.cache.get(key) || fn();\n  setValue.cache.set(key, value);\n  return value;\n};\n\nconst splitString = (input, options = {}) => {\n  const sep = options.separator || '.';\n  const preserve = sep === '/' ? false : options.preservePaths;\n\n  if (typeof input === 'string' && preserve !== false && /\\//.test(input)) {\n    return [input];\n  }\n\n  const parts = [];\n  let part = '';\n\n  const push = part => {\n    let number;\n    if (part.trim() !== '' && Number.isInteger((number = Number(part)))) {\n      parts.push(number);\n    } else {\n      parts.push(part);\n    }\n  };\n\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n\n    if (value === '\\\\') {\n      part += input[++i];\n      continue;\n    }\n\n    if (value === sep) {\n      push(part);\n      part = '';\n      continue;\n    }\n\n    part += value;\n  }\n\n  if (part) {\n    push(part);\n  }\n\n  return parts;\n};\n\nconst split = (input, options) => {\n  if (options && typeof options.split === 'function') return options.split(input);\n  if (typeof input === 'symbol') return [input];\n  if (Array.isArray(input)) return input;\n  return memoize(input, options, () => splitString(input, options));\n};\n\nconst assignProp = (obj, prop, value, options) => {\n  validateKey(prop);\n\n  // Delete property when \"value\" is undefined\n  if (value === undefined) {\n    deleteProperty(obj, prop);\n\n  } else if (options && options.merge) {\n    const merge = options.merge === 'function' ? options.merge : Object.assign;\n\n    // Only merge plain objects\n    if (merge && isPlainObject(obj[prop]) && isPlainObject(value)) {\n      obj[prop] = merge(obj[prop], value);\n    } else {\n      obj[prop] = value;\n    }\n\n  } else {\n    obj[prop] = value;\n  }\n\n  return obj;\n};\n\nconst setValue = (target, path, value, options) => {\n  if (!path || !isObject(target)) return target;\n\n  const keys = split(path, options);\n  let obj = target;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const next = keys[i + 1];\n\n    validateKey(key);\n\n    if (next === undefined) {\n      assignProp(obj, key, value, options);\n      break;\n    }\n\n    if (typeof next === 'number' && !Array.isArray(obj[key])) {\n      obj = obj[key] = [];\n      continue;\n    }\n\n    if (!isObject(obj[key])) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  return target;\n};\n\nsetValue.split = split;\nsetValue.cache = new Map();\nsetValue.clear = () => {\n  setValue.cache = new Map();\n};\n\nmodule.exports = setValue;\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n"],"names":["isTrack","arg","label","deepUpdate","a","b","prop","Object","keys","undefined","clone","src","prototype","toString","call","nodeType","cloneNode","Date","getTime","RegExp","r","i","l","Array","isArray","length","constructor","dest","source","copyFunc","name","s","empty","mixin","parseJB1Conf","config","url","parsedConf","text","keyPath","operation","value","section","data","tracks","lineNumber","recordVal","parsedValue","match","JSON","parse","test","parseFloat","replaceAll","Error","concat","join","path","existing","getValue","push","setValue","e","split","forEach","textLine","line","replace","trim","toLowerCase","varName","isAlwaysArray","error","regularizeConf","conf","track","meta","trackMetadata","sources","map","sourceDef","newSourceDef","typeMatch","type","sourceUrl","startsWith","URL","window","location","href","baseUrl","endsWith","addBase","stores","values","names","t","refSeqs","nameUrl","trackConfig","c","store","trackClassName","regularizeClass","synthesizeTrackStoreConfig","histograms","root","className","includes","mainConf","_mainConf$stores","urlTemplate","storeClass","backendVersion","guessStoreClass","console","warn","storeConf","useAsRefSeqStore","refseqs","objectHash","isUriLocation","uri","isLocalPathLocation","localPath","async","fetchJb1","dataRoot","arguments","locationType","baseConfig","include","baseConfigRoot","protocol","dataRootReg","stringify","dataRootLocation","slice","baseProtocol","baseConfigLocation","newConfig","fetchedConfig","fetchConfigFile","mergeConfigs","createFinalConfig","configWithDefaults","configDefaults","finalConfig","inputConfig","loadRecur","upstreamConf","newUpstreamConf","fillTemplates","format","version","regularizeIncludes","loads","cacheBuster","Promise","all","includedData","loadIncludes","validateConfig","result","openLocation","readFile","parseJb1","parseJB1Json","aTracks","bTracks","mergeTrackConfigs","index","bT","aT","subconfig","sub","template","fillWith","fill","callback","v","this","fillTemplate","containerID","show_tracklist","show_nav","show_menu","show_overview","show_fullviewlink","update_browser_title","updateBrowserURL","datasets","_DEFAULT_EXAMPLES","volvox","modencode","yeast","highlightSearchedRegions","highResolutionMode","isObject","require","segs","joinChar","options","isValid","key","target","isValidObject","val","module","exports","default","String","isString","splitChar","separator","len","idx","hasProp","n","deleteProperty","Reflect","isPrimitive","isPlainObject","validateKey","TypeError","isUnsafeKey","memoize","input","fn","flat","toStringKey","createMemoKey","arrays","merge","preservePaths","cache","get","set","sep","preserve","parts","part","number","Number","isInteger","splitString","assignProp","obj","assign","next","Map","clear","isObjectObject","o","ctor","prot","hasOwnProperty"],"sourceRoot":""}