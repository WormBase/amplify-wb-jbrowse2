{"version":3,"file":"static/js/6239.44f47bff.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyView/svgcomponents/SVGBackground.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/svgcomponents/SVGLinearSyntenyView.tsx"],"sourcesContent":["import React from 'react'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={theme.palette.background.default}\n    />\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from '@mui/material'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { when } from 'mobx'\nimport {\n  getSession,\n  getSerializedSvg,\n  max,\n  measureText,\n  ReactRendering,\n  renderToAbstractCanvas,\n  sum,\n} from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport {\n  SVGTracks,\n  SVGRuler,\n  totalHeight,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport SVGBackground from './SVGBackground'\nimport { ExportSvgOptions, LinearSyntenyViewModel } from '../model'\nimport { drawRef } from '../../LinearSyntenyDisplay/drawSynteny'\n\ntype LSV = LinearSyntenyViewModel\n\n// render LGV to SVG\nexport async function renderToSvg(model: LSV, opts: ExportSvgOptions) {\n  await when(() => model.initialized)\n  const {\n    textHeight = 18,\n    headerHeight = 30,\n    rulerHeight = 30,\n    fontSize = 13,\n    trackLabels = 'offset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Wrapper = ({ children }: any) => <>{children}</>,\n    themeName = 'default',\n  } = opts\n  const session = getSession(model)\n  const theme = session.allThemes?.()[themeName]\n  const { width, views, middleComparativeHeight: synH, tracks } = model\n  const shift = 50\n  const offset = headerHeight + rulerHeight\n\n  const heights = views.map(\n    v => totalHeight(v.tracks, textHeight, trackLabels) + offset,\n  )\n  const totalHeightSvg = sum(heights) + synH + 100\n  const displayResults = await Promise.all(\n    views.map(\n      async view =>\n        ({\n          view,\n          data: await Promise.all(\n            view.tracks.map(async track => {\n              const d = track.displays[0]\n              await when(() => (d.ready !== undefined ? d.ready : true))\n              return { track, result: await d.renderSvg({ ...opts, theme }) }\n            }),\n          ),\n        } as const),\n    ),\n  )\n\n  const renderings = await Promise.all(\n    tracks.map(async track => {\n      const d = track.displays[0]\n      await when(() => (d.ready !== undefined ? d.ready : true))\n      const r = await renderToAbstractCanvas(\n        width,\n        synH,\n        { exportSVG: opts },\n        ctx => drawRef(d, ctx),\n      )\n\n      if ('imageData' in r) {\n        throw new Error('found a canvas in svg export, probably a bug')\n      } else if ('canvasRecordedData' in r) {\n        return {\n          html: await getSerializedSvg({\n            ...r,\n            width,\n            height: synH,\n          }),\n        }\n      } else {\n        return r\n      }\n    }),\n  )\n\n  const trackLabelMaxLen =\n    max(\n      views.flatMap(view =>\n        view.tracks.map(t =>\n          measureText(getTrackName(t.configuration, session), fontSize),\n        ),\n      ),\n      0,\n    ) + 40\n  const trackLabelOffset = trackLabels === 'left' ? trackLabelMaxLen : 0\n  const w = width + trackLabelOffset\n\n  const t = createJBrowseTheme(theme)\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={createJBrowseTheme(theme)}>\n      <Wrapper>\n        <svg\n          width={width}\n          height={totalHeightSvg}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w + shift * 2, totalHeightSvg].toString()}\n        >\n          <SVGBackground width={w} height={totalHeightSvg} shift={shift} />\n          <g transform={`translate(${shift} ${fontSize})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[0].assemblyNames.join(', ')}\n              </text>\n\n              <SVGRuler model={displayResults[0].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[0].view}\n              displayResults={displayResults[0].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n\n          <defs>\n            <clipPath id={'synclip'}>\n              <rect x={0} y={0} width={width} height={synH} />\n            </clipPath>\n          </defs>\n          <g\n            transform={`translate(${shift + trackLabelOffset} ${\n              fontSize + heights[0]\n            })`}\n            clipPath={`url(#synclip)`}\n          >\n            {renderings.map((r, i) => (\n              <ReactRendering key={i} rendering={r} />\n            ))}\n          </g>\n          <g transform={`translate(${shift} ${fontSize + heights[0] + synH})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[1].assemblyNames.join(', ')}\n              </text>\n              <SVGRuler model={displayResults[1].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[1].view}\n              displayResults={displayResults[1].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n"],"names":["SVGBackground","_ref","width","height","shift","theme","useTheme","_jsx","fill","palette","background","default","renderToSvg","_x","_x2","_renderToSvg","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","model","opts","_session$allThemes","_opts$textHeight","textHeight","_opts$headerHeight","headerHeight","_opts$rulerHeight","rulerHeight","_opts$fontSize","fontSize","_opts$trackLabels","trackLabels","_opts$Wrapper","Wrapper","_opts$themeName","themeName","session","views","synH","tracks","offset","heights","totalHeightSvg","displayResults","renderings","trackLabelMaxLen","trackLabelOffset","w","t","wrap","_context4","prev","next","when","initialized","children","_Fragment","getSession","allThemes","call","middleComparativeHeight","map","v","totalHeight","sum","Promise","all","_ref2","_callee2","view","_context2","t0","_ref3","_callee","track","d","_context","displays","undefined","ready","renderSvg","_objectSpread","t1","sent","abrupt","result","stop","_x4","data","_x3","_ref4","_callee3","r","_context3","renderToAbstractCanvas","exportSVG","ctx","drawRef","Error","getSerializedSvg","html","_x5","max","flatMap","measureText","getTrackName","configuration","createJBrowseTheme","renderToStaticMarkup","ThemeProvider","_jsxs","xmlns","xmlnsXlink","viewBox","toString","transform","concat","x","text","primary","assemblyNames","join","SVGRuler","SVGTracks","id","y","clipPath","i","ReactRendering","rendering"],"sourceRoot":""}