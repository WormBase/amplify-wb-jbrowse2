{"version":3,"file":"static/js/3378.37b7983c.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/drawSynteny.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/svgcomponents/SVGBackground.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/svgcomponents/SVGLinearSyntenyView.tsx"],"sourcesContent":["import { doesIntersect2, Feature } from '@jbrowse/core/util'\n\ninterface Pos {\n  offsetPx: number\n}\n\ninterface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\nexport function drawMatchSimple({\n  feature,\n  ctx,\n  offsets,\n  cb,\n  height,\n  drawCurves,\n  oobLimit,\n  viewWidth,\n  hideTiny,\n}: {\n  feature: FeatPos\n  ctx: CanvasRenderingContext2D\n  offsets: number[]\n  oobLimit: number\n  viewWidth: number\n  cb: (ctx: CanvasRenderingContext2D) => void\n  height: number\n  drawCurves?: boolean\n  hideTiny?: boolean\n}) {\n  const { p11, p12, p21, p22 } = feature\n\n  const x11 = p11.offsetPx - offsets[0]\n  const x12 = p12.offsetPx - offsets[0]\n  const x21 = p21.offsetPx - offsets[1]\n  const x22 = p22.offsetPx - offsets[1]\n\n  const l1 = Math.abs(x12 - x11)\n  const l2 = Math.abs(x22 - x21)\n  const y1 = 0\n  const y2 = height\n  const mid = (y2 - y1) / 2\n  const minX = Math.min(x21, x22)\n  const maxX = Math.max(x21, x22)\n\n  if (!doesIntersect2(minX, maxX, -oobLimit, viewWidth + oobLimit)) {\n    return\n  }\n\n  // drawing a line if the results are thin: drawing a line results in much\n  // less pixellation than filling in a thin polygon\n  if (l1 <= 1 && l2 <= 1) {\n    // hideTiny can be used to avoid drawing mouseover for thin lines in this\n    // case\n    if (!hideTiny) {\n      ctx.beginPath()\n      ctx.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx.lineTo(x21, y2)\n      }\n      ctx.stroke()\n    }\n  } else {\n    draw(ctx, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n    cb(ctx)\n  }\n}\n\nexport function draw(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n  drawCurves?: boolean,\n) {\n  if (drawCurves) {\n    drawBezierBox(ctx, x1, x2, y1, x3, x4, y2, mid)\n  } else {\n    drawBox(ctx, x1, x2, y1, x3, x4, y2)\n  }\n}\n\nexport function drawBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n) {\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.lineTo(x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.closePath()\n  ctx.fill()\n}\n\nexport function drawBezierBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n) {\n  const len1 = Math.abs(x1 - x2)\n  const len2 = Math.abs(x1 - x2)\n\n  // heuristic to not draw hourglass inversions with bezier curves when they\n  // are thin and far apart because it results in areas that are not drawn well\n  // demo https://codesandbox.io/s/fast-glitter-q3b1or?file=/src/index.js\n  if (len1 < 5 && len2 < 5 && x2 < x1 && Math.abs(x1 - x3) > 100) {\n    const tmp = x1\n    x1 = x2\n    x2 = tmp\n  }\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.bezierCurveTo(x2, mid, x3, mid, x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.bezierCurveTo(x4, mid, x1, mid, x1, y1)\n  ctx.closePath()\n  ctx.fill()\n}\n","import { doesIntersect2, getContainingView } from '@jbrowse/core/util'\nimport { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\nimport { LinearSyntenyDisplayModel } from './model'\nimport { draw, drawMatchSimple } from './components/util'\n\nexport const MAX_COLOR_RANGE = 255 * 255 * 255 // max color range\n\nfunction makeColor(idx: number) {\n  const r = Math.floor(idx / (255 * 255)) % 255\n  const g = Math.floor(idx / 255) % 255\n  const b = idx % 255\n  return `rgb(${r},${g},${b})`\n}\n\nconst colorMap = {\n  I: '#ff03',\n  N: '#0a03',\n  D: '#00f3',\n  X: 'brown',\n  M: '#f003',\n  '=': '#f003',\n}\n\nconst lineLimit = 3\n\nconst oobLimit = 1600\n\nexport function getId(r: number, g: number, b: number, unitMultiplier: number) {\n  return Math.floor((r * 255 * 255 + g * 255 + b - 1) / unitMultiplier)\n}\n\nexport function drawRef(\n  model: LinearSyntenyDisplayModel,\n  ctx1: CanvasRenderingContext2D,\n  ctx3?: CanvasRenderingContext2D,\n) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const drawCIGAR = view.drawCIGAR\n  const height = view.middleComparativeHeight\n  const width = view.width\n  const bpPerPxs = view.views.map(v => v.bpPerPx)\n\n  if (ctx3) {\n    ctx3.imageSmoothingEnabled = false\n  }\n\n  ctx1.beginPath()\n  const featPos = model.featPositions\n  const offsets = view.views.map(v => v.offsetPx)\n\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / featPos.length)\n\n  // this loop is optimized to draw many thin lines with a single ctx.stroke\n  // call, a separate loop below draws larger boxes\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22 } of featPos) {\n    const x11 = p11.offsetPx - offsets[0]\n    const x12 = p12.offsetPx - offsets[0]\n    const x21 = p21.offsetPx - offsets[1]\n    const x22 = p22.offsetPx - offsets[1]\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    // drawing a line if the results are thin results in much less pixellation\n    // than filling in a thin polygon\n    if (\n      l1 <= lineLimit &&\n      l2 <= lineLimit &&\n      x21 < width + oobLimit &&\n      x21 > -oobLimit\n    ) {\n      ctx1.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx1.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx1.lineTo(x21, y2)\n      }\n    }\n  }\n  ctx1.stroke()\n\n  // this loop only draws small lines as a polyline, the polyline calls\n  // ctx.stroke once is much more efficient than calling stroke() many times\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22, f, cigar } of featPos) {\n    const x11 = p11.offsetPx - offsets[0]\n    const x12 = p12.offsetPx - offsets[0]\n    const x21 = p21.offsetPx - offsets[1]\n    const x22 = p22.offsetPx - offsets[1]\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const minX = Math.min(x21, x22)\n    const maxX = Math.max(x21, x22)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    if (\n      !(l1 <= lineLimit && l2 <= lineLimit) &&\n      doesIntersect2(minX, maxX, -oobLimit, view.width + oobLimit)\n    ) {\n      const s1 = f.get('strand')\n      const k1 = s1 === -1 ? x12 : x11\n      const k2 = s1 === -1 ? x11 : x12\n\n      // rev1/rev2 flip the direction of the CIGAR drawing in horizontally flipped\n      // modes. somewhat heuristically determined, but tested for\n      const rev1 = k1 < k2 ? 1 : -1\n      const rev2 = (x21 < x22 ? 1 : -1) * s1\n\n      // cx1/cx2 are the current x positions on top and bottom rows\n      let cx1 = k1\n      let cx2 = s1 === -1 ? x22 : x21\n      if (cigar?.length && drawCIGAR) {\n        // continuingFlag skips drawing commands on very small CIGAR features\n        let continuingFlag = false\n\n        // px1/px2 are the previous x positions on the top and bottom rows\n        let px1 = 0\n        let px2 = 0\n        const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n        for (let j = 0; j < cigar.length; j += 2) {\n          const idx = j * unitMultiplier2 + 1\n\n          const len = +cigar[j]\n          const op = cigar[j + 1] as keyof typeof colorMap\n\n          if (!continuingFlag) {\n            px1 = cx1\n            px2 = cx2\n          }\n\n          const d1 = len / bpPerPxs[0]\n          const d2 = len / bpPerPxs[1]\n\n          if (op === 'M' || op === '=' || op === 'X') {\n            cx1 += d1 * rev1\n            cx2 += d2 * rev2\n          } else if (op === 'D' || op === 'N') {\n            cx1 += d1 * rev1\n          } else if (op === 'I') {\n            cx2 += d2 * rev2\n          }\n\n          // check that we are even drawing in view here, e.g. that all\n          // points are not all less than 0 or greater than width\n          if (\n            !(\n              Math.max(px1, px2, cx1, cx2) < 0 ||\n              Math.min(px1, px2, cx1, cx2) > width\n            )\n          ) {\n            // if it is a small feature and not the last element of the\n            // CIGAR (which could skip rendering it entire if we did turn\n            // it on), then turn on continuing flag\n            const isNotLast = j < cigar.length - 2\n            if (\n              Math.abs(cx1 - px1) <= 1 &&\n              Math.abs(cx2 - px2) <= 1 &&\n              isNotLast\n            ) {\n              continuingFlag = true\n            } else {\n              continuingFlag = false\n\n              // allow rendering the dominant color when using continuing\n              // flag if the last element of continuing was a large\n              // feature, else just use match\n              ctx1.fillStyle =\n                colorMap[(continuingFlag && d1 > 1) || d2 > 1 ? op : 'M']\n\n              draw(ctx1, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              if (ctx3) {\n                ctx3.fillStyle = makeColor(idx)\n                draw(ctx3, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              }\n            }\n          }\n        }\n      } else {\n        draw(ctx1, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n      }\n    }\n  }\n\n  // draw click map\n  const ctx2 = model.clickMapCanvas?.getContext('2d')\n  if (!ctx2) {\n    return\n  }\n  ctx2.imageSmoothingEnabled = false\n  ctx2.clearRect(0, 0, width, height)\n  for (let i = 0; i < featPos.length; i++) {\n    const feature = featPos[i]\n    const idx = i * unitMultiplier + 1\n    ctx2.fillStyle = makeColor(idx)\n\n    // too many click map false positives with colored stroked lines\n    drawMatchSimple({\n      cb: ctx => ctx.fill(),\n      feature,\n      ctx: ctx2,\n      drawCurves,\n      offsets,\n      oobLimit,\n      viewWidth: view.width,\n      hideTiny: true,\n      height,\n    })\n  }\n}\n\nexport function drawMouseoverSynteny(model: LinearSyntenyDisplayModel) {\n  const { clickId, mouseoverId } = model\n  const highResolutionScaling = 1\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const height = view.middleComparativeHeight\n  const width = view.width\n  const ctx = model.mouseoverCanvas?.getContext('2d')\n  const offsets = view.views.map(v => v.offsetPx)\n\n  if (!ctx) {\n    return\n  }\n  ctx.resetTransform()\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  ctx.clearRect(0, 0, width, height)\n  const feature1 = model.featMap[mouseoverId || '']\n  if (feature1) {\n    ctx.fillStyle = 'rgb(0,0,0,0.1)'\n    drawMatchSimple({\n      cb: ctx => ctx.fill(),\n      feature: feature1,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n  const feature2 = model.featMap[clickId || '']\n  if (feature2) {\n    ctx.strokeStyle = 'rgb(0, 0, 0, 0.9)'\n\n    drawMatchSimple({\n      cb: ctx => ctx.stroke(),\n      feature: feature2,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n}\n","import React from 'react'\nimport { useTheme } from '@mui/material'\nimport { stripAlpha } from '@jbrowse/core/util'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={stripAlpha(theme.palette.background.default)}\n    />\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from '@mui/material'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { when } from 'mobx'\nimport {\n  getSession,\n  getSerializedSvg,\n  max,\n  measureText,\n  ReactRendering,\n  renderToAbstractCanvas,\n  sum,\n} from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport {\n  SVGTracks,\n  SVGRuler,\n  totalHeight,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport SVGBackground from './SVGBackground'\nimport { ExportSvgOptions, LinearSyntenyViewModel } from '../model'\nimport { drawRef } from '../../LinearSyntenyDisplay/drawSynteny'\n\ntype LSV = LinearSyntenyViewModel\n\n// render LGV to SVG\nexport async function renderToSvg(model: LSV, opts: ExportSvgOptions) {\n  await when(() => model.initialized)\n  const {\n    textHeight = 18,\n    headerHeight = 30,\n    rulerHeight = 30,\n    fontSize = 13,\n    trackLabels = 'offset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Wrapper = ({ children }: any) => <>{children}</>,\n    themeName = 'default',\n  } = opts\n  const session = getSession(model)\n  const theme = session.allThemes?.()[themeName]\n  const { width, views, middleComparativeHeight: synH, tracks } = model\n  const shift = 50\n  const offset = headerHeight + rulerHeight\n\n  const heights = views.map(\n    v => totalHeight(v.tracks, textHeight, trackLabels) + offset,\n  )\n  const totalHeightSvg = sum(heights) + synH + 100\n  const displayResults = await Promise.all(\n    views.map(\n      async view =>\n        ({\n          view,\n          data: await Promise.all(\n            view.tracks.map(async track => {\n              const d = track.displays[0]\n              await when(() => (d.ready !== undefined ? d.ready : true))\n              return { track, result: await d.renderSvg({ ...opts, theme }) }\n            }),\n          ),\n        }) as const,\n    ),\n  )\n\n  const renderings = await Promise.all(\n    tracks.map(async track => {\n      const d = track.displays[0]\n      await when(() => (d.ready !== undefined ? d.ready : true))\n      const r = await renderToAbstractCanvas(\n        width,\n        synH,\n        { exportSVG: opts },\n        ctx => drawRef(d, ctx),\n      )\n\n      if ('imageData' in r) {\n        throw new Error('found a canvas in svg export, probably a bug')\n      } else if ('canvasRecordedData' in r) {\n        return {\n          html: await getSerializedSvg({\n            ...r,\n            width,\n            height: synH,\n          }),\n        }\n      } else {\n        return r\n      }\n    }),\n  )\n\n  const trackLabelMaxLen =\n    max(\n      views.flatMap(view =>\n        view.tracks.map(t =>\n          measureText(getTrackName(t.configuration, session), fontSize),\n        ),\n      ),\n      0,\n    ) + 40\n  const trackLabelOffset = trackLabels === 'left' ? trackLabelMaxLen : 0\n  const w = width + trackLabelOffset\n\n  const t = createJBrowseTheme(theme)\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={createJBrowseTheme(theme)}>\n      <Wrapper>\n        <svg\n          width={width}\n          height={totalHeightSvg}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w + shift * 2, totalHeightSvg].toString()}\n        >\n          <SVGBackground width={w} height={totalHeightSvg} shift={shift} />\n          <g transform={`translate(${shift} ${fontSize})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[0].assemblyNames.join(', ')}\n              </text>\n\n              <SVGRuler model={displayResults[0].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[0].view}\n              displayResults={displayResults[0].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n\n          <defs>\n            <clipPath id={'synclip'}>\n              <rect x={0} y={0} width={width} height={synH} />\n            </clipPath>\n          </defs>\n          <g\n            transform={`translate(${shift + trackLabelOffset} ${\n              fontSize + heights[0]\n            })`}\n            clipPath={`url(#synclip)`}\n          >\n            {renderings.map((r, i) => (\n              <ReactRendering key={i} rendering={r} />\n            ))}\n          </g>\n          <g transform={`translate(${shift} ${fontSize + heights[0] + synH})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[1].assemblyNames.join(', ')}\n              </text>\n              <SVGRuler model={displayResults[1].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[1].view}\n              displayResults={displayResults[1].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n"],"names":["drawMatchSimple","_ref","feature","ctx","offsets","cb","height","drawCurves","oobLimit","viewWidth","hideTiny","p11","p12","p21","p22","x11","offsetPx","x12","x21","x22","l1","Math","abs","l2","y2","mid","minX","min","maxX","max","doesIntersect2","beginPath","moveTo","bezierCurveTo","lineTo","stroke","draw","x1","x2","y1","x3","x4","len1","len2","tmp","closePath","fill","drawBezierBox","drawBox","MAX_COLOR_RANGE","makeColor","idx","r","floor","g","b","concat","colorMap","I","N","D","X","M","lineLimit","getId","unitMultiplier","drawRef","model","ctx1","ctx3","_model$clickMapCanvas","view","getContainingView","drawCIGAR","middleComparativeHeight","width","bpPerPxs","views","map","v","bpPerPx","imageSmoothingEnabled","featPos","featPositions","length","fillStyle","strokeStyle","f","cigar","s1","get","k1","rev1","rev2","cx1","cx2","continuingFlag","px1","px2","unitMultiplier2","j","len","op","d1","d2","isNotLast","ctx2","clickMapCanvas","getContext","clearRect","i","drawMouseoverSynteny","_model$mouseoverCanva","clickId","mouseoverId","mouseoverCanvas","resetTransform","scale","feature1","featMap","feature2","SVGBackground","shift","theme","useTheme","_jsx","stripAlpha","palette","background","default","async","renderToSvg","opts","_session$allThemes","when","initialized","textHeight","headerHeight","rulerHeight","fontSize","trackLabels","Wrapper","children","_Fragment","themeName","session","getSession","allThemes","call","synH","tracks","offset","heights","totalHeight","totalHeightSvg","sum","displayResults","Promise","all","data","d","track","displays","undefined","ready","result","renderSvg","renderings","renderToAbstractCanvas","exportSVG","Error","html","getSerializedSvg","trackLabelMaxLen","flatMap","t","measureText","getTrackName","configuration","trackLabelOffset","w","createJBrowseTheme","renderToStaticMarkup","ThemeProvider","_jsxs","xmlns","xmlnsXlink","viewBox","toString","transform","x","text","primary","assemblyNames","join","SVGRuler","SVGTracks","id","y","clipPath","ReactRendering","rendering"],"sourceRoot":""}