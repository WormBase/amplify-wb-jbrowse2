{"version":3,"file":"static/js/3017.b4bf1029.chunk.js","mappings":"2RAOMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,MAAO,CACLC,UAAW,OACXC,OAAQ,OACRC,OAAQJ,EAAMI,OAAOC,OACrBC,QAAS,OACTC,WAAYP,EAAMQ,QAAQD,WAAWE,SAEvCC,aAAc,CACZC,MAAO,EACPC,SAAU,QACVC,IAAK,EACLT,OAAQJ,EAAMI,OAAOC,OAAS,GAEjC,IAwDD,OAAeS,EAAAA,EAAAA,WAtDf,SAAeC,GAMX,IALFC,EAAQD,EAARC,SACAC,EAAOF,EAAPE,QAKQC,EAAgCD,EAAhCC,eAAgBC,EAAgBF,EAAhBE,YAChBC,EAAYtB,IAAZsB,QACFC,GAAMC,EAAAA,EAAAA,QAAuB,MAuBnC,OArBAC,EAAAA,EAAAA,YAAU,WACR,SAASC,EAAiBC,GACxB,GAAIA,EAAEC,kBAAkBC,SACf,OAAHN,QAAG,IAAHA,GAAAA,EAAKO,SAAWP,EAAIO,QAAQC,SAASJ,EAAEC,QAAS,CAAC,IAADI,EAAAC,EAE5CC,EAAuC,QAAxBF,EAAGb,EAAQgB,qBAAa,IAAAH,GAAM,QAANC,EAArBD,EAAuBI,YAAI,IAAAH,OAAN,EAArBA,EAA6BI,GACjDH,GACFf,EAAQmB,iBAAiBJ,EAE7B,CAEJ,CAIA,OAFAK,SAASC,iBAAiB,YAAad,GACvCa,SAASC,iBAAiB,UAAWd,GAC9B,WACLa,SAASE,oBAAoB,YAAaf,GAC1Ca,SAASE,oBAAoB,UAAWf,EAC1C,CACF,GAAG,CAACH,EAAKJ,KAGPuB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACpB,IAAKA,EAAKqB,UAAWtB,EAAQnB,MAAO0C,UAAW,GAAIC,QAAM,EAAA5B,SAAA,CAC1C,UAAnBE,GACC2B,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CACXC,OAAQ9B,EAAQ+B,aAChBN,UAAWtB,EAAQV,aACnBuC,UAAQ,IAER,KACHjC,EACmB,SAAnBE,GACC2B,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CACXC,OAAQ9B,EAAQ+B,aAChBN,UAAWtB,EAAQV,aACnBwC,MAAO,CAAEC,KAAMhC,GACf8B,UAAQ,IAER,OAGV,I,yJCpDMnD,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCoD,YAAa,CACXC,OAAQ,GAEVC,OAAQ,CACNC,SAAU,GAEZC,aAAc,CACZH,OAAQ,EACRI,MAAOzD,EAAMQ,QAAQkD,UAAUC,cAGjCC,aAAc,CACZH,MAAOzD,EAAMQ,QAAQkD,UAAUC,cAEjCE,OAAQ,CACNtD,WAAYP,EAAMQ,QAAQkD,UAAUI,MAEtCC,cAAe,CACbxD,WAAYP,EAAMQ,QAAQkD,UAAUM,OAEtCC,gBAAiB,CACf1D,WAAYP,EAAMQ,QAAQkD,UAAUQ,MAEvC,IAED,GAAepD,EAAAA,EAAAA,WAAS,SAAAC,GAMpB,IAADe,EAAAC,EALDd,EAAOF,EAAPE,QACAkD,EAAgBpD,EAAhBoD,iBAKQ/C,EAAYtB,IAAZsB,QACFgD,EAAgBnD,EAAQmD,cAExBC,EAAoC,QAAxBvC,EAAGb,EAAQgB,qBAAa,IAAAH,GAAM,QAANC,EAArBD,EAAuBI,YAAI,IAAAH,OAAN,EAArBA,EAA6BI,GAC5CmC,EAAYF,GAAiBA,IAAkBC,EAErD,OACExB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CACL3D,SAAS,SACT8B,UACE4B,EAAS,GAAAE,OACFpD,EAAQ2C,eACXM,EAAY,GAAAG,OACTpD,EAAQ6C,iBACX7C,EAAQyC,OAEdxC,IAAK,SAAAA,GAAG,OAAI8C,GAAoB,OAAH9C,QAAG,IAAHA,OAAG,EAAHA,EAAKoD,wBAAwBtE,SAAU,EAAE,EAACa,UAEvEwB,EAAAA,EAAAA,MAACkC,EAAAA,EAAO,CAACC,gBAAc,EAAA3D,SAAA,EACrB6B,EAAAA,EAAAA,KAAC+B,EAAoB,CAAC3D,QAASA,KAC/B4B,EAAAA,EAAAA,KAAA,OAAKH,UAAWtB,EAAQkC,UACxBT,EAAAA,EAAAA,KAACgC,EAAc,CAAC5D,QAASA,QAIjC,IAEM2D,GAAuB9D,EAAAA,EAAAA,WAAS,SAAAgE,GAIlC,IAHF7D,EAAO6D,EAAP7D,QAIQgB,EAAiChB,EAAjCgB,cAAe8C,EAAkB9D,EAAlB8D,cACf3D,EAAYtB,IAAZsB,QACA4D,GAAkBC,EAAAA,EAAAA,QAAOhE,GAAzB+D,cACR,OACEnC,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CAACxC,UAAWtB,EAAQgC,YAAYpC,UAC1C6B,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CACLC,MAAoB,OAAbnD,QAAa,IAAbA,OAAa,EAAbA,EAAeE,GACtB,cAAY,wBACZO,UAAWtB,EAAQoC,aACnBpC,QAAS,CAAEiE,KAAMjE,EAAQwC,cACzB0B,YAAa,SAAAC,GACX,IAAMC,EAASvE,EAAQ8D,cAAcU,IAAIF,GACzC,IAAKC,EACH,OACE3C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKlC,MAAM,UAASzC,SAAC,mBAK7C,IAAM4E,EAAaZ,EAAca,cAAcL,EAAOM,MAC9CC,EAA8BH,EAA9BG,iBAAkBC,EAAYJ,EAAZI,QAC1B,OAAOD,GACLlD,EAAAA,EAAAA,KAACkD,EAAgB,CAACE,MAAOT,KAEzB3C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKlC,MAAM,UAASzC,SACrCgF,GAGP,EACAE,SAAU,SAAAzE,GACR,IAAM0E,EAAIlF,EAAQ8D,cAAcU,IAAIhE,EAAEC,OAAO0D,OACzCe,EACFlF,EAAQmF,WAAWD,GAEnBlF,EAAQoF,OAAO,oBAAD7B,OAAqB/C,EAAEC,OAAO0D,OAAS,UAEzD,EAAEpE,UAEDsF,EAAAA,EAAAA,GAAIvB,EAAcwB,UAAUC,KAAI,SAAAhB,GAC/B,IAAMI,EAAaZ,EAAca,cAAcL,EAAOM,MAC9CC,EAA8BH,EAA9BG,iBAAkBC,EAAYJ,EAAZI,QAC1B,OACExD,EAAAA,EAAAA,MAACiE,EAAAA,EAAQ,CACP,4CAAAjC,OAA2CgB,EAAOM,MAElDV,MAAOI,EAAOrD,GAAGnB,SAAA,CAEhB+E,GACClD,EAAAA,EAAAA,KAACkD,EAAgB,CAACE,MAAOT,KAEzB3C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKlC,MAAM,UAASzC,SACrCgF,KAGLnD,EAAAA,EAAAA,KAAC6D,EAAAA,EAAU,CACT,iBAAAlC,OAAgBgB,EAAOM,KAAI,kBAC3BrC,MAAM,UACN,aAAW,SACXkD,QAAS,kBAAM1F,EAAQ2F,WAAWpB,EAAO,EAACxE,UAE1C6B,EAAAA,EAAAA,KAACgE,EAAAA,EAAU,QAhBRrB,EAAOrD,GAoBlB,OAIR,IAEM0C,GAAiB/D,EAAAA,EAAAA,WAAS,SAAAgG,GAI5B,IAHF7F,EAAO6F,EAAP7F,QAIA8F,GAAgCC,EAAAA,EAAAA,UAA6B,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACpB/F,EAAkCD,EAAlCC,eAAgBe,EAAkBhB,EAAlBgB,cACxB,OACEO,EAAAA,EAAAA,MAAA6E,EAAAA,SAAA,CAAArG,SAAA,EACE6B,EAAAA,EAAAA,KAAC6D,EAAAA,EAAU,CACTjD,MAAM,UACNkD,QAAS,SAAAW,GAAK,OAAIF,EAAYE,EAAMC,cAAc,EAACvG,UAEnD6B,EAAAA,EAAAA,KAAC2E,EAAAA,EAAY,OAEf3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAO,CAACC,MAAM,kBAAiB1G,UAC9B6B,EAAAA,EAAAA,KAAC6D,EAAAA,EAAU,CACT,cAAY,kBACZjD,MAAM,UACNkD,QAAS,WACP1F,EAAQoF,OAAO,qCAAD7B,OACyBtD,EAAc,8BACnD,QAEFD,EAAQ0G,sBACV,EAAE3G,UAEF6B,EAAAA,EAAAA,KAAC+E,EAAAA,EAAY,SAGjB/E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAO,CAACC,MAAM,eAAc1G,UAC3B6B,EAAAA,EAAAA,KAAC6D,EAAAA,EAAU,CACTjD,MAAM,UACNkD,QAAS,kBAAM1F,EAAQ2F,WAAW3E,EAAc,EAACjB,UAEjD6B,EAAAA,EAAAA,KAACgF,EAAAA,EAAS,SAGdhF,EAAAA,EAAAA,KAACiF,EAAAA,EAAI,CACHX,SAAUA,EACVY,KAAMC,QAAQb,GACdc,QAAS,kBAAMb,EAAY,KAAK,EAACpG,SAEhC,CAAC,OAAQ,SAASwF,KAAI,SAAA0B,GAAM,OAC3BrF,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAEP0B,SAA6B,WAAnBjH,EACVyF,QAAS,WACP1F,EAAQmH,kBAAkBF,GAC1Bd,EAAY,KACd,EAAEpG,SAEDkH,GAPIA,EAQI,QAKrB,IC3JA,GAhDqBpH,EAAAA,EAAAA,WAAS,SAAAC,GAI1B,IAHFE,EAAOF,EAAPE,QAIQgB,EAAkBhB,EAAlBgB,cACA+C,GAAkBC,EAAAA,EAAAA,QAAOhE,GAAzB+D,cAEFqD,EAAkBpG,EACnB+C,EAAcsD,uBACb,qBACAtD,EAAca,cAAc5D,EAAc6D,MAAMyC,eAChD,CACEtH,QAAAA,EACAgF,MAAOhE,IAIX,KAKJ8E,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CyB,EAAavB,EAAA,GAAE9C,EAAgB8C,EAAA,GAEtC,OACEzE,EAAAA,EAAAA,MAACiG,EAAM,CAACxH,QAASA,EAAQD,SAAA,EACvB6B,EAAAA,EAAAA,KAAC6F,EAAY,CAACzH,QAASA,EAASkD,iBAAkBA,KAClDtB,EAAAA,EAAAA,KAAC8F,EAAAA,SAAQ,CAACC,UAAU/F,EAAAA,EAAAA,KAACgG,EAAAA,EAAe,IAAI7H,UACtC6B,EAAAA,EAAAA,KAACiG,EAAAA,GAAa,CACZC,kBAAmB,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAAOpG,EAAAA,EAAAA,KAACqG,EAAAA,EAAY,CAACD,MAAOA,GAAS,EAACjI,SAEhEqH,GACC7F,EAAAA,EAAAA,MAAA6E,EAAAA,SAAA,CAAArG,SAAA,EACE6B,EAAAA,EAAAA,KAACwF,EAAe,CACdpC,MAAOhE,EACPhB,QAASA,EACTuH,cAAeA,KAEjB3F,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE/C,OAAQ,UAEtB,WAKd,G","sources":["../../../packages/app-core/src/ui/App/Drawer.tsx","../../../packages/app-core/src/ui/App/DrawerHeader.tsx","../../../packages/app-core/src/ui/App/DrawerWidget.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport ResizeHandle from '@jbrowse/core/ui/ResizeHandle'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    overflowY: 'auto',\n    height: '100%',\n    zIndex: theme.zIndex.drawer,\n    outline: 'none',\n    background: theme.palette.background.default,\n  },\n  resizeHandle: {\n    width: 4,\n    position: 'fixed',\n    top: 0,\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}))\n\nfunction Drawer({\n  children,\n  session,\n}: {\n  children: React.ReactNode\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { drawerPosition, drawerWidth } = session\n  const { classes } = useStyles()\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    function handleSelectView(e: Event) {\n      if (e.target instanceof Element) {\n        if (ref?.current && ref.current.contains(e.target)) {\n          // @ts-ignore\n          const visibleWidgetId = session.visibleWidget?.view?.id\n          if (visibleWidgetId) {\n            session.setFocusedViewId(visibleWidgetId)\n          }\n        }\n      }\n    }\n\n    document.addEventListener('mousedown', handleSelectView)\n    document.addEventListener('keydown', handleSelectView)\n    return () => {\n      document.removeEventListener('mousedown', handleSelectView)\n      document.removeEventListener('keydown', handleSelectView)\n    }\n  }, [ref, session])\n\n  return (\n    <Paper ref={ref} className={classes.paper} elevation={16} square>\n      {drawerPosition === 'right' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          vertical\n        />\n      ) : null}\n      {children}\n      {drawerPosition === 'left' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          style={{ left: drawerWidth }}\n          vertical\n        />\n      ) : null}\n    </Paper>\n  )\n}\n\nexport default observer(Drawer)\n","import React, { useState } from 'react'\nimport {\n  AppBar,\n  FormControl,\n  IconButton,\n  Menu,\n  MenuItem,\n  Select,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  drawerSelect: {\n    margin: 0,\n    color: theme.palette.secondary.contrastText,\n  },\n\n  dropDownIcon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  header: {\n    background: theme.palette.secondary.main,\n  },\n  headerFocused: {\n    background: theme.palette.secondary.light,\n  },\n  headerUnfocused: {\n    background: theme.palette.secondary.dark,\n  },\n}))\n\nexport default observer(function ({\n  session,\n  setToolbarHeight,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n  setToolbarHeight: (arg: number) => void\n}) {\n  const { classes } = useStyles()\n  const focusedViewId = session.focusedViewId\n  // @ts-ignore\n  const viewWidgetId = session.visibleWidget?.view?.id\n  const isFocused = focusedViewId && focusedViewId === viewWidgetId\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={\n        isFocused\n          ? `${classes.headerFocused}`\n          : viewWidgetId\n          ? `${classes.headerUnfocused}`\n          : classes.header\n      }\n      ref={ref => setToolbarHeight(ref?.getBoundingClientRect().height || 0)}\n    >\n      <Toolbar disableGutters>\n        <DrawerWidgetSelector session={session} />\n        <div className={classes.spacer} />\n        <DrawerControls session={session} />\n      </Toolbar>\n    </AppBar>\n  )\n})\n\nconst DrawerWidgetSelector = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { visibleWidget, activeWidgets } = session\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(session)\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        value={visibleWidget?.id}\n        data-testid=\"widget-drawer-selects\"\n        className={classes.drawerSelect}\n        classes={{ icon: classes.dropDownIcon }}\n        renderValue={widgetId => {\n          const widget = session.activeWidgets.get(widgetId)\n          if (!widget) {\n            return (\n              <Typography variant=\"h6\" color=\"inherit\">\n                Unknown widget\n              </Typography>\n            )\n          }\n          const widgetType = pluginManager.getWidgetType(widget.type)\n          const { HeadingComponent, heading } = widgetType\n          return HeadingComponent ? (\n            <HeadingComponent model={widget} />\n          ) : (\n            <Typography variant=\"h6\" color=\"inherit\">\n              {heading}\n            </Typography>\n          )\n        }}\n        onChange={e => {\n          const w = session.activeWidgets.get(e.target.value)\n          if (w) {\n            session.showWidget(w)\n          } else {\n            session.notify(`Widget not found ${e.target.value}`, 'warning')\n          }\n        }}\n      >\n        {[...activeWidgets.values()].map(widget => {\n          const widgetType = pluginManager.getWidgetType(widget.type)\n          const { HeadingComponent, heading } = widgetType\n          return (\n            <MenuItem\n              data-testid={`widget-drawer-selects-item-${widget.type}`}\n              key={widget.id}\n              value={widget.id}\n            >\n              {HeadingComponent ? (\n                <HeadingComponent model={widget} />\n              ) : (\n                <Typography variant=\"h6\" color=\"inherit\">\n                  {heading}\n                </Typography>\n              )}\n              <IconButton\n                data-testid={`${widget.type}-drawer-delete`}\n                color=\"inherit\"\n                aria-label=\"Delete\"\n                onClick={() => session.hideWidget(widget)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </MenuItem>\n          )\n        })}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst DrawerControls = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const { drawerPosition, visibleWidget } = session\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        onClick={event => setAnchorEl(event.currentTarget)}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Tooltip title=\"Minimize drawer\">\n        <IconButton\n          data-testid=\"drawer-minimize\"\n          color=\"inherit\"\n          onClick={() => {\n            session.notify(\n              `Drawer minimized, click button on ${drawerPosition} side of screen to re-open`,\n              'info',\n            )\n            session.minimizeWidgetDrawer()\n          }}\n        >\n          <MinimizeIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Close drawer\">\n        <IconButton\n          color=\"inherit\"\n          onClick={() => session.hideWidget(visibleWidget)}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n      >\n        {['left', 'right'].map(option => (\n          <MenuItem\n            key={option}\n            selected={drawerPosition === 'option'}\n            onClick={() => {\n              session.setDrawerPosition(option)\n              setAnchorEl(null)\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  )\n})\n","import React, { Suspense, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\n\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport LoadingEllipses from '@jbrowse/core/ui/LoadingEllipses'\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\n// locals\nimport Drawer from './Drawer'\nimport DrawerHeader from './DrawerHeader'\n\nconst DrawerWidget = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { visibleWidget } = session\n  const { pluginManager } = getEnv(session)\n\n  const DrawerComponent = visibleWidget\n    ? (pluginManager.evaluateExtensionPoint(\n        'Core-replaceWidget',\n        pluginManager.getWidgetType(visibleWidget.type).ReactComponent,\n        {\n          session,\n          model: visibleWidget,\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as React.FC<any>)\n    : null\n\n  // we track the toolbar height because components that use virtualized\n  // height want to be able to fill the contained, minus the toolbar height\n  // (the position static/sticky is included in AutoSizer estimates)\n  const [toolbarHeight, setToolbarHeight] = useState(0)\n\n  return (\n    <Drawer session={session}>\n      <DrawerHeader session={session} setToolbarHeight={setToolbarHeight} />\n      <Suspense fallback={<LoadingEllipses />}>\n        <ErrorBoundary\n          FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n        >\n          {DrawerComponent ? (\n            <>\n              <DrawerComponent\n                model={visibleWidget}\n                session={session}\n                toolbarHeight={toolbarHeight}\n              />\n              <div style={{ height: 300 }} />\n            </>\n          ) : null}\n        </ErrorBoundary>\n      </Suspense>\n    </Drawer>\n  )\n})\n\nexport default DrawerWidget\n"],"names":["useStyles","makeStyles","theme","paper","overflowY","height","zIndex","drawer","outline","background","palette","default","resizeHandle","width","position","top","observer","_ref","children","session","drawerPosition","drawerWidth","classes","ref","useRef","useEffect","handleSelectView","e","target","Element","current","contains","_session$visibleWidge","_session$visibleWidge2","visibleWidgetId","visibleWidget","view","id","setFocusedViewId","document","addEventListener","removeEventListener","_jsxs","Paper","className","elevation","square","_jsx","ResizeHandle","onDrag","resizeDrawer","vertical","style","left","formControl","margin","spacer","flexGrow","drawerSelect","color","secondary","contrastText","dropDownIcon","header","main","headerFocused","light","headerUnfocused","dark","setToolbarHeight","focusedViewId","viewWidgetId","isFocused","AppBar","concat","getBoundingClientRect","Toolbar","disableGutters","DrawerWidgetSelector","DrawerControls","_ref3","activeWidgets","pluginManager","getEnv","FormControl","Select","value","icon","renderValue","widgetId","widget","get","Typography","variant","widgetType","getWidgetType","type","HeadingComponent","heading","model","onChange","w","showWidget","notify","_toConsumableArray","values","map","MenuItem","IconButton","onClick","hideWidget","DeleteIcon","_ref4","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","_Fragment","event","currentTarget","MoreVertIcon","Tooltip","title","minimizeWidgetDrawer","MinimizeIcon","CloseIcon","Menu","open","Boolean","onClose","option","selected","setDrawerPosition","DrawerComponent","evaluateExtensionPoint","ReactComponent","toolbarHeight","Drawer","DrawerHeader","Suspense","fallback","LoadingEllipses","ErrorBoundary","FallbackComponent","_ref2","error","ErrorMessage"],"sourceRoot":""}