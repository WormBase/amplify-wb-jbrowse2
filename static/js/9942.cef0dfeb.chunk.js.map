{"version":3,"file":"static/js/9942.cef0dfeb.chunk.js","mappings":"mgBAsBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,QAASJ,EAAMK,QAAQ,IAGzBC,KAAM,CACJC,UAAWP,EAAMK,QAAQ,QAqG7B,GAjG2BG,EAAAA,EAAAA,WAAS,SAAAC,GAIhC,IAJ0C,MAC5CC,GAGDD,EACC,MAAM,QAAEE,GAAYb,KACbc,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,CAAC,OAAQ,QAC/CK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,CAAC,MAAO,SACzCO,EAAW,CACf,CACEC,MAAO,sBACPC,OAAQN,GAEV,CACEK,MAAO,2BACPC,OAAQJ,IAOZ,OAJAK,EAAAA,EAAAA,YAAU,KACRd,EAAMe,oBAAoB,CAAER,aAAYE,WAAU,GACjD,CAACT,EAAOO,EAAYE,KAGrBO,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAWjB,EAAQV,MAAM4B,SAAA,EAC9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,SAAC,2BACXR,EAASW,KAAI,CAACC,EAASC,KACtBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAACC,QAAM,EAAqBR,UAAWjB,EAAQL,KAAKuB,UACvDH,EAAAA,EAAAA,MAACW,EAAAA,EAAW,CAAAR,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,SAAEI,EAAQX,SACrBI,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAACC,gBAAc,EAAAV,SAAA,CACjBI,EAAQV,OAAOS,KAAI,CAACQ,EAAaC,KAChCX,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,CAAWC,gBAAc,EAAAd,UAChCC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRC,MAAOL,EACPM,WAAY,CACVC,cACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTC,QAASA,KACP,MAAMC,EAAUnB,EAAQV,OAAO8B,QAC7B,CAACC,EAAGC,IAAMA,IAAMd,IAER,IAAVP,EACIhB,EAAckC,GACdhC,EAAWgC,EAAQ,EACvBvB,UAEFC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,YAhBRf,MAwBjBX,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,CAACC,gBAAc,EAAAd,UACtBC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRC,MAAiB,IAAVX,EAActB,EAASG,EAC9B0C,YAAY,UACZC,SAAUC,IACE,IAAVzB,EACIrB,EAAU8C,EAAMC,OAAOf,OACvB7B,EAAU2C,EAAMC,OAAOf,MAAM,EAEnCC,WAAY,CACVC,cACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTC,QAASA,KACO,IAAVjB,GACFhB,EAAc,IAAID,EAAYL,IAC9BC,EAAU,MAEVO,EAAW,IAAID,EAASJ,IACxBC,EAAU,IACZ,EAEF6C,SAAoB,IAAV3B,EAAyB,KAAXtB,EAA2B,KAAXG,EACxC,oCAAmCc,UAEnCC,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,oBAtDR7B,EAAQX,WAmElC,ICxHMxB,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCK,QAAS,CACP0D,aAAc/D,EAAMK,QAAQ,QAkChC,GA9B0BG,EAAAA,EAAAA,WAASC,IAA0C,IAAzC,MAAEC,GAAiCD,EACrE,MAAM,QAAEE,GAAYb,KACd,cAAEkE,IAAkBC,EAAAA,EAAAA,QAAOvD,IAC3B,UAAEwD,GAAcxD,EAChByD,EAAaH,EAAcI,mBAEjC,OACEtC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRhB,UAAWjB,EAAQN,QACnBwC,MAAOqB,EACPG,QAAQ,WACR/C,MAAM,aACNgD,WAAW,oBACXC,QAAM,EACNC,WAAS,EACTd,SAAUC,GAASjD,EAAM+D,aAAad,EAAMC,OAAOf,OACnD6B,YAAa,CAEXC,mBAAoB,CAAE,cAAe,oBACrC9C,SAEDsC,EAAWnC,KAAI4C,IAAA,IAAC,KAAEC,EAAI,YAAEC,GAAaF,EAAA,OACpC9C,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAAYlC,MAAOgC,EAAKhD,SAC9BiD,GADYD,EAEJ,KAEH,I,eC/BhB,MAAM/E,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCK,QAAS,CACP0D,aAAc/D,EAAMK,QAAQ,QAOhC,SAAS2E,EAAmBC,GAC1B,MAAMjD,EAAM,CAAC,EAQb,OAPAiD,EAAaC,SAAQC,IAAY,IAADC,EAC9B,MAAMC,GAA6B,QAAvBD,EAAAD,EAAQG,uBAAe,IAAAF,OAAA,EAAvBA,EAAyBG,WAAY,UAC5CvD,EAAIqD,KACPrD,EAAIqD,GAAO,IAEbrD,EAAIqD,GAAKG,KAAKL,EAAQ,IAEjBnD,CACT,CAEA,MAyCA,GAzC6BxB,EAAAA,EAAAA,WAASC,IAA0C,IAAzC,MAAEC,GAAiCD,EACxE,MAAM,QAAEE,GAAYb,KACd,aAAE2F,GAAiB/E,GACnB,cAAEsD,IAAkBC,EAAAA,EAAAA,QAAOvD,GACjC,OACEoB,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRhB,UAAWjB,EAAQN,QACnBwC,MAA8B,aAAX,OAAZ4C,QAAY,IAAZA,OAAY,EAAZA,EAAcC,MAAiC,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcC,KAAO,GAC/DpE,MAAM,eACN+C,QAAQ,WACRC,WAAW,yBACXC,QAAM,EACNC,WAAS,EACTd,SAAUC,GAASjD,EAAMiF,eAAehC,EAAMC,OAAOf,OACrD6B,YAAa,CAEXC,mBAAoB,CAAE,cAAe,sBACrC9C,SAED+D,OAAOC,QACNb,EACEhB,EACG8B,qBACAzC,QAAO0C,IAAC,IAAAC,EAAA,QAAsB,QAAlBA,EAACD,EAAET,uBAAe,IAAAU,GAAjBA,EAAmBC,cAAc,MAEnDjE,KAAI4C,IAAiB,IAAfS,EAAK7C,GAAIoC,EAGf,MAAO,EACL9C,EAAAA,EAAAA,KAACoE,EAAAA,EAAa,CAAArE,SAAYwD,GAANA,GACpB7C,EAAIR,KAAImE,IACNrE,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAAgBlC,MAAOsD,EAAItB,KAAKhD,SACtCsE,EAAIrB,aADQqB,EAAItB,QAItB,KAEO,IC3CV/E,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCK,QAAS,CACP0D,aAAc/D,EAAMK,QAAQ,QAIhC,SAAS+F,EAAa3F,GAMlB,IANmB,aACrBgF,EAAY,UACZvB,GAIDzD,EACC,MAAM,QAAEE,GAAYb,KACd,KAAE4F,EAAI,WAAEW,GAAeZ,EAC7B,MAAgB,uBAATC,GACLhE,EAAAA,EAAAA,MAAC4E,EAAAA,EAAU,CAAC1E,UAAWjB,EAAQN,QAAQwB,SAAA,CAAC,aAC7BC,EAAAA,EAAAA,KAAA,QAAAD,SAAOqC,IAAiB,oBAAgBpC,EAAAA,EAAAA,KAAA,QAAAD,SAAO6D,IAAY,qBACzD5D,EAAAA,EAAAA,KAAA,QAAAD,SAAiB,OAAVwE,QAAU,IAAVA,OAAU,EAAVA,EAAYX,OAAY,4EAI5ChE,EAAAA,EAAAA,MAAC4E,EAAAA,EAAU,CAAC1E,UAAWjB,EAAQN,QAAQwB,SAAA,CAAC,kBACxBC,EAAAA,EAAAA,KAAA,QAAAD,SAAO6D,IAAY,2BAAyB,KAC1D5D,EAAAA,EAAAA,KAAA,QAAAD,SAAOqC,IAAiB,0EAI9B,CAEA,SAASqC,EAAoB3B,GAAuC,IAAtC,MAAElE,GAAiCkE,EAC/D,MAAM,QAAEjE,GAAYb,IACpB,OACE4B,EAAAA,EAAAA,MAAA8E,EAAAA,SAAA,CAAA3E,SAAA,EACEH,EAAAA,EAAAA,MAAC4E,EAAAA,EAAU,CAAC1E,UAAWjB,EAAQN,QAAQwB,SAAA,CAAC,iHAEA,KACtCC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CACHC,KAAK,sDACL9C,OAAO,SACP+C,IAAI,sBAAqB9E,SAC1B,2BAEO,IAAI,sDACwC,KACpDC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CACHC,KAAK,wDACL9C,OAAO,SACP+C,IAAI,sBAAqB9E,SAC1B,kBAEO,IAAI,oDAGdC,EAAAA,EAAAA,KAAC8E,EAAoB,CAAClG,MAAOA,MAGnC,CAEA,MA0GA,GA1GqBF,EAAAA,EAAAA,WAAS,SAAqBqG,GAI/C,IAJgD,MAClDnG,GAGDmG,EACC,MAAM,QAAElG,GAAYb,KACbgH,EAAOC,IAAYjG,EAAAA,EAAAA,WAAS,GAC7BkG,GAAUC,EAAAA,EAAAA,YAAWvG,IACrB,UAAEwG,EAAS,aAAEzB,EAAY,UAAEvB,EAAS,eAAEiD,EAAc,YAAEC,GAC1D1G,EAQF,IANAc,EAAAA,EAAAA,YAAU,KACY,KAAhB4F,GAAsB3B,GACxB/E,EAAMiF,eAAeF,EAAaC,KACpC,GACC,CAAC0B,EAAa3B,EAA0B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcC,KAAMhF,IAE/CA,EAAM2G,YACR,OACE3F,EAAAA,EAAAA,MAAC4E,EAAAA,EAAU,CAAC1E,UAAWjB,EAAQN,QAAQwB,SAAA,CAAC,kJAG9B,KACRC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CACHC,KAAK,sDACL9C,OAAO,SACP+C,IAAI,sBAAqB9E,SAC1B,2BAEO,IAAI,gBACE,KACdC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CACHC,KAAK,wDACL9C,OAAO,SACP+C,IAAI,sBAAqB9E,SAC1B,kBAEO,IAAI,mDAKlB,IAAgB,OAAZ4D,QAAY,IAAZA,OAAY,EAAZA,EAAcC,QAAS4B,EAAAA,QACzB,OAAOxF,EAAAA,EAAAA,KAACyE,EAAoB,CAAC7F,MAAOA,IAGtC,GAAiB,OAAZ+E,QAAY,IAAZA,IAAAA,EAAcC,KACjB,OAAO5D,EAAAA,EAAAA,KAACwE,EAAAA,EAAU,CAAAzE,SAAC,wCAGrB,MAAM0F,GAAuBC,EAAAA,EAAAA,4BAAuC,OAAZ/B,QAAY,IAAZA,OAAY,EAAZA,EAAcC,MACtE,OACEhE,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACG4D,GACC3D,EAAAA,EAAAA,KAACsE,EAAa,CAACX,aAAcA,EAAcvB,UAAWA,IACpD,KACHiD,GACCrF,EAAAA,EAAAA,KAACwE,EAAAA,EAAU,CAACmB,MAAO,CAAEC,MAAO,UAAW7F,SAAEsF,IACvC,MACJrF,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRhB,UAAWjB,EAAQN,QACnBiB,MAAM,YACNgD,WAAW,wBACXE,WAAS,EACT3B,MAAOqE,EACPxD,SAAUC,GAASjD,EAAMiH,aAAahE,EAAMC,OAAOf,OACnD+E,WAAY,CAAE,cAAe,qBAE/B9F,EAAAA,EAAAA,KAAC8E,EAAoB,CAAClG,MAAOA,KAC7BoB,EAAAA,EAAAA,KAAC+F,EAAiB,CAACnH,MAAOA,KAC1BoB,EAAAA,EAAAA,KAACgG,EAAAA,iBAAgB,CACfd,QAASA,EACT1C,WAAW,kCACXyD,SAAUrH,EAAMsH,SAChBtE,SAAUuE,GAAOvH,EAAMwH,YAAYD,GACnCE,eAAgB,CACd3D,WAAW,EACXE,YAAa,CAEXC,mBAAoB,CAAE,cAAe,0BAI1CyD,EAAAA,YAAcb,IACbzF,EAAAA,EAAAA,KAACuG,EAAAA,EAAW,CAAAxG,UACVC,EAAAA,EAAAA,KAACwG,EAAAA,EAAgB,CACfhH,MAAO,kCACPiH,SACEzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAQ,CACPC,QAAS3B,EACTpD,SAAUqC,IACRgB,EAAShB,EAAEnC,OAAO6E,SAClB/H,EAAMgI,kBAAkB3C,EAAEnC,OAAO6E,QAAQ,QAOpDL,EAAAA,YAActB,GAASS,GACtBzF,EAAAA,EAAAA,KAAC6G,EAAkB,CAACjI,MAAOA,IACzB,OAGV,ICjLMZ,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCC,MAAO,CACLG,QAASJ,EAAMK,QAAQ,IAEzBuI,OAAQ,CACNC,OAAQ7I,EAAMK,QAAQ,QAmC1B,GA/B0BG,EAAAA,EAAAA,WAAS,SAAAC,GAI/B,IAJyC,MAC3CC,GAGDD,EACC,MAAM,QAAEE,GAAYb,IACdgJ,GAAYC,EAAAA,EAAAA,SAA2BrI,GAE7C,OACEgB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAWjB,EAAQV,MAAM4B,SAAA,EAC9BC,EAAAA,EAAAA,KAACkH,EAAAA,aAAY,CACXnE,KAAK,YACLoE,YAAY,GACZC,SAAUxI,EAAMyI,UAChBC,YAAa1I,EAAM2I,aACnBC,QAAS5I,EAAMiH,aACfmB,UAAWA,KAEbhH,EAAAA,EAAAA,KAAA,OAAKF,UAAWjB,EAAQiI,UACxB9G,EAAAA,EAAAA,KAACkH,EAAAA,aAAY,CACXnE,KAAK,aACLoE,YAAY,sHACZC,SAAUxI,EAAM6I,eAChBH,YAAa1I,EAAM8I,kBACnBF,QAAS5I,EAAMiH,aACfmB,UAAWA,MAInB,ICrBMhJ,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCyJ,KAAM,CACJlJ,UAAWP,EAAMK,QAAQ,IAE3BqJ,QAAS,CACPC,gBAAiB3J,EAAM4J,QAAQC,WAAWC,SAE5CC,OAAQ,CACNC,YAAahK,EAAMK,QAAQ,IAE7B4J,iBAAkB,CAChB1J,UAAWP,EAAMK,QAAQ,IACzB0D,aAAc/D,EAAMK,QAAQ,IAE9B6J,eAAgB,CACd9J,QAAQ,GAAD+J,OAAKnK,EAAMK,QAAQ,GAAE,WAAA8J,OAAUnK,EAAMK,QAAQ,GAAE,eAIpD+J,EAAQ,CAAC,mBAAoB,sBAkKnC,GAhKgC5J,EAAAA,EAAAA,WAAS,SAAAC,GAIrC,IAJ+C,MACjDC,GAGDD,EACC,MAAO4J,EAAYC,IAAiBxJ,EAAAA,EAAAA,UAAS,IACvC,QAAEH,GAAYb,KAGd,YAAEyK,IAAgBxB,EAAAA,EAAAA,SAAarI,GAC/BsG,GAAUC,EAAAA,EAAAA,YAAWvG,IACrB,SACJsH,EAAQ,aACRvC,EAAY,UACZ0D,EAAS,UACTjC,EAAS,UACThD,EAAS,eACTsG,EAAc,iBACdC,GACE/J,GACGgK,EAAmBC,IAAwB7J,EAAAA,EAAAA,YAElD,SAAS8J,EAAeC,GACtB,OAAQA,GACN,KAAK,EACH,OAAO/I,EAAAA,EAAAA,KAACgJ,EAAiB,CAACpK,MAAOA,IACnC,KAAK,EACH,OAAOoB,EAAAA,EAAAA,KAACiJ,EAAY,CAACrK,MAAOA,IAC9B,QACE,OAAOoB,EAAAA,EAAAA,KAACwE,EAAAA,EAAU,CAAAzE,SAAC,iBAEzB,CAEAmJ,eAAeC,IACb,GAAIZ,IAAeD,EAAMc,OAAS,EAEhC,YADAZ,EAAcD,EAAa,GAI7B,MAAMc,EAAU,CAAC,GAADhB,OACXjD,EAAUkE,cAAcC,WAAW,IAAK,KAAI,KAAAlB,OAAImB,KAAKC,OAAK,GAAApB,OAC1DnD,EAAQwE,UAAY,GAAK,kBAC5BC,KAAK,IAEDC,EAAmB1E,EAAQ2E,gBAAgBC,IAAI5D,GACrD,IAAK6D,EAAAA,EAAAA,wBAAuB7E,GAI5B,GAAI0E,GAAoBjG,GAAsC,YAAtBA,EAAaC,KAAoB,CAAC,IAADoG,EAAAC,EAYvE,GAXA/E,EAAQgF,aAAa,CACnBb,UACAzF,KAAMxB,EACNW,KAAMqC,EACN+E,cAAe,CAACjE,GAChB7C,QAAS,IACJM,EACHyG,iBAAiBC,EAAAA,EAAAA,SAAQT,EAAkB,CAAC,WAAY,eAGxC,QAApBI,GAAAC,EAAArL,EAAM0L,MAAKC,iBAAS,IAAAP,GAApBA,EAAAQ,KAAAP,EAAuBZ,GAErB/C,EAAAA,YACAoC,IACAhD,EAAAA,EAAAA,4BAA2B/B,EAAaC,MACxC,CACA,MAIM6G,EAAYrF,EAAY,SACxBsF,EAAW,CACfC,eAAgB,IANLhC,GAAoB,CAC/BxJ,WAAY,CAAC,OAAQ,MACrBE,QAAS,CAAC,MAAO,SAMfuL,WAAY,CAAC1E,GACb2E,OAAQ,CAACxB,GACTyB,UAAW,WACX/H,KAAM0H,EACNM,WAAW,IAAIvB,MAAOwB,eAExBjI,KAAM0H,EACNQ,eAAgBA,IAAMxC,EAAYyC,YAEpCzC,EAAY0C,SAAST,EACvB,MACExF,EAAQkG,OACN,qFACA,QAGJxM,EAAMyM,aACFC,EAAAA,EAAAA,2BAA0BpG,IAC5BA,EAAQqG,WAAW3M,EAEvB,MACEiK,EACE,yFAlDFA,EAAqB,qCAqDzB,CAEA,SAAS2C,IACP3C,OAAqB4C,GACrBjD,EAAcD,EAAa,EAC7B,CAEA,SAASmD,IACP,OAAQnD,GACN,KAAK,EACH,OAAQlB,EACV,KAAK,EACH,QAASjC,GAAahD,GAAyB,OAAZuB,QAAY,IAAZA,GAAAA,EAAcC,MAAQsC,GAC3D,QACE,OAAO,EAEb,CAEA,OACElG,EAAAA,EAAAA,KAAA,OAAKF,UAAWjB,EAAQ8I,KAAK5H,UAC3BC,EAAAA,EAAAA,KAAC2L,EAAAA,EAAO,CACN7L,UAAWjB,EAAQ+I,QACnBW,WAAYA,EACZqD,YAAY,WAAU7L,SAErBuI,EAAMpI,KAAI,CAACV,EAAOmB,KACjBf,EAAAA,EAAAA,MAACiM,EAAAA,EAAI,CAAA9L,SAAA,EACHC,EAAAA,EAAAA,KAAC8L,EAAAA,EAAS,CAAA/L,SAAEP,KACZI,EAAAA,EAAAA,MAACmM,EAAAA,EAAW,CAAAhM,SAAA,CACT+I,EAAenI,IAChBf,EAAAA,EAAAA,MAAA,OAAKE,UAAWjB,EAAQsJ,iBAAiBpI,SAAA,EACvCC,EAAAA,EAAAA,KAACgM,EAAAA,EAAM,CACLjK,SAAyB,IAAfwG,EACVlH,QAASmK,EACT1L,UAAWjB,EAAQoJ,OAAOlI,SAC3B,UAGDC,EAAAA,EAAAA,KAACgM,EAAAA,EAAM,CACLjK,SAAU2J,IACVnJ,QAAQ,YACRqD,MAAM,UACNvE,QAAS8H,EACTrJ,UAAWjB,EAAQoJ,OACnB,cAAY,qBAAoBlI,SAE/BwI,IAAeD,EAAMc,OAAS,EAAI,MAAQ,YAG9CR,GACC5I,EAAAA,EAAAA,KAAA,OAAKF,UAAWjB,EAAQuJ,eAAerI,UACrCC,EAAAA,EAAAA,KAACiM,EAAAA,EAAK,CAACC,SAAS,QAAOnM,SAAE6I,MAEzB,UA3BGpJ,QAkCrB,IClMMxB,IAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BkO,QAAS,CACPC,MAAO,QAETC,OAAQ,CACN5N,UAAW,GACXwD,aAAc,IACd7D,QAAS,WAwDb,IApDoCM,EAAAA,EAAAA,WAAS,SAAAC,GAIzC,IAJmD,MACrDC,GAGDD,EACC,MAAM,QAAEE,GAAYb,MACb0C,EAAK4L,IAAUtN,EAAAA,EAAAA,UAAS,KACxBuN,EAAOC,IAAYxN,EAAAA,EAAAA,YAE1B,OACEY,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACGwM,GAAQvM,EAAAA,EAAAA,KAACyM,EAAAA,aAAY,CAACF,MAAOA,IAAY,MAC1CvM,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACR4L,WAAS,EACTC,KAAM,GACN5L,MAAOL,EACPkB,SAAUC,GAASyK,EAAOzK,EAAMC,OAAOf,OACvCY,YACE,8DAEFY,QAAQ,WACRzC,UAAWjB,EAAQsN,WAErBnM,EAAAA,EAAAA,KAACgM,EAAAA,EAAM,CACLzJ,QAAQ,YACRzC,UAAWjB,EAAQwN,OACnBhL,QAASA,KACP,IACEmL,OAASf,GACT,MAAMvG,GAAUC,EAAAA,EAAAA,YAAWvG,GACrBgO,EAAOC,KAAKC,MAAMpM,GAClBqM,EAAQC,MAAMC,QAAQL,GAAQA,EAAO,CAACA,IAE1C7C,EAAAA,EAAAA,wBAAuB7E,KACvBoG,EAAAA,EAAAA,2BAA0BpG,KAE1B6H,EAAM3J,SAAQ8J,GAAKhI,EAAQgF,aAAagD,KACxCH,EAAM3J,SAAQ8J,GAAKtO,EAAM0L,KAAKC,UAAU2C,EAAE7D,WAC1CzK,EAAMyM,YACNnG,EAAQqG,WAAW3M,GAEvB,CAAE,MAAOqF,GACPkJ,QAAQZ,MAAMtI,GACduI,EAASvI,EACX,GACAlE,SACH,aAKP,IC9BA,IApCyBrB,EAAAA,EAAAA,WAAS,SAAAC,GAI9B,IAJwC,MAC1CC,GAGDD,EACC,MAAO+B,EAAK4L,IAAUtN,EAAAA,EAAAA,UAAS,+BACzB,cAAEkD,IAAkBC,EAAAA,EAAAA,QAAOvD,GAC3BwO,EAAUlL,EAAcmL,8BACxBC,EAAe,CACnB,6BAA8BC,EAC9B,iBAAkBC,MACf1J,OAAO2J,YAAYL,EAAQlN,KAAIwN,GAAK,CAACA,EAAE3K,KAAM2K,EAAEC,oBAI9CC,EAAON,EAAa5M,GAAOA,EAAM,6BACjCmN,EAAYP,EAAaM,GAC/B,OACEhO,EAAAA,EAAAA,MAAA8E,EAAAA,SAAA,CAAA3E,SAAA,EACEH,EAAAA,EAAAA,MAAC2G,EAAAA,EAAW,CAAAxG,SAAA,EACVC,EAAAA,EAAAA,KAAC8N,EAAAA,EAAM,CAAC/M,MAAO6M,EAAMhM,SAAUC,GAASyK,EAAOzK,EAAMC,OAAOf,OAAOhB,SAChE+D,OAAOiK,KAAKT,GAAcpN,KAAI+D,IAC7BjE,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAASlC,MAAOkD,EAAElE,SACxBkE,GADYA,QAKnBjE,EAAAA,EAAAA,KAACgO,EAAAA,EAAc,CAAAjO,SAAC,mCAGlBC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC6N,EAAS,CAACjP,MAAOA,MAGxB,G,sBCzCIqP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAepG,UAAuB,EAAIqG,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kFACD,UACJL,EAAQ,EAAUG,C,+LCZX,MAAMG,EAAuB,CAClCC,QAAS,eACTC,YAAa,eACbC,UAAW,iBACXC,cAAe,iBACftC,MAAO,cAiBT,EAZ0B5N,IAGpB,IAHqB,MACzBT,EAAK,WACL4Q,GACDnQ,EACC,MAAMoQ,EAP0BnJ,IACzB6I,EAAqB7I,IAAUA,EAMboJ,CAA0BF,EAAWlJ,OACxDA,GAAQqJ,EAAAA,EAAAA,IAAQ/Q,EAAO,WAAFmK,OAAa0G,IAAoB,IAAUD,EAAWlJ,MAC3EsJ,GAAeD,EAAAA,EAAAA,IAAQ/Q,EAAO,WAAFmK,OAAa0G,EAAgB,YAC/D,MAAI,SAAU7Q,GAASgR,EACd,QAAP7G,OAAe6G,EAAY,YAEtBC,EAAAA,EAAAA,IAAMvJ,EAAO,GAAI,E,eCjB1B,MAAMwJ,EAAY,CAAC,YAAa,QAAS,YAAa,SAAU,UAAW,oBAAqB,YAAa,UAAW,MA2BlHC,GAAWC,EAAAA,EAAAA,IAAO9K,EAAAA,EAAY,CAClCzB,KAAM,UACNwM,KAAM,OACNC,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJZ,GACEW,EACJ,MAAO,CAACC,EAAO/H,KAAM+H,EAAO,YAADrH,QAAasH,EAAAA,EAAAA,GAAWb,EAAWc,aAAwC,WAAzBd,EAAWe,WAA0BH,EAAOzH,OAAO,GAPnHqH,EASd3Q,IAGG,IAHF,MACFT,EAAK,WACL4Q,GACDnQ,EACC,OAAOmR,EAAAA,EAAAA,GAAS,CAAC,EAA4B,SAAzBhB,EAAWc,WAAwB,CACrDG,eAAgB,QACU,UAAzBjB,EAAWc,WAAyB,CACrCG,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAEQ,WAAzBjB,EAAWc,YAA0BE,EAAAA,EAAAA,GAAS,CAC/CC,eAAgB,aACM,YAArBjB,EAAWlJ,OAAuB,CACnCoK,oBAAqBC,EAAkB,CACrC/R,QACA4Q,gBAED,CACD,UAAW,CACTkB,oBAAqB,aAEI,WAAzBlB,EAAWe,WAA0B,CACvC1O,SAAU,WACV+O,wBAAyB,cACzBrI,gBAAiB,cAGjBsI,QAAS,EACTC,OAAQ,EACRC,OAAQ,EAERC,aAAc,EACdhS,QAAS,EAETiS,OAAQ,UACRC,WAAY,OACZC,cAAe,SACfC,cAAe,OAEfC,iBAAkB,OAElB,sBAAuB,CACrBC,YAAa,QAGf,CAAC,KAADvI,OAAMwI,EAAAA,EAAYC,eAAiB,CACjCX,QAAS,SAEX,IA0HJ,EAxH0BY,EAAAA,YAAiB,SAAcC,EAASC,GAChE,MAAMxB,GAAQyB,EAAAA,EAAAA,GAAc,CAC1BzB,MAAOuB,EACPjO,KAAM,aAEF,UACFjD,EAAS,MACT8F,EAAQ,UAAS,UACjBiK,EAAY,IAAG,OACfsB,EAAM,QACNC,EAAO,kBACPC,EAAiB,UACjBzB,EAAY,SAAQ,QACpBrN,EAAU,UAAS,GACnB+O,GACE7B,EACJ8B,GAAQC,EAAAA,EAAAA,GAA8B/B,EAAOL,IACzC,kBACJqC,EACAN,OAAQO,EACRN,QAASO,EACTV,IAAKW,IACHC,EAAAA,EAAAA,MACGf,EAAcgB,GAAmBf,EAAAA,UAAe,GACjDgB,GAAaC,EAAAA,EAAAA,GAAWf,EAAKW,GAmB7B9C,GAAagB,EAAAA,EAAAA,GAAS,CAAC,EAAGL,EAAO,CACrC7J,QACAiK,YACAiB,eACAlB,YACArN,YAEI1D,EA1HkBiQ,KACxB,MAAM,QACJjQ,EAAO,UACPgR,EAAS,aACTiB,EAAY,UACZlB,GACEd,EACEmD,EAAQ,CACZtK,KAAM,CAAC,OAAQ,YAAFU,QAAcsH,EAAAA,EAAAA,GAAWC,IAA4B,WAAdC,GAA0B,SAAUiB,GAAgB,iBAE1G,OAAOoB,EAAAA,EAAAA,GAAeD,EAAOE,EAAAA,EAAqBtT,EAAQ,EAgH1CuT,CAAkBtD,GAClC,OAAoB9O,EAAAA,EAAAA,KAAKqP,GAAUS,EAAAA,EAAAA,GAAS,CAC1ClK,MAAOA,EACP9F,WAAWuS,EAAAA,EAAAA,GAAKxT,EAAQ8I,KAAM7H,GAC9BjB,QAASwS,EACTxB,UAAWA,EACXsB,OA/BiBtP,IACjB6P,EAAkB7P,IACgB,IAA9B4P,EAAkBa,SACpBR,GAAgB,GAEdX,GACFA,EAAOtP,EACT,EAyBAuP,QAvBkBvP,IAClB8P,EAAmB9P,IACe,IAA9B4P,EAAkBa,SACpBR,GAAgB,GAEdV,GACFA,EAAQvP,EACV,EAiBAoP,IAAKc,EACLjD,WAAYA,EACZvM,QAASA,EACT+O,GAAI,IAAMxN,OAAOiK,KAAKU,GAAsB8D,SAAS3M,GAEhD,GAFyD,CAAC,CAC7DA,aACYoH,MAAMC,QAAQqE,GAAMA,EAAK,CAACA,KACvCC,GACL,G,qEC1JO,SAASY,EAAoB5C,GAClC,OAAOiD,EAAAA,EAAAA,GAAqB,UAAWjD,EACzC,CACA,MACA,GADoBkD,EAAAA,EAAAA,GAAuB,UAAW,CAAC,OAAQ,gBAAiB,iBAAkB,kBAAmB,SAAU,gB","sources":["../../../plugins/data-management/src/AddTrackWidget/components/TextIndexingConfig.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackTypeSelector.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackAdapterSelector.tsx","../../../plugins/data-management/src/AddTrackWidget/components/ConfirmTrack.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackSourceSelect.tsx","../../../plugins/data-management/src/AddTrackWidget/components/DefaultAddTrackWorkflow.tsx","../../../plugins/data-management/src/AddTrackWidget/components/PasteConfigWorkflow.tsx","../../../plugins/data-management/src/AddTrackWidget/components/AddTrackWidget.tsx","../../../node_modules/@mui/icons-material/Delete.js","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  InputLabel,\n  InputAdornment,\n  List,\n  ListItem,\n  Paper,\n  TextField,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(1),\n  },\n\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst TextIndexingConfig = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [attributes, setAttributes] = useState(['Name', 'ID'])\n  const [exclude, setExclude] = useState(['CDS', 'exon'])\n  const sections = [\n    {\n      label: 'Indexing attributes',\n      values: attributes,\n    },\n    {\n      label: 'Feature types to exclude',\n      values: exclude,\n    },\n  ]\n  useEffect(() => {\n    model.setTextIndexingConf({ attributes, exclude })\n  }, [model, attributes, exclude])\n\n  return (\n    <Paper className={classes.paper}>\n      <InputLabel>Indexing configuration</InputLabel>\n      {sections.map((section, index) => (\n        <Card raised key={section.label} className={classes.card}>\n          <CardContent>\n            <InputLabel>{section.label}</InputLabel>\n            <List disablePadding>\n              {section.values.map((val: string, idx: number) => (\n                <ListItem key={idx} disableGutters>\n                  <TextField\n                    value={val}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            onClick={() => {\n                              const newAttr = section.values.filter(\n                                (_, i) => i !== idx,\n                              )\n                              index === 0\n                                ? setAttributes(newAttr)\n                                : setExclude(newAttr)\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </ListItem>\n              ))}\n              <ListItem disableGutters>\n                <TextField\n                  value={index === 0 ? value1 : value2}\n                  placeholder=\"add new\"\n                  onChange={event => {\n                    index === 0\n                      ? setValue1(event.target.value)\n                      : setValue2(event.target.value)\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => {\n                            if (index === 0) {\n                              setAttributes([...attributes, value1])\n                              setValue1('')\n                            } else {\n                              setExclude([...exclude, value2])\n                              setValue2('')\n                            }\n                          }}\n                          disabled={index === 0 ? value1 === '' : value2 === ''}\n                          data-testid={`stringArrayAdd-Feat`}\n                        >\n                          <AddIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      ))}\n    </Paper>\n  )\n})\n\nexport default TextIndexingConfig\n","import React from 'react'\nimport { MenuItem, TextField } from '@mui/material'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nconst TrackTypeSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(model)\n  const { trackType } = model\n  const trackTypes = pluginManager.getTrackElements()\n\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackType}\n      variant=\"outlined\"\n      label=\"Track type\"\n      helperText=\"Select track type\"\n      select\n      fullWidth\n      onChange={event => model.setTrackType(event.target.value)}\n      SelectProps={{\n        // @ts-expect-error\n        SelectDisplayProps: { 'data-testid': 'trackTypeSelect' },\n      }}\n    >\n      {trackTypes.map(({ name, displayName }) => (\n        <MenuItem key={name} value={name}>\n          {displayName}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nexport default TrackTypeSelector\n","import React from 'react'\nimport { ListSubheader, MenuItem, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\n// collate adapters into a map with\n// key: category\n// value: array of adapters with that category\nfunction categorizeAdapters(adaptersList: AdapterType[]) {\n  const map = {} as Record<string, AdapterType[]>\n  adaptersList.forEach(adapter => {\n    const key = adapter.adapterMetadata?.category || 'Default'\n    if (!map[key]) {\n      map[key] = []\n    }\n    map[key].push(adapter)\n  })\n  return map\n}\n\nconst TrackAdapterSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const { trackAdapter } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackAdapter?.type !== 'UNKNOWN' ? trackAdapter?.type : ''}\n      label=\"Adapter type\"\n      variant=\"outlined\"\n      helperText=\"Select an adapter type\"\n      select\n      fullWidth\n      onChange={event => model.setAdapterHint(event.target.value)}\n      SelectProps={{\n        // @ts-expect-error\n        SelectDisplayProps: { 'data-testid': 'adapterTypeSelect' },\n      }}\n    >\n      {Object.entries(\n        categorizeAdapters(\n          pluginManager\n            .getAdapterElements()\n            .filter(e => !e.adapterMetadata?.hiddenFromGUI),\n        ),\n      ).map(([key, val]) => {\n        // returning array avoids needing to use a react fragment which\n        // Select/TextField sub-elements disagree with\n        return [\n          <ListSubheader key={key}>{key}</ListSubheader>,\n          val.map(elt => (\n            <MenuItem key={elt.name} value={elt.name}>\n              {elt.displayName}\n            </MenuItem>\n          )),\n        ]\n      })}\n    </TextField>\n  )\n})\n\nexport default TrackAdapterSelector\n","import React, { useEffect, useState } from 'react'\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  Link,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  isSupportedIndexingAdapter,\n  getSession,\n  isElectron,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { UNKNOWN } from '@jbrowse/core/util/tracks'\nimport { AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { AddTrackModel } from '../model'\nimport TextIndexingConfig from './TextIndexingConfig'\nimport TrackTypeSelector from './TrackTypeSelector'\nimport TrackAdapterSelector from './TrackAdapterSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nfunction StatusMessage({\n  trackAdapter,\n  trackType,\n}: {\n  trackAdapter: { type: string; subadapter?: { type: string } }\n  trackType: string\n}) {\n  const { classes } = useStyles()\n  const { type, subadapter } = trackAdapter\n  return type === 'SNPCoverageAdapter' ? (\n    <Typography className={classes.spacing}>\n      Selected <code>{trackType}</code>. Using adapter <code>{type}</code> with\n      subadapter <code>{subadapter?.type}</code>. Please enter a track name and,\n      if necessary, update the track type.\n    </Typography>\n  ) : (\n    <Typography className={classes.spacing}>\n      Using adapter <code>{type}</code> and guessing track type{' '}\n      <code>{trackType}</code>. Please enter a track name and, if necessary,\n      update the track type.\n    </Typography>\n  )\n}\n\nfunction UnknownAdapterPrompt({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <Typography className={classes.spacing}>\n        JBrowse was not able to guess the adapter type for this data, but it may\n        be in the list below. If not, you can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse to see if they support this data type or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n      <TrackAdapterSelector model={model} />\n    </>\n  )\n}\n\nconst ConfirmTrack = observer(function ConfirmTrack({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const [check, setCheck] = useState(true)\n  const session = getSession(model)\n  const { trackName, trackAdapter, trackType, warningMessage, adapterHint } =\n    model\n\n  useEffect(() => {\n    if (adapterHint === '' && trackAdapter) {\n      model.setAdapterHint(trackAdapter.type)\n    }\n  }, [adapterHint, trackAdapter, trackAdapter?.type, model])\n\n  if (model.unsupported) {\n    return (\n      <Typography className={classes.spacing}>\n        This version of JBrowse cannot display data of this type. It is\n        possible, however, that there is a newer version that can display them.\n        You can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n    )\n  }\n  if (trackAdapter?.type === UNKNOWN) {\n    return <UnknownAdapterPrompt model={model} />\n  }\n\n  if (!trackAdapter?.type) {\n    return <Typography>Could not recognize this data type.</Typography>\n  }\n\n  const supportedForIndexing = isSupportedIndexingAdapter(trackAdapter?.type)\n  return (\n    <div>\n      {trackAdapter ? (\n        <StatusMessage trackAdapter={trackAdapter} trackType={trackType} />\n      ) : null}\n      {warningMessage ? (\n        <Typography style={{ color: 'orange' }}>{warningMessage}</Typography>\n      ) : null}\n      <TextField\n        className={classes.spacing}\n        label=\"trackName\"\n        helperText=\"A name for this track\"\n        fullWidth\n        value={trackName}\n        onChange={event => model.setTrackName(event.target.value)}\n        inputProps={{ 'data-testid': 'trackNameInput' }}\n      />\n      <TrackAdapterSelector model={model} />\n      <TrackTypeSelector model={model} />\n      <AssemblySelector\n        session={session}\n        helperText=\"Select assembly to add track to\"\n        selected={model.assembly}\n        onChange={asm => model.setAssembly(asm)}\n        TextFieldProps={{\n          fullWidth: true,\n          SelectProps: {\n            // @ts-expect-error\n            SelectDisplayProps: { 'data-testid': 'assemblyNameSelect' },\n          },\n        }}\n      />\n      {isElectron && supportedForIndexing && (\n        <FormControl>\n          <FormControlLabel\n            label={'Index track for text searching?'}\n            control={\n              <Checkbox\n                checked={check}\n                onChange={e => {\n                  setCheck(e.target.checked)\n                  model.setTextIndexTrack(e.target.checked)\n                }}\n              />\n            }\n          />\n        </FormControl>\n      )}\n      {isElectron && check && supportedForIndexing ? (\n        <TextIndexingConfig model={model} />\n      ) : null}\n    </div>\n  )\n})\n\nexport default ConfirmTrack\n","import React from 'react'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { AbstractRootModel } from '@jbrowse/core/util'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  spacer: {\n    height: theme.spacing(8),\n  },\n}))\n\nconst TrackSourceSelect = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const rootModel = getRoot<AbstractRootModel>(model)\n\n  return (\n    <Paper className={classes.paper}>\n      <FileSelector\n        name=\"Main file\"\n        description=\"\"\n        location={model.trackData}\n        setLocation={model.setTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n      <div className={classes.spacer} />\n      <FileSelector\n        name=\"Index file\"\n        description=\"(Optional) The URL of the index file is automatically inferred from the URL of the main file if it is not supplied.\"\n        location={model.indexTrackData}\n        setLocation={model.setIndexTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n    </Paper>\n  )\n})\n\nexport default TrackSourceSelect\n","import React, { useState } from 'react'\nimport {\n  Alert,\n  Button,\n  Step,\n  StepContent,\n  StepLabel,\n  Stepper,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\n\nimport {\n  getSession,\n  isElectron,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n  isSupportedIndexingAdapter,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport ConfirmTrack from './ConfirmTrack'\nimport TrackSourceSelect from './TrackSourceSelect'\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n  },\n  stepper: {\n    backgroundColor: theme.palette.background.default,\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginTop: theme.spacing(10),\n    marginBottom: theme.spacing(2),\n  },\n  alertContainer: {\n    padding: `${theme.spacing(2)}px 0px ${theme.spacing(2)}px 0px`,\n  },\n}))\n\nconst steps = ['Enter track data', 'Confirm track type']\n\nconst DefaultAddTrackWorkflow = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const [activeStep, setActiveStep] = useState(0)\n  const { classes } = useStyles()\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { jobsManager } = getRoot<any>(model)\n  const session = getSession(model)\n  const {\n    assembly,\n    trackAdapter,\n    trackData,\n    trackName,\n    trackType,\n    textIndexTrack,\n    textIndexingConf,\n  } = model\n  const [trackErrorMessage, setTrackErrorMessage] = useState<string>()\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case 0:\n        return <TrackSourceSelect model={model} />\n      case 1:\n        return <ConfirmTrack model={model} />\n      default:\n        return <Typography>Unknown step</Typography>\n    }\n  }\n\n  async function handleNext() {\n    if (activeStep !== steps.length - 1) {\n      setActiveStep(activeStep + 1)\n      return\n    }\n\n    const trackId = [\n      `${trackName.toLowerCase().replaceAll(' ', '_')}-${Date.now()}`,\n      `${session.adminMode ? '' : '-sessionTrack'}`,\n    ].join('')\n\n    const assemblyInstance = session.assemblyManager.get(assembly)\n    if (!isSessionWithAddTracks(session)) {\n      setTrackErrorMessage('Unable to add tracks to this model')\n      return\n    }\n    if (assemblyInstance && trackAdapter && trackAdapter.type !== 'UNKNOWN') {\n      session.addTrackConf({\n        trackId,\n        type: trackType,\n        name: trackName,\n        assemblyNames: [assembly],\n        adapter: {\n          ...trackAdapter,\n          sequenceAdapter: getConf(assemblyInstance, ['sequence', 'adapter']),\n        },\n      })\n      model.view.showTrack?.(trackId)\n      if (\n        isElectron &&\n        textIndexTrack &&\n        isSupportedIndexingAdapter(trackAdapter.type)\n      ) {\n        const attr = textIndexingConf || {\n          attributes: ['Name', 'ID'],\n          exclude: ['CDS', 'exon'],\n        }\n        const indexName = trackName + '-index'\n        const newEntry = {\n          indexingParams: {\n            ...attr,\n            assemblies: [assembly],\n            tracks: [trackId],\n            indexType: 'perTrack',\n            name: indexName,\n            timestamp: new Date().toISOString(),\n          },\n          name: indexName,\n          cancelCallback: () => jobsManager.abortJob(),\n        }\n        jobsManager.queueJob(newEntry)\n      } else {\n        session.notify(\n          'Open a new view, or use the track selector in an existing view, to view this track',\n          'info',\n        )\n      }\n      model.clearData()\n      if (isSessionModelWithWidgets(session)) {\n        session.hideWidget(model)\n      }\n    } else {\n      setTrackErrorMessage(\n        'Failed to add track.\\nThe configuration of this file is not currently supported.',\n      )\n    }\n  }\n\n  function handleBack() {\n    setTrackErrorMessage(undefined)\n    setActiveStep(activeStep - 1)\n  }\n\n  function isNextDisabled() {\n    switch (activeStep) {\n      case 0:\n        return !trackData\n      case 1:\n        return !(trackName && trackType && trackAdapter?.type && assembly)\n      default:\n        return true\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        className={classes.stepper}\n        activeStep={activeStep}\n        orientation=\"vertical\"\n      >\n        {steps.map((label, idx) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              {getStepContent(idx)}\n              <div className={classes.actionsContainer}>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                <Button\n                  disabled={isNextDisabled()}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  data-testid=\"addTrackNextButton\"\n                >\n                  {activeStep === steps.length - 1 ? 'Add' : 'Next'}\n                </Button>\n              </div>\n              {trackErrorMessage ? (\n                <div className={classes.alertContainer}>\n                  <Alert severity=\"error\">{trackErrorMessage}</Alert>\n                </div>\n              ) : null}\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  )\n})\nexport default DefaultAddTrackWorkflow\n","import React, { useState } from 'react'\nimport { Button, TextField } from '@mui/material'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()({\n  textbox: {\n    width: '100%',\n  },\n  submit: {\n    marginTop: 25,\n    marginBottom: 100,\n    display: 'block',\n  },\n})\n\nconst PasteConfigAddTrackWorkflow = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const [val, setVal] = useState('')\n  const [error, setError] = useState<unknown>()\n\n  return (\n    <div>\n      {error ? <ErrorMessage error={error} /> : null}\n      <TextField\n        multiline\n        rows={10}\n        value={val}\n        onChange={event => setVal(event.target.value)}\n        placeholder={\n          'Paste track config or array of track configs in JSON format'\n        }\n        variant=\"outlined\"\n        className={classes.textbox}\n      />\n      <Button\n        variant=\"contained\"\n        className={classes.submit}\n        onClick={() => {\n          try {\n            setError(undefined)\n            const session = getSession(model)\n            const conf = JSON.parse(val)\n            const confs = Array.isArray(conf) ? conf : [conf]\n            if (\n              isSessionWithAddTracks(session) &&\n              isSessionModelWithWidgets(session)\n            ) {\n              confs.forEach(c => session.addTrackConf(c))\n              confs.forEach(c => model.view.showTrack(c.trackId))\n              model.clearData()\n              session.hideWidget(model)\n            }\n          } catch (e) {\n            console.error(e)\n            setError(e)\n          }\n        }}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n})\nexport default PasteConfigAddTrackWorkflow\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { FormControl, FormHelperText, Select, MenuItem } from '@mui/material'\nimport { getEnv } from '@jbrowse/core/util'\n\n// locals\nimport { AddTrackModel } from '../model'\nimport DefaultAddTrackWorkflow from './DefaultAddTrackWorkflow'\nimport PasteConfigWorkflow from './PasteConfigWorkflow'\n\nconst AddTrackSelector = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const [val, setVal] = useState('Default add track workflow')\n  const { pluginManager } = getEnv(model)\n  const widgets = pluginManager.getAddTrackWorkflowElements()\n  const ComponentMap = {\n    'Default add track workflow': DefaultAddTrackWorkflow,\n    'Add track JSON': PasteConfigWorkflow,\n    ...Object.fromEntries(widgets.map(w => [w.name, w.ReactComponent])),\n  } as Record<string, React.FC<{ model: AddTrackModel }>>\n\n  // make sure the selected value is in the list\n  const val2 = ComponentMap[val] ? val : 'Default add track workflow'\n  const Component = ComponentMap[val2]\n  return (\n    <>\n      <FormControl>\n        <Select value={val2} onChange={event => setVal(event.target.value)}>\n          {Object.keys(ComponentMap).map(e => (\n            <MenuItem key={e} value={e}>\n              {e}\n            </MenuItem>\n          ))}\n        </Select>\n        <FormHelperText>Type of add track workflow</FormHelperText>\n      </FormControl>\n\n      <br />\n      <Component model={model} />\n    </>\n  )\n})\n\nexport default AddTrackSelector\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","paper","display","flexDirection","padding","spacing","card","marginTop","observer","_ref","model","classes","value1","setValue1","useState","value2","setValue2","attributes","setAttributes","exclude","setExclude","sections","label","values","useEffect","setTextIndexingConf","_jsxs","Paper","className","children","_jsx","InputLabel","map","section","index","Card","raised","CardContent","List","disablePadding","val","idx","ListItem","disableGutters","TextField","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","newAttr","filter","_","i","DeleteIcon","placeholder","onChange","event","target","disabled","AddIcon","marginBottom","pluginManager","getEnv","trackType","trackTypes","getTrackElements","variant","helperText","select","fullWidth","setTrackType","SelectProps","SelectDisplayProps","_ref2","name","displayName","MenuItem","categorizeAdapters","adaptersList","forEach","adapter","_adapter$adapterMetad","key","adapterMetadata","category","push","trackAdapter","type","setAdapterHint","Object","entries","getAdapterElements","e","_e$adapterMetadata","hiddenFromGUI","ListSubheader","elt","StatusMessage","subadapter","Typography","UnknownAdapterPrompt","_Fragment","Link","href","rel","TrackAdapterSelector","_ref3","check","setCheck","session","getSession","trackName","warningMessage","adapterHint","unsupported","UNKNOWN","supportedForIndexing","isSupportedIndexingAdapter","style","color","setTrackName","inputProps","TrackTypeSelector","AssemblySelector","selected","assembly","asm","setAssembly","TextFieldProps","isElectron","FormControl","FormControlLabel","control","Checkbox","checked","setTextIndexTrack","TextIndexingConfig","spacer","height","rootModel","getRoot","FileSelector","description","location","trackData","setLocation","setTrackData","setName","indexTrackData","setIndexTrackData","root","stepper","backgroundColor","palette","background","default","button","marginRight","actionsContainer","alertContainer","concat","steps","activeStep","setActiveStep","jobsManager","textIndexTrack","textIndexingConf","trackErrorMessage","setTrackErrorMessage","getStepContent","step","TrackSourceSelect","ConfirmTrack","async","handleNext","length","trackId","toLowerCase","replaceAll","Date","now","adminMode","join","assemblyInstance","assemblyManager","get","isSessionWithAddTracks","_model$view$showTrack","_model$view","addTrackConf","assemblyNames","sequenceAdapter","getConf","view","showTrack","call","indexName","newEntry","indexingParams","assemblies","tracks","indexType","timestamp","toISOString","cancelCallback","abortJob","queueJob","notify","clearData","isSessionModelWithWidgets","hideWidget","handleBack","undefined","isNextDisabled","Stepper","orientation","Step","StepLabel","StepContent","Button","Alert","severity","textbox","width","submit","setVal","error","setError","ErrorMessage","multiline","rows","conf","JSON","parse","confs","Array","isArray","c","console","widgets","getAddTrackWorkflowElements","ComponentMap","DefaultAddTrackWorkflow","PasteConfigWorkflow","fromEntries","w","ReactComponent","val2","Component","Select","keys","FormHelperText","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","colorTransformations","primary","textPrimary","secondary","textSecondary","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","slot","overridesResolver","props","styles","capitalize","underline","component","_extends","textDecoration","textDecorationColor","getTextDecoration","WebkitTapHighlightColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","getLinkUtilityClass","useUtilityClasses","clsx","current","includes","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}