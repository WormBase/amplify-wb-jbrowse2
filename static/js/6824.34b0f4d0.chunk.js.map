{"version":3,"file":"static/js/6824.34b0f4d0.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/BamAdapter/BamSlightlyLazyFeature.ts","../../../plugins/alignments/src/BamAdapter/BamAdapter.ts"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { BamRecord } from '@gmod/bam'\n\n// locals\nimport { getClip, getMismatches } from '../MismatchParser'\nimport BamAdapter from './BamAdapter'\n\nexport default class BamSlightlyLazyFeature implements Feature {\n  // uses parameter properties to automatically create fields on the class\n  // https://www.typescriptlang.org/docs/handbook/classes.html#parameter-properties\n  constructor(\n    private record: BamRecord,\n    private adapter: BamAdapter,\n    private ref?: string,\n  ) {}\n\n  _get_name() {\n    return this.record.get('name')\n  }\n\n  _get_type(): string {\n    return 'match'\n  }\n\n  _get_score(): number {\n    return this.record.get('mq')\n  }\n\n  _get_flags(): string {\n    return this.record.flags\n  }\n\n  _get_strand(): number {\n    return this.record.isReverseComplemented() ? -1 : 1\n  }\n\n  _get_pair_orientation() {\n    return this.record.isPaired() ? this.record.getPairOrientation() : undefined\n  }\n\n  _get_next_ref() {\n    return this.record.isPaired()\n      ? this.adapter.refIdToName(this.record._next_refid())\n      : undefined\n  }\n\n  _get_next_pos() {\n    return this.record.isPaired() ? this.record._next_pos() : undefined\n  }\n\n  _get_next_segment_position() {\n    return this.record.isPaired()\n      ? `${this.adapter.refIdToName(this.record._next_refid())}:${\n          this.record._next_pos() + 1\n        }`\n      : undefined\n  }\n\n  _get_seq() {\n    return this.record.getReadBases()\n  }\n\n  qualRaw() {\n    return this.record.qualRaw()\n  }\n\n  set() {}\n\n  tags() {\n    const properties = Object.getOwnPropertyNames(\n      BamSlightlyLazyFeature.prototype,\n    )\n\n    return [\n      ...new Set(\n        properties\n          .filter(\n            prop =>\n              prop.startsWith('_get_') &&\n              prop !== '_get_mismatches' &&\n              prop !== '_get_tags',\n          )\n          .map(methodName => methodName.replace('_get_', ''))\n          .concat(this.record._tags()),\n      ),\n    ]\n  }\n\n  id() {\n    return `${this.adapter.id}-${this.record.id()}`\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(field: string): any {\n    const methodName = `_get_${field}`\n    // @ts-expect-error\n    if (this[methodName]) {\n      // @ts-expect-error\n      return this[methodName]()\n    }\n    return this.record.get(field)\n  }\n\n  _get_refName() {\n    return this.adapter.refIdToName(this.record.seq_id())\n  }\n\n  parent() {\n    return undefined\n  }\n\n  children() {\n    return undefined\n  }\n\n  pairedFeature() {\n    return false\n  }\n\n  toJSON(): SimpleFeatureSerialized {\n    return {\n      ...Object.fromEntries(\n        this.tags()\n          .map(t => [t, this.get(t)])\n          .filter(elt => elt[1] !== undefined),\n      ),\n      uniqueId: this.id(),\n    }\n  }\n\n  _get_mismatches() {\n    return getMismatches(\n      this.get('CIGAR'),\n      this.get('MD'),\n      this.get('seq'),\n      this.ref,\n      this.qualRaw(),\n    )\n  }\n\n  _get_clipPos() {\n    const cigar = this.get('CIGAR') || ''\n    return getClip(cigar, this.get('strand'))\n  }\n}\n","import { BamFile } from '@gmod/bam'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util/types'\nimport { bytesForRegions, updateStatus, Feature } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { toArray } from 'rxjs/operators'\nimport { firstValueFrom } from 'rxjs'\n\n// locals\nimport BamSlightlyLazyFeature from './BamSlightlyLazyFeature'\nimport { IFilter } from '../shared'\n\ninterface Header {\n  idToName: string[]\n  nameToId: Record<string, number>\n}\n\nexport default class BamAdapter extends BaseFeatureDataAdapter {\n  private samHeader?: Header\n\n  private setupP?: Promise<Header>\n  private configureP?: Promise<{\n    bam: BamFile\n    sequenceAdapter?: BaseFeatureDataAdapter\n  }>\n\n  // derived classes may not use the same configuration so a custom\n  // configure method allows derived classes to override this behavior\n  protected async configurePre() {\n    const bamLocation = this.getConf('bamLocation')\n    const location = this.getConf(['index', 'location'])\n    const indexType = this.getConf(['index', 'indexType'])\n    const pm = this.pluginManager\n    const csi = indexType === 'CSI'\n    const bam = new BamFile({\n      bamFilehandle: openLocation(bamLocation, pm),\n      csiFilehandle: csi ? openLocation(location, pm) : undefined,\n      baiFilehandle: !csi ? openLocation(location, pm) : undefined,\n\n      // chunkSizeLimit and fetchSizeLimit are more troublesome than\n      // helpful, and have given overly large values on the ultra long\n      // nanopore reads even with 500MB limits, so disabled with infinity\n      yieldThreadTime: Infinity,\n    })\n\n    const adapterConfig = this.getConf('sequenceAdapter')\n    if (adapterConfig && this.getSubAdapter) {\n      const { dataAdapter } = await this.getSubAdapter(adapterConfig)\n      return {\n        bam,\n        sequenceAdapter: dataAdapter as BaseFeatureDataAdapter,\n      }\n    } else {\n      return { bam }\n    }\n  }\n\n  protected async configure() {\n    if (!this.configureP) {\n      this.configureP = this.configurePre().catch(e => {\n        this.configureP = undefined\n        throw e\n      })\n    }\n    return this.configureP\n  }\n\n  async getHeader(opts?: BaseOptions) {\n    const { bam } = await this.configure()\n    return bam.getHeaderText(opts)\n  }\n\n  private async setupPre(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    const { bam } = await this.configure()\n    this.samHeader = await updateStatus(\n      'Downloading index',\n      statusCallback,\n      async () => {\n        const samHeader = await bam.getHeader(opts)\n\n        // use the @SQ lines in the header to figure out the\n        // mapping between ref ref ID numbers and names\n        const idToName: string[] = []\n        const nameToId: Record<string, number> = {}\n        samHeader\n          ?.filter(l => l.tag === 'SQ')\n          .forEach((sqLine, refId) => {\n            sqLine.data.forEach(item => {\n              if (item.tag === 'SN') {\n                // this is the ref name\n                const refName = item.value\n                nameToId[refName] = refId\n                idToName[refId] = refName\n              }\n            })\n          })\n\n        return { idToName, nameToId }\n      },\n    )\n    return this.samHeader\n  }\n\n  async setup(opts?: BaseOptions) {\n    if (!this.setupP) {\n      this.setupP = this.setupPre(opts).catch(e => {\n        this.setupP = undefined\n        throw e\n      })\n    }\n    return this.setupP\n  }\n\n  async getRefNames(opts?: BaseOptions) {\n    const { idToName } = await this.setup(opts)\n    return idToName\n  }\n\n  private async seqFetch(refName: string, start: number, end: number) {\n    const { sequenceAdapter } = await this.configure()\n    const refSeqStore = sequenceAdapter\n    if (!refSeqStore) {\n      return undefined\n    }\n    if (!refName) {\n      return undefined\n    }\n\n    const features = refSeqStore.getFeatures({\n      refName,\n      start,\n      end,\n      assemblyName: '',\n    })\n\n    const seqChunks = await firstValueFrom(features.pipe(toArray()))\n\n    let sequence = ''\n    seqChunks\n      .sort((a, b) => a.get('start') - b.get('start'))\n      .forEach(chunk => {\n        const chunkStart = chunk.get('start')\n        const chunkEnd = chunk.get('end')\n        const trimStart = Math.max(start - chunkStart, 0)\n        const trimEnd = Math.min(end - chunkStart, chunkEnd - chunkStart)\n        const trimLength = trimEnd - trimStart\n        const chunkSeq = chunk.get('seq') || chunk.get('residues')\n        sequence += chunkSeq.slice(trimStart, trimStart + trimLength)\n      })\n\n    if (sequence.length !== end - start) {\n      throw new Error(\n        `sequence fetch failed: fetching ${refName}:${(\n          start - 1\n        ).toLocaleString()}-${end.toLocaleString()} returned ${sequence.length.toLocaleString()} bases, but should have returned ${(\n          end - start\n        ).toLocaleString()}`,\n      )\n    }\n    return sequence\n  }\n\n  getFeatures(\n    region: Region & { originalRefName?: string },\n    opts?: BaseOptions & {\n      filterBy: IFilter\n    },\n  ) {\n    const { refName, start, end, originalRefName } = region\n    const { signal, filterBy, statusCallback = () => {} } = opts || {}\n    return ObservableCreate<Feature>(async observer => {\n      const { bam } = await this.configure()\n      await this.setup(opts)\n      const records = await updateStatus(\n        'Downloading alignments',\n        statusCallback,\n        () => bam.getRecordsForRange(refName, start, end, opts),\n      )\n\n      await updateStatus('Processing alignments', statusCallback, async () => {\n        const {\n          flagInclude = 0,\n          flagExclude = 0,\n          tagFilter,\n          readName,\n        } = filterBy || {}\n\n        for (const record of records) {\n          let ref: string | undefined\n          if (!record.get('MD')) {\n            ref = await this.seqFetch(\n              originalRefName || refName,\n              record.get('start'),\n              record.get('end'),\n            )\n          }\n\n          const flags = record.flags\n          if ((flags & flagInclude) !== flagInclude && !(flags & flagExclude)) {\n            continue\n          }\n\n          if (tagFilter) {\n            const v = record.get(tagFilter.tag)\n            if (!(v === '*' ? v !== undefined : `${v}` === tagFilter.value)) {\n              continue\n            }\n          }\n\n          if (readName && record.get('name') !== readName) {\n            continue\n          }\n\n          observer.next(new BamSlightlyLazyFeature(record, this, ref))\n        }\n        observer.complete()\n      })\n    }, signal)\n  }\n\n  async getMultiRegionFeatureDensityStats(\n    regions: Region[],\n    opts?: BaseOptions,\n  ) {\n    const { bam } = await this.configure()\n    // this is a method to avoid calling on htsget adapters\n    if (bam.index) {\n      const bytes = await bytesForRegions(regions, bam)\n      const fetchSizeLimit = this.getConf('fetchSizeLimit')\n      return { bytes, fetchSizeLimit }\n    } else {\n      return super.getMultiRegionFeatureDensityStats(regions, opts)\n    }\n  }\n\n  freeResources(/* { region } */): void {}\n\n  // depends on setup being called before the BAM constructor\n  refIdToName(refId: number) {\n    return this.samHeader?.idToName[refId]\n  }\n}\n"],"names":["BamSlightlyLazyFeature","record","adapter","ref","_classCallCheck","_createClass","key","value","this","get","flags","isReverseComplemented","isPaired","getPairOrientation","undefined","refIdToName","_next_refid","_next_pos","concat","getReadBases","qualRaw","properties","Object","getOwnPropertyNames","prototype","_toConsumableArray","Set","filter","prop","startsWith","map","methodName","replace","_tags","id","field","seq_id","_this","_objectSpread","fromEntries","tags","t","elt","uniqueId","getMismatches","cigar","getClip","BamAdapter","_BaseFeatureDataAdapt","_configurePre","_configure","_getHeader","_setupPre","_setup","_getRefNames","_seqFetch","_getMultiRegionFeatureDensityStats","_inherits","_super","_createSuper","_len","arguments","length","args","Array","_key","call","apply","samHeader","setupP","configureP","_asyncToGenerator","_regeneratorRuntime","mark","_callee","bamLocation","location","indexType","pm","csi","bam","adapterConfig","_yield$this$getSubAda","dataAdapter","wrap","_context","prev","next","getConf","pluginManager","BamFile","bamFilehandle","openLocation","csiFilehandle","baiFilehandle","yieldThreadTime","Infinity","getSubAdapter","sent","abrupt","sequenceAdapter","stop","_callee2","_this2","_context2","configurePre","catch","e","_x","_callee3","opts","_yield$this$configure","_context3","configure","getHeaderText","_x2","_callee5","_ref$statusCallback","statusCallback","_yield$this$configure2","_context5","updateStatus","_callee4","idToName","nameToId","_context4","getHeader","l","tag","forEach","sqLine","refId","data","item","refName","_x3","_callee6","_this3","_context6","setupPre","_x4","_callee7","_yield$this$setup","_context7","setup","_x5","_x6","_x7","_callee8","start","end","_yield$this$configure3","refSeqStore","features","seqChunks","sequence","_context8","getFeatures","assemblyName","firstValueFrom","pipe","toArray","sort","a","b","chunk","chunkStart","chunkEnd","trimStart","Math","max","trimLength","min","chunkSeq","slice","Error","toLocaleString","region","_ref4","_this4","originalRefName","_ref3","signal","filterBy","_ref3$statusCallback","ObservableCreate","_x8","_callee10","observer","_yield$_this4$configu","records","_context10","getRecordsForRange","_callee9","_ref6","_ref6$flagInclude","flagInclude","_ref6$flagExclude","flagExclude","tagFilter","readName","_iterator","_step","v","_context9","_createForOfIteratorHelper","s","n","done","seqFetch","t0","f","finish","complete","_x9","_x10","_callee11","regions","_yield$this$configure4","bytes","fetchSizeLimit","_context11","index","bytesForRegions","_get","_getPrototypeOf","_this$samHeader","BaseFeatureDataAdapter"],"sourceRoot":""}