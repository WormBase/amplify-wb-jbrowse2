{"version":3,"file":"static/js/4629.5d7acbb7.chunk.js","mappings":"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","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/ImportForm.tsx","../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  Button,\n  FormControl,\n  Container,\n  Grid,\n  CircularProgress,\n} from '@mui/material'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\n\n// locals\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport { fetchResults, splitLast } from './util'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(2),\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  container: {\n    padding: theme.spacing(4),\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\nconst LinearGenomeViewImportForm = observer(function ({\n  model,\n}: {\n  model: LGV\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager, textSearchManager } = session\n  const { rankSearchResults, error } = model\n  const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0])\n  const [option, setOption] = useState<BaseResult>()\n  const searchScope = model.searchScope(selectedAsm)\n  const assembly = assemblyManager.get(selectedAsm)\n  const assemblyError = assemblyNames.length\n    ? assembly?.error\n    : 'No configured assemblies'\n  const displayError = assemblyError || error\n  const [value, setValue] = useState('')\n  const regions = assembly?.regions\n  const assemblyLoaded = !!regions\n  const r0 = regions ? regions[0]?.refName : ''\n\n  // useEffect resets to an \"initial state\" of displaying first region from\n  // assembly after assembly change. needs to react to selectedAsm as well as\n  // r0 because changing assembly will run setValue('') and then r0 may not\n  // change if assembly names are the same across assemblies, but it still\n  // needs to be reset\n  useEffect(() => {\n    setValue(r0)\n  }, [r0, selectedAsm])\n\n  async function navToOption(option: BaseResult) {\n    const location = option.getLocation()\n    const trackId = option.getTrackId()\n    if (location) {\n      await model.navToLocString(location, selectedAsm)\n      if (trackId) {\n        model.showTrack(trackId)\n      }\n    }\n  }\n\n  // gets a string as input, or use stored option results from previous query,\n  // then re-query and\n  // 1) if it has multiple results: pop a dialog\n  // 2) if it's a single result navigate to it\n  // 3) else assume it's a locstring and navigate to it\n  async function handleSelectedRegion(input: string) {\n    try {\n      if (option?.getDisplayString() === input && option.hasLocation()) {\n        await navToOption(option)\n      } else if (option?.results?.length) {\n        model.setSearchResults(option.results, option.getLabel(), selectedAsm)\n      } else {\n        const [ref, rest] = splitLast(input, ':')\n        const allRefs = assembly?.allRefNamesWithLowerCase || []\n        if (\n          allRefs.includes(input) ||\n          (allRefs.includes(ref) && !Number.isNaN(Number.parseInt(rest, 10)))\n        ) {\n          await model.navToLocString(input, selectedAsm)\n        } else {\n          const results = await fetchResults({\n            queryString: input,\n            searchType: 'exact',\n            searchScope,\n            rankSearchResults,\n            textSearchManager,\n            assembly,\n          })\n\n          if (results.length > 1) {\n            model.setSearchResults(results, input.toLowerCase(), selectedAsm)\n          } else if (results.length === 1) {\n            await navToOption(results[0])\n          } else {\n            await model.navToLocString(input, selectedAsm)\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e)\n      session.notify(`${e}`, 'warning')\n    }\n  }\n\n  // implementation notes:\n  // having this wrapped in a form allows intuitive use of enter key to submit\n  return (\n    <div className={classes.container}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Container className={classes.importFormContainer}>\n        <form\n          onSubmit={async event => {\n            event.preventDefault()\n            model.setError(undefined)\n            if (value) {\n              // has it's own error handling\n              await handleSelectedRegion(value)\n            }\n          }}\n        >\n          <Grid\n            container\n            spacing={1}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <FormControl>\n                <AssemblySelector\n                  onChange={val => setSelectedAsm(val)}\n                  localStorageKey=\"lgv\"\n                  session={session}\n                  selected={selectedAsm}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item>\n              {selectedAsm ? (\n                assemblyError ? (\n                  <CloseIcon style={{ color: 'red' }} />\n                ) : assemblyLoaded ? (\n                  <FormControl>\n                    <RefNameAutocomplete\n                      fetchResults={queryString =>\n                        fetchResults({\n                          queryString,\n                          assembly,\n                          textSearchManager,\n                          rankSearchResults,\n                          searchScope,\n                        })\n                      }\n                      model={model}\n                      assemblyName={selectedAsm}\n                      value={value}\n                      minWidth={270}\n                      onChange={str => setValue(str)}\n                      onSelect={val => setOption(val)}\n                      TextFieldProps={{\n                        variant: 'outlined',\n                        helperText:\n                          'Enter sequence name, feature name, or location',\n                      }}\n                    />\n                  </FormControl>\n                ) : (\n                  <CircularProgress size={20} disableShrink />\n                )\n              ) : null}\n            </Grid>\n            <Grid item>\n              <FormControl>\n                <Button\n                  type=\"submit\"\n                  disabled={!value}\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Open\n                </Button>\n              </FormControl>\n              <FormControl>\n                <Button\n                  disabled={!value}\n                  className={classes.button}\n                  onClick={() => {\n                    model.setError(undefined)\n                    model.showAllRegionsInAssembly(selectedAsm)\n                  }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Show all regions in assembly\n                </Button>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </div>\n  )\n})\n\nexport default LinearGenomeViewImportForm\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["useStyles","makeStyles","theme","importFormContainer","padding","spacing","button","margin","container","LinearGenomeViewImportForm","observer","_ref","_regions$","_navToOption","_handleSelectedRegion","_ref2","model","classes","session","getSession","assemblyNames","assemblyManager","textSearchManager","rankSearchResults","error","_useState","useState","_useState2","_slicedToArray","selectedAsm","setSelectedAsm","_useState3","_useState4","option","setOption","searchScope","assembly","get","assemblyError","length","displayError","_useState5","_useState6","value","setValue","regions","assemblyLoaded","r0","refName","navToOption","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","location","trackId","wrap","_context","prev","next","getLocation","getTrackId","navToLocString","showTrack","stop","apply","arguments","handleSelectedRegion","_x2","_callee2","input","_option$results","_splitLast","_splitLast2","ref","rest","allRefs","results","_context2","getDisplayString","hasLocation","setSearchResults","getLabel","splitLast","allRefNamesWithLowerCase","includes","Number","isNaN","parseInt","fetchResults","queryString","searchType","sent","toLowerCase","t0","console","notify","concat","useEffect","_jsxs","className","children","_jsx","ErrorMessage","Container","onSubmit","_x3","_callee3","event","_context3","preventDefault","setError","undefined","Grid","justifyContent","alignItems","item","FormControl","AssemblySelector","onChange","val","localStorageKey","selected","CloseIcon","style","color","RefNameAutocomplete","assemblyName","minWidth","str","onSelect","TextFieldProps","variant","helperText","CircularProgress","size","disableShrink","Button","type","disabled","onClick","showAllRegionsInAssembly","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","_extends","width","marginLeft","boxSizing","marginRight","display","_defineProperty","paddingLeft","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref4","Math","max","xs","React","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","styled"],"sourceRoot":""}