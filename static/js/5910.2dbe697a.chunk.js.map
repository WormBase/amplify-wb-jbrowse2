{"version":3,"file":"static/js/5910.2dbe697a.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/SyntenyTooltip.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/LinearSyntenyRendering.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/Component.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/drawSynteny.ts"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Portal, useTheme, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  useClientPoint,\n  useFloating,\n  useInteractions,\n} from '@floating-ui/react'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\n\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\nconst SyntenyTooltip = observer(function ({ title }: { title: string }) {\n  const theme = useTheme()\n  const { classes } = useStyles()\n\n  const { refs, floatingStyles, context } = useFloating({\n    placement: 'right',\n  })\n\n  const clientPoint = useClientPoint(context)\n  const { getFloatingProps } = useInteractions([clientPoint])\n\n  const popperTheme = theme?.components?.MuiPopper\n\n  return title ? (\n    <Portal container={popperTheme?.defaultProps?.container}>\n      <div\n        className={classes.tooltip}\n        ref={refs.setFloating}\n        style={{\n          ...floatingStyles,\n          zIndex: 100000,\n          pointerEvents: 'none',\n        }}\n        {...getFloatingProps()}\n      >\n        <SanitizedHTML html={title} />\n      </div>\n    </Portal>\n  ) : null\n})\n\nexport default SyntenyTooltip\n","import React, { useState, useCallback, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  assembleLocString,\n  getContainingView,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\n\n// locals\nimport SyntenyTooltip from './SyntenyTooltip'\nimport { LinearSyntenyDisplayModel } from '../model'\nimport { getId, MAX_COLOR_RANGE } from '../drawSynteny'\nimport { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\nimport { transaction } from 'mobx'\n\nconst LinearSyntenyRendering = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  const highResolutionScaling = 1\n  const xOffset = useRef(0)\n  const currScrollFrame = useRef<number>()\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const height = view.middleComparativeHeight\n  const width = view.width\n\n  const [tooltip, setTooltip] = useState('')\n  const [currX, setCurrX] = useState<number>()\n  const [currY, setCurrY] = useState<number>()\n\n  // these useCallbacks avoid new refs from being created on any mouseover, etc.\n  const k1 = useCallback(\n    (ref: HTMLCanvasElement) => model.setMouseoverCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  const k2 = useCallback(\n    (ref: HTMLCanvasElement) => model.setMainCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  const k3 = useCallback(\n    (ref: HTMLCanvasElement) => model.setClickMapCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  const k4 = useCallback(\n    (ref: HTMLCanvasElement) => model.setCigarClickMapCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <canvas\n        ref={k1}\n        width={width}\n        height={height}\n        style={{ width, height, position: 'absolute', pointerEvents: 'none' }}\n      />\n      <canvas\n        ref={k2}\n        onWheel={event => {\n          if (Math.abs(event.deltaY) < Math.abs(event.deltaX)) {\n            xOffset.current += event.deltaX\n          }\n          if (currScrollFrame.current === undefined) {\n            currScrollFrame.current = requestAnimationFrame(() => {\n              transaction(() => {\n                for (const v of view.views) {\n                  v.horizontalScroll(xOffset.current)\n                }\n                xOffset.current = 0\n                currScrollFrame.current = undefined\n              })\n            })\n          }\n        }}\n        onMouseMove={event => {\n          const ref1 = model.clickMapCanvas\n          const ref2 = model.cigarClickMapCanvas\n          if (!ref1 || !ref2) {\n            return\n          }\n          const rect = ref1.getBoundingClientRect()\n          const ctx1 = ref1.getContext('2d')\n          const ctx2 = ref2.getContext('2d')\n          if (!ctx1 || !ctx2) {\n            return\n          }\n          const { clientX, clientY } = event\n          const x = clientX - rect.left\n          const y = clientY - rect.top\n          setCurrX(clientX)\n          setCurrY(clientY)\n          const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n          const [r2, g2, b2] = ctx2.getImageData(x, y, 1, 1).data\n          const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n          const id = getId(r1, g1, b1, unitMultiplier)\n          model.setMouseoverId(model.featPositions[id]?.f.id())\n          if (id === -1) {\n            setTooltip('')\n          } else if (model.featPositions[id]) {\n            const { f, cigar } = model.featPositions[id]\n            // @ts-expect-error\n            const f1 = f.toJSON() as {\n              refName: string\n              start: number\n              end: number\n              strand?: number\n              assemblyName: string\n              identity?: number\n              name?: string\n              mate: {\n                start: number\n                end: number\n                refName: string\n                name: string\n              }\n            }\n            const f2 = f1.mate\n            const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n            const cigarIdx = getId(r2, g2, b2, unitMultiplier2)\n            const cigarOp = cigar[cigarIdx]\n            const l1 = f1.end - f1.start\n            const l2 = f2.end - f2.start\n            const identity = f1.identity\n            const n1 = f1.name\n            const n2 = f2.name\n            const tooltip = [\n              `Loc1: ${assembleLocString(f1)}`,\n              `Loc2: ${assembleLocString(f2)}`,\n              `Inverted: ${f1.strand === -1}`,\n              `Query len: ${l1.toLocaleString('en-US')}`,\n              `Target len: ${l2.toLocaleString('en-US')}`,\n              identity ? `Identity: ${identity.toPrecision(2)}` : '',\n              cigarOp ? `CIGAR operator: ${cigarOp}${cigar[cigarIdx + 1]}` : '',\n              n1 ? `Name 1: ${n1}` : '',\n              n2 ? `Name 1: ${n2}` : '',\n            ]\n              .filter(f => !!f)\n              .join('<br/>')\n\n            setTooltip(tooltip)\n          }\n        }}\n        onMouseLeave={() => model.setMouseoverId(undefined)}\n        onClick={event => {\n          const ref1 = model.clickMapCanvas\n          const ref2 = model.cigarClickMapCanvas\n          if (!ref1 || !ref2) {\n            return\n          }\n          const rect = ref1.getBoundingClientRect()\n          const ctx1 = ref1.getContext('2d')\n          const ctx2 = ref2.getContext('2d')\n          if (!ctx1 || !ctx2) {\n            return\n          }\n          const x = event.clientX - rect.left\n          const y = event.clientY - rect.top\n          const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n          const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n          const id = getId(r1, g1, b1, unitMultiplier)\n          const f = model.featPositions[id]\n          if (!f) {\n            return\n          }\n          model.setClickId(f.f.id())\n          const session = getSession(model)\n          if (isSessionModelWithWidgets(session)) {\n            session.showWidget(\n              session.addWidget('SyntenyFeatureWidget', 'syntenyFeature', {\n                featureData: {\n                  feature1: f.f.toJSON(),\n                  feature2: f.f.get('mate'),\n                },\n              }),\n            )\n          }\n        }}\n        data-testid=\"synteny_canvas\"\n        style={{ width, height, position: 'absolute' }}\n        width={width * highResolutionScaling}\n        height={height * highResolutionScaling}\n      />\n      <canvas\n        ref={k3}\n        style={{\n          imageRendering: 'pixelated',\n          pointerEvents: 'none',\n          visibility: 'hidden',\n          position: 'absolute',\n        }}\n        width={width}\n        height={height}\n      />\n      <canvas\n        ref={k4}\n        style={{\n          imageRendering: 'pixelated',\n          pointerEvents: 'none',\n          visibility: 'hidden',\n          position: 'absolute',\n        }}\n        width={width}\n        height={height}\n      />\n      {model.mouseoverId && tooltip && currX && currY ? (\n        <SyntenyTooltip title={tooltip} />\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearSyntenyRendering\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\n\n// locals\nimport LinearSyntenyRendering from './LinearSyntenyRendering'\nimport { LinearSyntenyDisplayModel } from '../model'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n    blockMessage: {\n      background: '#f1f1f1',\n      padding: 10,\n    },\n    blockError: {\n      background: '#f1f1f1',\n      padding: 10,\n      color: 'red',\n    },\n  }\n})\n\nfunction LoadingMessage() {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const { classes } = useStyles()\n  useEffect(() => {\n    const timeout = setTimeout(() => setShown(true), 300)\n    return () => clearTimeout(timeout)\n  })\n\n  return shown ? (\n    <div className={classes.loading}>\n      <LoadingEllipses />\n    </div>\n  ) : null\n}\n\nfunction BlockMessage({ messageText }: { messageText: string }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockMessage}>{messageText}</div>\n}\n\nfunction BlockError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockError}>{`${error}`}</div>\n}\n\nconst ServerSideRenderedBlockContent = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  if (model.error) {\n    return <BlockError error={model.error} />\n  }\n  if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  }\n  if (!model.features) {\n    return <LoadingMessage />\n  }\n\n  return <LinearSyntenyRendering model={model} />\n})\n\nexport default ServerSideRenderedBlockContent\n","import { doesIntersect2, Feature } from '@jbrowse/core/util'\n\ninterface Pos {\n  offsetPx: number\n}\n\ninterface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\nexport function drawMatchSimple({\n  feature,\n  ctx,\n  offsets,\n  cb,\n  height,\n  drawCurves,\n  oobLimit,\n  viewWidth,\n  hideTiny,\n}: {\n  feature: FeatPos\n  ctx: CanvasRenderingContext2D\n  offsets: number[]\n  oobLimit: number\n  viewWidth: number\n  cb: (ctx: CanvasRenderingContext2D) => void\n  height: number\n  drawCurves?: boolean\n  hideTiny?: boolean\n}) {\n  const { p11, p12, p21, p22 } = feature\n\n  const x11 = p11.offsetPx - offsets[0]\n  const x12 = p12.offsetPx - offsets[0]\n  const x21 = p21.offsetPx - offsets[1]\n  const x22 = p22.offsetPx - offsets[1]\n\n  const l1 = Math.abs(x12 - x11)\n  const l2 = Math.abs(x22 - x21)\n  const y1 = 0\n  const y2 = height\n  const mid = (y2 - y1) / 2\n  const minX = Math.min(x21, x22)\n  const maxX = Math.max(x21, x22)\n\n  if (!doesIntersect2(minX, maxX, -oobLimit, viewWidth + oobLimit)) {\n    return\n  }\n\n  // drawing a line if the results are thin: drawing a line results in much\n  // less pixellation than filling in a thin polygon\n  if (l1 <= 1 && l2 <= 1) {\n    // hideTiny can be used to avoid drawing mouseover for thin lines in this\n    // case\n    if (!hideTiny) {\n      ctx.beginPath()\n      ctx.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx.lineTo(x21, y2)\n      }\n      ctx.stroke()\n    }\n  } else {\n    draw(ctx, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n    cb(ctx)\n  }\n}\n\nexport function draw(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n  drawCurves?: boolean,\n) {\n  if (drawCurves) {\n    drawBezierBox(ctx, x1, x2, y1, x3, x4, y2, mid)\n  } else {\n    drawBox(ctx, x1, x2, y1, x3, x4, y2)\n  }\n}\n\nexport function drawBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n) {\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.lineTo(x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.closePath()\n  ctx.fill()\n}\n\nexport function drawBezierBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n) {\n  const len1 = Math.abs(x1 - x2)\n  const len2 = Math.abs(x1 - x2)\n\n  // heuristic to not draw hourglass inversions with bezier curves when they\n  // are thin and far apart because it results in areas that are not drawn well\n  // demo https://codesandbox.io/s/fast-glitter-q3b1or?file=/src/index.js\n  if (len1 < 5 && len2 < 5 && x2 < x1 && Math.abs(x1 - x3) > 100) {\n    const tmp = x1\n    x1 = x2\n    x2 = tmp\n  }\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.bezierCurveTo(x2, mid, x3, mid, x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.bezierCurveTo(x4, mid, x1, mid, x1, y1)\n  ctx.closePath()\n  ctx.fill()\n}\n","import { doesIntersect2, getContainingView } from '@jbrowse/core/util'\nimport { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\nimport { LinearSyntenyDisplayModel } from './model'\nimport { draw, drawMatchSimple } from './components/util'\n\nexport const MAX_COLOR_RANGE = 255 * 255 * 255 // max color range\n\nfunction makeColor(idx: number) {\n  const r = Math.floor(idx / (255 * 255)) % 255\n  const g = Math.floor(idx / 255) % 255\n  const b = idx % 255\n  return `rgb(${r},${g},${b})`\n}\n\nconst colorMap = {\n  I: '#ff03',\n  N: '#0a03',\n  D: '#00f3',\n  X: 'brown',\n  M: '#f003',\n  '=': '#f003',\n}\n\nconst lineLimit = 3\n\nconst oobLimit = 1600\n\nexport function getId(r: number, g: number, b: number, unitMultiplier: number) {\n  return Math.floor((r * 255 * 255 + g * 255 + b - 1) / unitMultiplier)\n}\n\nexport function drawRef(\n  model: LinearSyntenyDisplayModel,\n  ctx1: CanvasRenderingContext2D,\n  ctx3?: CanvasRenderingContext2D,\n) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const drawCIGAR = view.drawCIGAR\n  const height = view.middleComparativeHeight\n  const width = view.width\n  const bpPerPxs = view.views.map(v => v.bpPerPx)\n\n  if (ctx3) {\n    ctx3.imageSmoothingEnabled = false\n  }\n\n  ctx1.beginPath()\n  const featPos = model.featPositions\n  const offsets = view.views.map(v => v.offsetPx)\n\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / featPos.length)\n\n  // this loop is optimized to draw many thin lines with a single ctx.stroke\n  // call, a separate loop below draws larger boxes\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22 } of featPos) {\n    const x11 = p11.offsetPx - offsets[0]\n    const x12 = p12.offsetPx - offsets[0]\n    const x21 = p21.offsetPx - offsets[1]\n    const x22 = p22.offsetPx - offsets[1]\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    // drawing a line if the results are thin results in much less pixellation\n    // than filling in a thin polygon\n    if (\n      l1 <= lineLimit &&\n      l2 <= lineLimit &&\n      x21 < width + oobLimit &&\n      x21 > -oobLimit\n    ) {\n      ctx1.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx1.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx1.lineTo(x21, y2)\n      }\n    }\n  }\n  ctx1.stroke()\n\n  // this loop only draws small lines as a polyline, the polyline calls\n  // ctx.stroke once is much more efficient than calling stroke() many times\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22, f, cigar } of featPos) {\n    const x11 = p11.offsetPx - offsets[0]\n    const x12 = p12.offsetPx - offsets[0]\n    const x21 = p21.offsetPx - offsets[1]\n    const x22 = p22.offsetPx - offsets[1]\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const minX = Math.min(x21, x22)\n    const maxX = Math.max(x21, x22)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    if (\n      !(l1 <= lineLimit && l2 <= lineLimit) &&\n      doesIntersect2(minX, maxX, -oobLimit, view.width + oobLimit)\n    ) {\n      const s1 = f.get('strand')\n      const k1 = s1 === -1 ? x12 : x11\n      const k2 = s1 === -1 ? x11 : x12\n\n      // rev1/rev2 flip the direction of the CIGAR drawing in horizontally flipped\n      // modes. somewhat heuristically determined, but tested for\n      const rev1 = k1 < k2 ? 1 : -1\n      const rev2 = (x21 < x22 ? 1 : -1) * s1\n\n      // cx1/cx2 are the current x positions on top and bottom rows\n      let cx1 = k1\n      let cx2 = s1 === -1 ? x22 : x21\n      if (cigar?.length && drawCIGAR) {\n        // continuingFlag skips drawing commands on very small CIGAR features\n        let continuingFlag = false\n\n        // px1/px2 are the previous x positions on the top and bottom rows\n        let px1 = 0\n        let px2 = 0\n        const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n        for (let j = 0; j < cigar.length; j += 2) {\n          const idx = j * unitMultiplier2 + 1\n\n          const len = +cigar[j]\n          const op = cigar[j + 1] as keyof typeof colorMap\n\n          if (!continuingFlag) {\n            px1 = cx1\n            px2 = cx2\n          }\n\n          const d1 = len / bpPerPxs[0]\n          const d2 = len / bpPerPxs[1]\n\n          if (op === 'M' || op === '=' || op === 'X') {\n            cx1 += d1 * rev1\n            cx2 += d2 * rev2\n          } else if (op === 'D' || op === 'N') {\n            cx1 += d1 * rev1\n          } else if (op === 'I') {\n            cx2 += d2 * rev2\n          }\n\n          // check that we are even drawing in view here, e.g. that all\n          // points are not all less than 0 or greater than width\n          if (\n            !(\n              Math.max(px1, px2, cx1, cx2) < 0 ||\n              Math.min(px1, px2, cx1, cx2) > width\n            )\n          ) {\n            // if it is a small feature and not the last element of the\n            // CIGAR (which could skip rendering it entire if we did turn\n            // it on), then turn on continuing flag\n            const isNotLast = j < cigar.length - 2\n            if (\n              Math.abs(cx1 - px1) <= 1 &&\n              Math.abs(cx2 - px2) <= 1 &&\n              isNotLast\n            ) {\n              continuingFlag = true\n            } else {\n              continuingFlag = false\n\n              // allow rendering the dominant color when using continuing\n              // flag if the last element of continuing was a large\n              // feature, else just use match\n              ctx1.fillStyle =\n                colorMap[(continuingFlag && d1 > 1) || d2 > 1 ? op : 'M']\n\n              draw(ctx1, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              if (ctx3) {\n                ctx3.fillStyle = makeColor(idx)\n                draw(ctx3, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              }\n            }\n          }\n        }\n      } else {\n        draw(ctx1, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n      }\n    }\n  }\n\n  // draw click map\n  const ctx2 = model.clickMapCanvas?.getContext('2d')\n  if (!ctx2) {\n    return\n  }\n  ctx2.imageSmoothingEnabled = false\n  ctx2.clearRect(0, 0, width, height)\n  for (let i = 0; i < featPos.length; i++) {\n    const feature = featPos[i]\n    const idx = i * unitMultiplier + 1\n    ctx2.fillStyle = makeColor(idx)\n\n    // too many click map false positives with colored stroked lines\n    drawMatchSimple({\n      cb: ctx => ctx.fill(),\n      feature,\n      ctx: ctx2,\n      drawCurves,\n      offsets,\n      oobLimit,\n      viewWidth: view.width,\n      hideTiny: true,\n      height,\n    })\n  }\n}\n\nexport function drawMouseoverSynteny(model: LinearSyntenyDisplayModel) {\n  const { clickId, mouseoverId } = model\n  const highResolutionScaling = 1\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const height = view.middleComparativeHeight\n  const width = view.width\n  const ctx = model.mouseoverCanvas?.getContext('2d')\n  const offsets = view.views.map(v => v.offsetPx)\n\n  if (!ctx) {\n    return\n  }\n  ctx.resetTransform()\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  ctx.clearRect(0, 0, width, height)\n  const feature1 = model.featMap[mouseoverId || '']\n  if (feature1) {\n    ctx.fillStyle = 'rgb(0,0,0,0.1)'\n    drawMatchSimple({\n      cb: ctx => ctx.fill(),\n      feature: feature1,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n  const feature2 = model.featMap[clickId || '']\n  if (feature2) {\n    ctx.strokeStyle = 'rgb(0, 0, 0, 0.9)'\n\n    drawMatchSimple({\n      cb: ctx => ctx.stroke(),\n      feature: feature2,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n}\n"],"names":["useStyles","makeStyles","theme","tooltip","position","pointerEvents","backgroundColor","alpha","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","lineHeight","Math","round","value","maxWidth","wordWrap","observer","title","useTheme","classes","refs","floatingStyles","context","useFloating","placement","clientPoint","useClientPoint","getFloatingProps","useInteractions","popperTheme","components","MuiPopper","React","Portal","container","defaultProps","_extends","className","ref","setFloating","style","zIndex","SanitizedHTML","html","model","xOffset","useRef","currScrollFrame","view","getContainingView","height","middleComparativeHeight","width","setTooltip","useState","currX","setCurrX","currY","setCurrY","k1","useCallback","setMouseoverCanvasRef","k2","setMainCanvasRef","k3","setClickMapCanvasRef","k4","setCigarClickMapCanvasRef","onWheel","event","abs","deltaY","deltaX","current","undefined","requestAnimationFrame","transaction","v","views","horizontalScroll","onMouseMove","ref1","clickMapCanvas","ref2","cigarClickMapCanvas","rect","getBoundingClientRect","ctx1","getContext","ctx2","clientX","clientY","x","left","y","top","r1","g1","b1","getImageData","data","r2","g2","b2","unitMultiplier","floor","MAX_COLOR_RANGE","numFeats","id","getId","setMouseoverId","featPositions","f","cigar","f1","toJSON","f2","mate","unitMultiplier2","length","cigarIdx","cigarOp","l1","end","start","l2","identity","n1","name","n2","assembleLocString","strand","toLocaleString","toPrecision","filter","join","onMouseLeave","onClick","setClickId","session","getSession","isSessionModelWithWidgets","showWidget","addWidget","featureData","feature1","feature2","get","imageRendering","visibility","mouseoverId","SyntenyTooltip","bg","action","disabledBackground","loading","paddingLeft","background","default","backgroundImage","textAlign","blockMessage","blockError","LoadingMessage","shown","setShown","useEffect","timeout","setTimeout","clearTimeout","LoadingEllipses","BlockMessage","messageText","BlockError","error","message","features","LinearSyntenyRendering","drawMatchSimple","feature","ctx","offsets","cb","drawCurves","oobLimit","viewWidth","hideTiny","p11","p12","p21","p22","x11","offsetPx","x12","x21","x22","y2","mid","minX","min","maxX","max","doesIntersect2","beginPath","moveTo","bezierCurveTo","lineTo","stroke","draw","x1","x2","y1","x3","x4","len1","len2","tmp","closePath","fill","drawBezierBox","drawBox","makeColor","idx","colorMap","I","N","D","X","M","lineLimit","r","g","b","drawRef","ctx3","drawCIGAR","bpPerPxs","map","bpPerPx","imageSmoothingEnabled","featPos","fillStyle","strokeStyle","s1","rev1","rev2","cx1","cx2","continuingFlag","px1","px2","j","len","op","d1","d2","isNotLast","clearRect","i","drawMouseoverSynteny","clickId","mouseoverCanvas","resetTransform","scale","featMap"],"sourceRoot":""}