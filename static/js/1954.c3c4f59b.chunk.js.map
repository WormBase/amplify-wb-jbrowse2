{"version":3,"file":"static/js/1954.c3c4f59b.chunk.js","mappings":"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","sources":["../../../plugins/config/src/FromConfigAdapter/FromConfigAdapter.ts"],"sourcesContent":["import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport SimpleFeature, {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\n/**\n * Adapter that just returns the features defined in its `features` configuration\n * key, like:\n *   `\"features\": [ { \"refName\": \"ctgA\", \"start\":1, \"end\":20 }, ... ]`\n */\n\nexport default class FromConfigAdapter extends BaseFeatureDataAdapter {\n  protected features: Map<string, Feature[]>\n\n  constructor(\n    conf: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(conf, getSubAdapter, pluginManager)\n    const feats = readConfObject(conf, 'features') as SimpleFeatureSerialized[]\n    this.features = FromConfigAdapter.makeFeatures(feats || [])\n  }\n\n  static makeFeatures(fdata: SimpleFeatureSerialized[]) {\n    const features = new Map<string, Feature[]>()\n    for (const entry of fdata) {\n      if (entry) {\n        const f = this.makeFeature(entry)\n        const refName = f.get('refName') as string\n        let bucket = features.get(refName)\n        if (!bucket) {\n          bucket = []\n          features.set(refName, bucket)\n        }\n\n        bucket.push(f)\n      }\n    }\n\n    // sort the features on each reference sequence by start coordinate\n    for (const refFeatures of features.values()) {\n      refFeatures.sort((a, b) => a.get('start') - b.get('start'))\n    }\n\n    return features\n  }\n\n  static makeFeature(data: SimpleFeatureSerialized) {\n    return new SimpleFeature(data)\n  }\n\n  async getRefNames() {\n    return [...this.features.keys()]\n  }\n\n  async getRefNameAliases() {\n    return [...this.features.values()].map(featureArray => ({\n      refName: featureArray[0].get('refName'),\n      aliases: featureArray[0].get('aliases'),\n    }))\n  }\n\n  getFeatures(region: NoAssemblyRegion) {\n    const { refName, start, end } = region\n\n    return ObservableCreate<Feature>(async observer => {\n      const features = this.features.get(refName) || []\n      for (const f of features) {\n        if (f.get('end') > start && f.get('start') < end) {\n          observer.next(f)\n        }\n      }\n      observer.complete()\n    })\n  }\n\n  freeResources(/* { region } */): void {}\n}\n"],"names":["FromConfigAdapter","_BaseFeatureDataAdapt","_getRefNames","_getRefNameAliases","_inherits","_super","_createSuper","conf","getSubAdapter","pluginManager","_this","_classCallCheck","call","features","feats","readConfObject","makeFeatures","_createClass","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","_toConsumableArray","this","keys","stop","apply","arguments","_callee2","_context2","values","map","featureArray","refName","get","aliases","region","_ref","_this2","start","end","ObservableCreate","_x","_callee3","observer","_iterator","_step","f","_context3","_createForOfIteratorHelper","s","n","done","err","e","complete","fdata","_step2","Map","_iterator2","entry","makeFeature","bucket","set","push","_step3","_iterator3","sort","a","b","data","SimpleFeature","BaseFeatureDataAdapter"],"sourceRoot":""}