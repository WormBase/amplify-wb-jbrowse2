{"version":3,"file":"static/js/7019.61923811.chunk.js","mappings":"+SAee,SAASA,EAAaC,GAIjC,IAJkC,OACpCC,GAGDD,EACC,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,aACnBC,EAAMC,IAAWF,EAAAA,EAAAA,YAClBG,GAAUC,EAAAA,EAAAA,YAAWP,IACrB,WAAEQ,GAAeF,GAEvBG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAU,IAAIC,iBACd,OAAEC,GAAWF,EACnB,IAAIG,GAAY,EAoBhB,MAlBC,WACC,IACE,MAAMC,GAAgBC,EAAAA,EAAAA,gBAAef,EAAQ,WACvCgB,QAAeR,EAAWS,KAAKjB,EAAOkB,QAAS,cAAe,CAClEJ,gBACAF,WAEGC,GACHR,EAAQW,EAEZ,CAAE,MAAOG,GACFN,IACHO,QAAQnB,MAAMkB,GACdjB,EAASiB,GAEb,CACD,EAhBA,GAkBM,KACLT,EAAQW,QACRR,GAAY,CAAI,CACjB,GACA,CAACb,EAAQQ,IAEZ,MAAMc,EACY,kBAATlB,EACH,CACEmB,OAAO,QAADC,OAAUpB,EACbqB,WAAW,IAAK,QAChBA,WAAW,IAAK,QAAO,WAE5BrB,GAAQ,CAAC,EAEf,OAAgB,OAATA,GACLsB,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,MAAM,YAAWC,SACxB5B,GACCyB,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,MAAM,QAAOF,SAAA,GAAAL,OAAKvB,UACnB+B,IAAT5B,GACFsB,EAAAA,EAAAA,KAACO,EAAAA,EAAe,CAACC,QAAQ,uBAEzBR,EAAAA,EAAAA,KAACS,EAAAA,WAAU,CAACC,WAAYd,MAG1B,IACN,CCzDA,MAAMe,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,QAAS,CACPC,SAAU,OAId,SAASC,EAAWC,EAA8BC,GAChD,IAAK,MAAMC,KAAQF,EACbE,IAASD,SACJD,EAAIE,GACmB,kBAAdF,EAAIE,IACpBH,EAAWC,EAAIE,GAAkCD,GAGrD,OAAOD,CACT,CAEe,SAASG,EAAa9C,GAIjC,IAJkC,OACpCC,GAGDD,EACC,MAAO+C,EAAQC,IAAa5C,EAAAA,EAAAA,WAAS,GAC/B6C,GAAOjC,EAAAA,EAAAA,gBAAef,GACtBM,GAAUC,EAAAA,EAAAA,YAAWP,IACrB,QAAEiD,GAAYZ,IAEda,GACJC,EAAAA,EAAAA,SAAQ7C,EAAS,CAAC,cAAe,eACjCS,EAAAA,EAAAA,gBAAef,EAAQ,CAAC,cAAe,cAEnC,cAAEoD,IAAkBC,EAAAA,EAAAA,QAAO/C,GAE3BgD,EAAcF,EAAcG,uBAChC,sBACA,CACEvD,OAAQ,IACHgD,MACAG,EAAAA,EAAAA,SAAQ7C,EAAS,CAAC,cAAe,UAAW,CAAEN,OAAQgD,QACtDjC,EAAAA,EAAAA,gBAAef,EAAQ,CAAC,cAAe,UAAW,CAAEA,OAAQgD,MAGnE,CAAE1C,UAASN,WAGPwD,EAAaJ,EAAcG,uBAC/B,uBACA,KACA,CAAEjD,UAASN,WAIb,OACEyD,EAAAA,EAAAA,MAAA,OAAKC,UAAWT,EAAQV,QAAQV,SAAA,EAC9B4B,EAAAA,EAAAA,MAAC9B,EAAAA,SAAQ,CAACC,MAAM,gBAAeC,SAAA,CAC3BqB,EAaE,MAZFxB,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAO,CAAEC,MAAO,SAChBC,QAASA,KACP,MAAMC,EAAOvB,EAAWwB,IAAMjB,GAAO,WACrCkB,IAAKC,KAAKC,UAAUJ,EAAM,KAAM,IAChCjB,GAAU,GACVsB,YAAW,IAAMtB,GAAU,IAAQ,IAAK,EACxClB,SAEDiB,EAAS,uBAAyB,iBAGvCpB,EAAAA,EAAAA,KAACS,EAAAA,WAAU,CACTC,WAAYkB,EACZgB,KAAM,CAAC,WAAY,UAAW,WAAY,eAC1CpB,SAAUA,OAGbM,GACC9B,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,MAAO4B,EAAWe,KAAK1C,UAC/BH,EAAAA,EAAAA,KAAC8B,EAAWgB,UAAS,CAACxE,OAAQA,MAE9B,MACJ0B,EAAAA,EAAAA,KAAC5B,EAAa,CAACE,OAAQA,MAG7B,CC7FO,SAASyE,EAAW1E,GAMvB,IANwB,OAC1BC,EAAM,YACN0E,GAID3E,EACC,MAAMO,GAAUC,EAAAA,EAAAA,YAAWP,GACrB2E,GAAYC,EAAAA,EAAAA,cAAa5E,EAAQM,IACjC,cAAE8C,IAAkBC,EAAAA,EAAAA,QAAO/C,GAE3BuE,EAAiBzB,EAAcG,uBACnC,oBACAV,EACA,CAAEvC,UAASN,WAIb,OACE0B,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CAACC,MAAI,EAACC,QAASN,EAAa9C,MAAO+C,EAAWM,SAAS,KAAIpD,UAChEH,EAAAA,EAAAA,KAACmD,EAAc,CAAC7E,OAAQA,KAG9B,C","sources":["../../../packages/product-core/src/ui/FileInfoPanel.tsx","../../../packages/product-core/src/ui/AboutDialogContents.tsx","../../../packages/product-core/src/ui/AboutDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Typography } from '@mui/material'\nimport {\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport LoadingEllipses from '@jbrowse/core/ui/LoadingEllipses'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  BaseCard,\n  Attributes,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\n\ntype FileInfo = Record<string, unknown> | string\n\nexport default function FileInfoPanel({\n  config,\n}: {\n  config: AnyConfigurationModel\n}) {\n  const [error, setError] = useState<unknown>()\n  const [info, setInfo] = useState<FileInfo>()\n  const session = getSession(config)\n  const { rpcManager } = session\n\n  useEffect(() => {\n    const aborter = new AbortController()\n    const { signal } = aborter\n    let cancelled = false\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const adapterConfig = readConfObject(config, 'adapter')\n        const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n          adapterConfig,\n          signal,\n        })\n        if (!cancelled) {\n          setInfo(result as FileInfo)\n        }\n      } catch (e) {\n        if (!cancelled) {\n          console.error(e)\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      aborter.abort()\n      cancelled = true\n    }\n  }, [config, rpcManager])\n\n  const details =\n    typeof info === 'string'\n      ? {\n          header: `<pre>${info\n            .replaceAll('<', '&lt;')\n            .replaceAll('>', '&gt;')}</pre>`,\n        }\n      : info || {}\n\n  return info !== null ? (\n    <BaseCard title=\"File info\">\n      {error ? (\n        <Typography color=\"error\">{`${error}`}</Typography>\n      ) : info === undefined ? (\n        <LoadingEllipses message=\"Loading file data\" />\n      ) : (\n        <Attributes attributes={details} />\n      )}\n    </BaseCard>\n  ) : null\n}\n","import React, { useState } from 'react'\nimport clone from 'clone'\nimport copy from 'copy-to-clipboard'\nimport { Button } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getConf,\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport { getSession, getEnv } from '@jbrowse/core/util'\nimport {\n  BaseCard,\n  Attributes,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport FileInfoPanel from './FileInfoPanel'\n\nconst useStyles = makeStyles()({\n  content: {\n    minWidth: 800,\n  },\n})\n\nfunction removeAttr(obj: Record<string, unknown>, attr: string) {\n  for (const prop in obj) {\n    if (prop === attr) {\n      delete obj[prop]\n    } else if (typeof obj[prop] === 'object') {\n      removeAttr(obj[prop] as Record<string, unknown>, attr)\n    }\n  }\n  return obj\n}\n\nexport default function AboutContents({\n  config,\n}: {\n  config: AnyConfigurationModel\n}) {\n  const [copied, setCopied] = useState(false)\n  const conf = readConfObject(config)\n  const session = getSession(config)\n  const { classes } = useStyles()\n\n  const hideUris =\n    getConf(session, ['formatAbout', 'hideUris']) ||\n    readConfObject(config, ['formatAbout', 'hideUris'])\n\n  const { pluginManager } = getEnv(session)\n\n  const confPostExt = pluginManager.evaluateExtensionPoint(\n    'Core-customizeAbout',\n    {\n      config: {\n        ...conf,\n        ...getConf(session, ['formatAbout', 'config'], { config: conf }),\n        ...readConfObject(config, ['formatAbout', 'config'], { config: conf }),\n      },\n    },\n    { session, config },\n  ) as Record<string, unknown>\n\n  const ExtraPanel = pluginManager.evaluateExtensionPoint(\n    'Core-extraAboutPanel',\n    null,\n    { session, config },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) as { name: string; Component: React.FC<any> }\n\n  return (\n    <div className={classes.content}>\n      <BaseCard title=\"Configuration\">\n        {!hideUris ? (\n          <Button\n            variant=\"contained\"\n            style={{ float: 'right' }}\n            onClick={() => {\n              const snap = removeAttr(clone(conf), 'baseUri')\n              copy(JSON.stringify(snap, null, 2))\n              setCopied(true)\n              setTimeout(() => setCopied(false), 1000)\n            }}\n          >\n            {copied ? 'Copied to clipboard!' : 'Copy config'}\n          </Button>\n        ) : null}\n        <Attributes\n          attributes={confPostExt}\n          omit={['displays', 'baseUri', 'refNames', 'formatAbout']}\n          hideUris={hideUris}\n        />\n      </BaseCard>\n      {ExtraPanel ? (\n        <BaseCard title={ExtraPanel.name}>\n          <ExtraPanel.Component config={config} />\n        </BaseCard>\n      ) : null}\n      <FileInfoPanel config={config} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport Dialog from '@jbrowse/core/ui/Dialog'\nimport { getSession, getEnv } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport AboutContents from './AboutDialogContents'\n\nexport function AboutDialog({\n  config,\n  handleClose,\n}: {\n  config: AnyConfigurationModel\n  handleClose: () => void\n}) {\n  const session = getSession(config)\n  const trackName = getTrackName(config, session)\n  const { pluginManager } = getEnv(session)\n\n  const AboutComponent = pluginManager.evaluateExtensionPoint(\n    'Core-replaceAbout',\n    AboutContents,\n    { session, config },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) as React.FC<any>\n\n  return (\n    <Dialog open onClose={handleClose} title={trackName} maxWidth=\"xl\">\n      <AboutComponent config={config} />\n    </Dialog>\n  )\n}\n"],"names":["FileInfoPanel","_ref","config","error","setError","useState","info","setInfo","session","getSession","rpcManager","useEffect","aborter","AbortController","signal","cancelled","adapterConfig","readConfObject","result","call","trackId","e","console","abort","details","header","concat","replaceAll","_jsx","BaseCard","title","children","Typography","color","undefined","LoadingEllipses","message","Attributes","attributes","useStyles","makeStyles","content","minWidth","removeAttr","obj","attr","prop","AboutContents","copied","setCopied","conf","classes","hideUris","getConf","pluginManager","getEnv","confPostExt","evaluateExtensionPoint","ExtraPanel","_jsxs","className","Button","variant","style","float","onClick","snap","clone","copy","JSON","stringify","setTimeout","omit","name","Component","AboutDialog","handleClose","trackName","getTrackName","AboutComponent","Dialog","open","onClose","maxWidth"],"sourceRoot":""}