"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[6800],{96800:(e,t,a)=>{a.r(t),a.d(t,{default:()=>c});var n=a(66885),i=a(99546),r=a(46377),s=a(99834),o=a(68120);class c extends r.BaseFeatureDataAdapter{async configurePre(){const e=this.pluginManager,t=this.getConf("bedGraphGzLocation"),a=this.getConf(["index","location"]),n=this.getConf(["index","indexType"]),i=(0,s.openLocation)(t,e),r="CSI"===n,c=new o.wD({filehandle:i,csiFilehandle:r?(0,s.openLocation)(a,e):void 0,tbiFilehandle:r?void 0:(0,s.openLocation)(a,e),chunkCacheSize:52428800}),h=this.getConf("columnNames"),d=await c.getHeader();return{columnNames:h,bedGraph:c,header:d}}async configure(){return this.configured||(this.configured=this.configurePre().catch((e=>{throw this.configured=void 0,e}))),this.configured}async getNames(){const{bedGraph:e,columnNames:t}=await this.configure();if(t.length)return t;const a=(await e.getHeader()).split(/\n|\r\n|\r/).filter((e=>!!e)).at(-1);return a?.includes("\t")?a.slice(1).split("\t").map((e=>e.trim())):void 0}async getRefNames(e={}){const{bedGraph:t}=await this.configure();return t.getReferenceSequenceNames(e)}async getHeader(){const{bedGraph:e}=await this.configure();return e.getHeader()}getFeatures(e,t={}){return(0,n.ObservableCreate)((async a=>{const{refName:n,start:r,end:s}=e,{bedGraph:o}=await this.configure(),c=(await this.getNames())?.slice(3)||[];await o.getLines(n,r,s,{lineCallback:(e,t)=>{const[n,r,s,...o]=e.split("\t");for(let e=0;e<o.length;e++){const h=`${this.id}-${t}-${e}`,d=+r,u=+s,l=+o[e],g=c[e]||`col${e}`;l&&a.next(new i.SimpleFeature({id:h,data:{refName:n,start:d,end:u,score:l,source:g}}))}},...t}),a.complete()}))}freeResources(){}}}}]);
//# sourceMappingURL=6800.a2796364.chunk.js.map