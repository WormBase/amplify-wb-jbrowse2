{"version":3,"file":"static/js/3844.aac88e2d.chunk.js","mappings":"0YA+BA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,IAAAC,EAAA,MAAK,CACvCC,SAAU,CACRC,OAAQ,GAEVC,WAAY,CACVC,OAA6B,QAAtBJ,EAAAD,EAAMM,QAAQC,gBAAQ,IAAAN,OAAA,EAAtBA,EAAwBO,eAAgB,QAElD,IA4CD,MA4GA,GA5G8BC,EAAAA,EAAAA,WAAS,SAAAC,GAMnC,IAN6C,QAC/CC,EAAO,MACPC,GAIDF,EACC,MAAM,QAAEG,GAAYf,KACbgB,EAAUC,IAAeC,EAAAA,EAAAA,aACzBC,EAAOC,IAAYF,EAAAA,EAAAA,aACnBG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,IACrCK,GAAUC,EAAAA,EAAAA,YAAWV,IACrB,cAAEW,GAAkBF,GACnBG,EAAaC,IAAkBT,EAAAA,EAAAA,UAASO,EAAc,KACtDG,EAAUC,IAAeX,EAAAA,EAAAA,UAAS,sBAEzC,OACEY,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAI,EAACnB,QAASA,EAASoB,SAAS,KAAKC,MAAM,mBAAkBC,SAAA,EACnEL,EAAAA,EAAAA,MAACM,EAAAA,EAAa,CAAAD,SAAA,EACZL,EAAAA,EAAAA,MAACO,EAAAA,EAAS,CACRT,SAAuB,uBAAbA,EACVU,SAAUA,IAAMT,EAAY,sBAAsBM,SAAA,EAElDI,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACflC,YAAYiC,EAAAA,EAAAA,KAACE,EAAAA,EAAc,CAACC,UAAW3B,EAAQT,aAAe6B,UAE9DL,EAAAA,EAAAA,MAACa,EAAAA,EAAU,CACTC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQZ,SAAA,CAC9D,yBACwB,KACvBI,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAACd,MAAM,0KAAyKC,UACtLI,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,YAIfV,EAAAA,EAAAA,KAACW,EAAAA,EAAgB,CAAAf,UACfI,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,YACNC,QAAQ,WACRT,MAAO,CAAEU,MAAO,QAChBC,MAAOlC,EACPiB,SAAUkB,GAAKlC,EAAakC,EAAEC,OAAOF,eAI3CzB,EAAAA,EAAAA,MAACO,EAAAA,EAAS,CACRT,SAAuB,kBAAbA,EACVU,SAAUA,IAAMT,EAAY,iBAAiBM,SAAA,EAE7CI,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACflC,YAAYiC,EAAAA,EAAAA,KAACE,EAAAA,EAAc,CAACC,UAAW3B,EAAQT,aAAe6B,UAE9DI,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAAAR,SAAC,wBAEdL,EAAAA,EAAAA,MAACoB,EAAAA,EAAgB,CAAAf,SAAA,EACfI,EAAAA,EAAAA,KAACmB,EAAAA,aAAY,CACX1C,SAAUA,EACVC,YAAaA,EACb0C,KAAK,OACLC,YAAY,gDAEdrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAgB,CACfvB,SAAUwB,GAAOnC,EAAemC,GAChCC,WAAU,qFACVxC,QAASA,EACTyC,SAAUtC,UAIfP,GACCoB,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACpC,MAAM,QAAQ8C,QAAQ,KAAIlB,SAAA,GAAA8B,OAAK9C,KACzC,SAENW,EAAAA,EAAAA,MAACoC,EAAAA,EAAa,CAAA/B,SAAA,EACZI,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAACd,QAAQ,YAAY9C,MAAM,YAAY6D,QAASvD,EAAQsB,SAAC,YAGhEI,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACLzB,UAAW3B,EAAQX,SACnB,cAAY,eACZiD,QAAQ,YACR9C,MAAM,UACN8D,UAAWrD,IAAaK,EACxBiD,WAAW/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,IACtBH,QAASI,UACP,IACMxD,EACFF,EAAM2D,sBAjHtBD,eACExD,EACAU,GAGA,aADmBgD,EAAAA,EAAAA,cAAa1D,GAAU2D,SAAS,SAEhDC,MAAM,cACNC,QAAOC,KAAOA,EAAEC,SAChBF,QACCC,IACGA,EAAEE,WAAW,OACbF,EAAEE,WAAW,WACbF,EAAEE,WAAW,aAEjBC,KAAIC,IACH,MAAOC,EAASC,EAAOC,EAAKjC,EAAOkC,GAAYJ,EAAKN,MAAM,MAC1D,MAAO,CACLW,aAAsB,OAARD,QAAQ,IAARA,EAAAA,EAAY5D,EAC1ByD,UACAC,OAAQA,EACRC,KAAMA,EACNjC,MAAiB,MAAVA,OAAgBoC,EAAYpC,EACpC,GAEP,CA0FwBqC,CAAqBzE,EAAUU,IAE9BL,IAAaqE,EAAAA,EAAAA,IAAsBnE,IAC5CT,EAAM2D,sBArItBD,eAAyCnD,EAAmBsE,GAC1D,MACMC,EAAY,IAAIC,IAAIxE,GACpByE,EAAoBF,EAAUG,aAAaC,IAAI,aAC/CC,EAAWL,EAAUG,aAAaC,IAAI,YACtCE,QAAyBC,EAAAA,EAAAA,GAAsB,GAADlC,OACvC,OAAR0B,QAAQ,IAARA,EAAAA,EALc,oCAKQ,QACzBG,GAAqB,GACrBG,GAAY,IAKd,OAFsBG,KAAKC,YAAYC,EAAAA,EAAAA,IAAeJ,IAEjCK,eACvB,CAwHwBC,CAA0BnF,EAAWE,EAAQoE,WAGvD9E,GACF,CAAE,MAAO2C,GACPiD,QAAQtF,MAAMqC,GACdpC,EAASoC,EACX,GACArB,SACH,gBAMT,G,0DC9KA,MAAMuE,EAAUlC,MAAOmC,EAAcV,WACjB,wEACPS,QAAQC,EAAMV,GAAUW,WAG/BC,EAAUrC,MAAOmC,EAAcV,KACnC,MAAMa,QAAY,uEACZC,QAAa,8DAEnB,OADcD,EAAID,QAAQF,EAAMV,GACnBW,SAASG,EAAK,EAG7B,SAASC,EAAYC,GACnB,IAEE,OADYb,KAAKC,MAAMY,GACZC,OACb,CAAE,MAAO1D,GACP,OAAOyD,CACT,CACF,CAEOzC,eAAe2C,EACpB5F,EACA6F,EACAC,GAEA,MAAMC,QAAaC,EAAAA,EAAAA,IAAanB,KAAKoB,UAAUjG,IACzC0E,GAtCawB,EAsCU,EArCtBC,OACJC,KACC,IAAID,OAAOE,OAAOC,gBAAgB,IAAIC,WAAoB,EAATL,KAC9CxC,KAAI8C,GAAKC,OAAOC,aAAaF,KAC7BG,KAAK,KAETC,WAAW,QAAS,IACpBC,MAAM,EAAGX,IARd,IAAqBA,EAuCnB,MAAMY,QAAyB3B,EAAQY,EAAMrB,GAEvCqC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,UAAWH,GACvBC,EAAKE,OAAO,aAAa,GAADvE,OAAKwE,KAAKC,QAClCJ,EAAKE,OAAO,UAAWnB,GAEvB,MAAMsB,QAAiBC,MAAM,GAAD3E,OAAImD,EAAG,SAAS,CAC1CyB,OAAQ,OACRC,KAAM,OACNC,KAAMT,IAGR,IAAKK,EAASK,GAAI,CAChB,MAAM/B,QAAY0B,EAAShC,OAC3B,MAAM,IAAIsC,MAAMjC,EAAYC,GAC9B,CAEA,MAAO,CACLiC,WAFiBP,EAASO,OAG1Bb,mBACApC,WAEJ,CAEOzB,eAAe2B,EACpBgD,EACArD,EACAG,EACAmD,GAEA,MAAMC,EAAYvD,EAAkBlB,MAAM,UAAU,GAC9CwC,EAAG,GAAAnD,OAAMkF,EAAO,eAAAlF,OAAcqF,mBAAmBD,IACjDV,QAAiBC,MAAMxB,EAAK,CAChCgC,WAGF,IAAKT,EAASK,GAAI,CAChB,MAAM/B,QAAY0B,EAAShC,OAC3B,MAAM,IAAIsC,MAAMjC,EAAYC,GAC9B,CAEA,MAAMiC,QAAaP,EAASO,OAC5B,OAAOrC,EAAQqC,EAAK3H,QAAS0E,EAC/B,C,wICnFA,MAAMsD,EAAY,CAAC,aAkBbC,GAAuBC,EAAAA,EAAAA,IAAO,MAAO,CACzC9F,KAAM,sBACN+F,KAAM,OACNC,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHlBL,EAI1B7I,IAAA,IAAC,MACFV,GACDU,EAAA,MAAM,CACLmJ,QAAS7J,EAAM8J,QAAQ,EAAG,EAAG,GAC9B,IAwCD,EAvCsCC,EAAAA,YAAiB,SAA0BC,EAASC,GACxF,MAAMP,GAAQQ,EAAAA,EAAAA,GAAc,CAC1BR,MAAOM,EACPvG,KAAM,yBAEF,UACFjB,GACEkH,EACJS,GAAQC,EAAAA,EAAAA,GAA8BV,EAAOL,GACzCgB,EAAaX,EACb7I,EA5BkBwJ,KACxB,MAAM,QACJxJ,GACEwJ,EAIJ,OAAOC,EAAAA,EAAAA,GAHO,CACZV,KAAM,CAAC,SAEoBW,EAAAA,EAAiC1J,EAAQ,EAqBtD2J,CAAkBH,GAClC,OAAoBhI,EAAAA,EAAAA,KAAKiH,GAAsBmB,EAAAA,EAAAA,GAAS,CACtDjI,WAAWkI,EAAAA,EAAAA,GAAK7J,EAAQ+I,KAAMpH,GAC9ByH,IAAKA,EACLI,WAAYA,GACXF,GACL,G,qEC7CO,SAASI,EAAgCf,GAC9C,OAAOmB,EAAAA,EAAAA,GAAqB,sBAAuBnB,EACrD,CACA,MACA,GADgCoB,EAAAA,EAAAA,GAAuB,sBAAuB,CAAC,Q","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/ImportBookmarksDialog.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/sessionSharing.ts","../../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport { FileLocation, isSessionWithShareURL } from '@jbrowse/core/util/types'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  Typography,\n  TextField,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Tooltip,\n} from '@mui/material'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { Dialog } from '@jbrowse/core/ui'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ImportIcon from '@mui/icons-material/Publish'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport HelpIcon from '@mui/icons-material/Help'\n\n// locals\nimport { GridBookmarkModel } from '../model'\nimport { fromUrlSafeB64 } from '../utils'\nimport { readSessionFromDynamo } from '../sessionSharing'\n\nconst useStyles = makeStyles()(theme => ({\n  flexItem: {\n    margin: 5,\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n}))\n\nasync function getBookmarksFromShareLink(shareLink: string, shareURL: string) {\n  const defaultURL = 'https://share.jbrowse.org/api/v1/'\n  const urlParams = new URL(shareLink)\n  const sessionQueryParam = urlParams.searchParams.get('bookmarks')\n  const password = urlParams.searchParams.get('password')\n  const decryptedSession = await readSessionFromDynamo(\n    `${shareURL ?? defaultURL}load`,\n    sessionQueryParam || '',\n    password || '',\n  )\n\n  const sharedSession = JSON.parse(await fromUrlSafeB64(decryptedSession))\n\n  return sharedSession.sharedBookmarks\n}\n\nasync function getBookmarksFromFile(\n  location: FileLocation,\n  selectedAsm: string,\n) {\n  const data = await openLocation(location).readFile('utf8')\n  return data\n    .split(/\\n|\\r\\n|\\r/)\n    .filter(f => !!f.trim())\n    .filter(\n      f =>\n        !f.startsWith('#') &&\n        !f.startsWith('track') &&\n        !f.startsWith('browser'),\n    )\n    .map(line => {\n      const [refName, start, end, label, assembly] = line.split('\\t')\n      return {\n        assemblyName: assembly ?? selectedAsm,\n        refName,\n        start: +start,\n        end: +end,\n        label: label === '.' ? undefined : label,\n      }\n    })\n}\n\nconst ImportBookmarksDialog = observer(function ({\n  onClose,\n  model,\n}: {\n  onClose: () => void\n  model: GridBookmarkModel\n}) {\n  const { classes } = useStyles()\n  const [location, setLocation] = useState<FileLocation>()\n  const [error, setError] = useState<unknown>()\n  const [shareLink, setShareLink] = useState('')\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0])\n  const [expanded, setExpanded] = useState('shareLinkAccordion')\n\n  return (\n    <Dialog open onClose={onClose} maxWidth=\"xl\" title=\"Import bookmarks\">\n      <DialogContent>\n        <Accordion\n          expanded={expanded === 'shareLinkAccordion'}\n          onChange={() => setExpanded('shareLinkAccordion')}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n          >\n            <Typography\n              style={{ display: 'flex', alignItems: 'center', gap: '5px' }}\n            >\n              Import from share link{' '}\n              <Tooltip title=\"The appropriate share link for sharing bookmarks is one generated via the 'Share' button in the 'Bookmarked regions' drawer. Paste it below to import shared bookmarks.\">\n                <HelpIcon />\n              </Tooltip>\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label=\"Enter URL\"\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n              value={shareLink}\n              onChange={e => setShareLink(e.target.value)}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion\n          expanded={expanded === 'fileAccordion'}\n          onChange={() => setExpanded('fileAccordion')}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n          >\n            <Typography>Import from file</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FileSelector\n              location={location}\n              setLocation={setLocation}\n              name=\"File\"\n              description=\"Choose a BED or TSV format file to import.\"\n            />\n            <AssemblySelector\n              onChange={val => setSelectedAsm(val)}\n              helperText={`Select the assembly your bookmarks belong to (BED or TSV without assembly column).`}\n              session={session}\n              selected={selectedAsm}\n            />\n          </AccordionDetails>\n        </Accordion>\n        {error ? (\n          <Typography color=\"error\" variant=\"h6\">{`${error}`}</Typography>\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          className={classes.flexItem}\n          data-testid=\"dialogImport\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!location && !shareLink}\n          startIcon={<ImportIcon />}\n          onClick={async () => {\n            try {\n              if (location) {\n                model.importBookmarks(\n                  await getBookmarksFromFile(location, selectedAsm),\n                )\n              } else if (shareLink && isSessionWithShareURL(session)) {\n                model.importBookmarks(\n                  await getBookmarksFromShareLink(shareLink, session.shareURL),\n                )\n              }\n              onClose()\n            } catch (e) {\n              console.error(e)\n              setError(e)\n            }\n          }}\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\nexport default ImportBookmarksDialog\n","// duplicated from products/jbrowse-web/src/sessionSharing.ts ; could possibly be moved into a higher directory and shared between the two\nimport { toUrlSafeB64 } from './utils'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      [...window.crypto.getRandomValues(new Uint8Array(length * 2))]\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replaceAll(/[+/]/g, '')\n    .slice(0, length)\n}\n\nconst encrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  const Utf8 = await import('crypto-js/enc-utf8')\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: unknown,\n  url: string,\n  referer: string,\n) {\n  const sess = await toUrlSafeB64(JSON.stringify(session))\n  const password = generateUID(5)\n  const encryptedSession = await encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]\n  const url = `${baseUrl}?sessionId=${encodeURIComponent(sessionId)}`\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getAccordionDetailsUtilityClass } from './accordionDetailsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n}));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;"],"names":["useStyles","makeStyles","theme","_theme$palette$tertia","flexItem","margin","expandIcon","color","palette","tertiary","contrastText","observer","_ref","onClose","model","classes","location","setLocation","useState","error","setError","shareLink","setShareLink","session","getSession","assemblyNames","selectedAsm","setSelectedAsm","expanded","setExpanded","_jsxs","Dialog","open","maxWidth","title","children","DialogContent","Accordion","onChange","_jsx","AccordionSummary","ExpandMoreIcon","className","Typography","style","display","alignItems","gap","Tooltip","HelpIcon","AccordionDetails","TextField","label","variant","width","value","e","target","FileSelector","name","description","AssemblySelector","val","helperText","selected","concat","DialogActions","Button","onClick","disabled","startIcon","ImportIcon","async","importBookmarks","openLocation","readFile","split","filter","f","trim","startsWith","map","line","refName","start","end","assembly","assemblyName","undefined","getBookmarksFromFile","isSessionWithShareURL","shareURL","urlParams","URL","sessionQueryParam","searchParams","get","password","decryptedSession","readSessionFromDynamo","JSON","parse","fromUrlSafeB64","sharedBookmarks","getBookmarksFromShareLink","console","encrypt","text","toString","decrypt","AES","Utf8","getErrorMsg","err","message","shareSessionToDynamo","url","referer","sess","toUrlSafeB64","stringify","length","window","btoa","crypto","getRandomValues","Uint8Array","b","String","fromCharCode","join","replaceAll","slice","encryptedSession","data","FormData","append","Date","now","response","fetch","method","mode","body","ok","Error","json","baseUrl","signal","sessionId","encodeURIComponent","_excluded","AccordionDetailsRoot","styled","slot","overridesResolver","props","styles","root","padding","spacing","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","composeClasses","getAccordionDetailsUtilityClass","useUtilityClasses","_extends","clsx","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}