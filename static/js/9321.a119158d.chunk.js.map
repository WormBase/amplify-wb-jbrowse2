{"version":3,"file":"static/js/9321.a119158d.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/components/util.ts","../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/components/LaunchSyntenyViewDialog.tsx"],"sourcesContent":["import {\n  getSession,\n  getContainingTrack,\n  getContainingView,\n  Feature,\n} from '@jbrowse/core/util'\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { when } from 'mobx'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\n\ntype LSV = LinearSyntenyViewModel\n\nconst { parseCigar } = MismatchParser\n\nfunction f(n: number) {\n  return Math.floor(n)\n}\nfunction findPosInCigar(cigar: string[], startX: number) {\n  let featX = 0\n  let mateX = 0\n  for (let i = 0; i < cigar.length; i++) {\n    const len = +cigar[i]\n    const op = cigar[i + 1]\n    const min = Math.min(len, startX - featX)\n\n    if (featX >= startX) {\n      break\n    } else if (op === 'I') {\n      mateX += len\n    } else if (op === 'D') {\n      featX += min\n    } else if (op === 'M') {\n      mateX += min\n      featX += min\n    }\n  }\n  return [featX, mateX]\n}\n\nexport async function navToSynteny({\n  feature,\n  windowSize: ws,\n  model,\n  horizontallyFlip,\n}: {\n  windowSize: number\n  horizontallyFlip: boolean\n  feature: Feature\n  model: IAnyStateTreeNode\n}) {\n  const session = getSession(model)\n  const track = getContainingTrack(model)\n  const view = getContainingView(model) as LinearGenomeViewModel\n  const reg = view.dynamicBlocks.contentBlocks[0]\n  const cigar = feature.get('CIGAR')\n  const strand = feature.get('strand')\n  const regStart = reg.start\n  const regEnd = reg.end\n  const featStart = feature.get('start')\n  const featEnd = feature.get('end')\n  const mate = feature.get('mate')\n  const mateStart = mate.start\n  const mateEnd = mate.end\n  const mateAsm = mate.assemblyName\n  const mateRef = mate.refName\n  const featAsm = reg.assemblyName\n  const featRef = reg.refName\n\n  let rMateStart: number\n  let rMateEnd: number\n  let rFeatStart: number\n  let rFeatEnd: number\n\n  if (cigar) {\n    const p = parseCigar(cigar)\n    const [fStartX, mStartX] = findPosInCigar(p, regStart - featStart)\n    const [fEndX, mEndX] = findPosInCigar(p, regEnd - featStart)\n\n    // avoid multiply by 0 with strand undefined\n    const flipper = strand === -1 ? -1 : 1\n    rFeatStart = featStart + fStartX\n    rFeatEnd = featStart + fEndX\n    rMateStart = (strand === -1 ? mateEnd : mateStart) + mStartX * flipper\n    rMateEnd = (strand === -1 ? mateEnd : mateStart) + mEndX * flipper\n  } else {\n    rFeatStart = featStart\n    rFeatEnd = featEnd\n    rMateStart = mateStart\n    rMateEnd = mateEnd\n  }\n  const trackId = track.configuration.trackId\n\n  const view2 = session.addView('LinearSyntenyView', {\n    type: 'LinearSyntenyView',\n    views: [\n      {\n        id: `${Math.random()}`,\n        type: 'LinearGenomeView',\n        hideHeader: true,\n      },\n      {\n        id: `${Math.random()}`,\n        type: 'LinearGenomeView',\n        hideHeader: true,\n      },\n    ],\n    tracks: [\n      {\n        configuration: trackId,\n        type: 'SyntenyTrack',\n        displays: [\n          {\n            type: 'LinearSyntenyDisplay',\n            configuration: `${trackId}-LinearSyntenyDisplay`,\n          },\n        ],\n      },\n    ],\n  }) as LSV\n  const l1 = `${featRef}:${f(rFeatStart - ws)}-${f(rFeatEnd + ws)}`\n  const m1 = Math.min(rMateStart, rMateEnd)\n  const m2 = Math.max(rMateStart, rMateEnd)\n  const l2 = `${mateRef}:${f(m1 - ws)}-${f(m2 + ws)}${\n    horizontallyFlip ? '[rev]' : ''\n  }`\n  await when(() => view2.width !== undefined)\n  await Promise.all([\n    view2.views[0].navToLocString(l1, featAsm),\n    view2.views[1].navToLocString(l2, mateAsm),\n  ])\n}\n","import React, { useState } from 'react'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { Feature, getSession } from '@jbrowse/core/util'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n  TextField,\n} from '@mui/material'\nimport { navToSynteny } from './util'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  padding: {\n    margin: 10,\n    border: '1px solid #ccc',\n  },\n})\n\nexport default function LaunchSyntenyViewDialog({\n  model,\n  feature,\n  handleClose,\n}: {\n  model: unknown\n  feature: Feature\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const inverted = feature.get('strand') === -1\n  const [horizontallyFlip, setHorizontallyFlip] = useState(inverted)\n  const [windowSize, setWindowSize] = useState('1000')\n  return (\n    <Dialog open title=\"Launch synteny view\" onClose={handleClose}>\n      <DialogContent>\n        {inverted ? (\n          <FormControlLabel\n            className={classes.padding}\n            control={\n              <Checkbox\n                checked={horizontallyFlip}\n                onChange={event => setHorizontallyFlip(event.target.checked)}\n              />\n            }\n            label=\"Note: The feature is inverted in orientation on the target\n            sequence. This will result in the lower panel having genomic\n            coordinates decreasing left to right. Horizontally flip?\"\n          />\n        ) : null}\n        <TextField\n          label=\"Add window size in bp\"\n          value={windowSize}\n          onChange={event => setWindowSize(event.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            ;(async () => {\n              try {\n                await navToSynteny({\n                  feature,\n                  windowSize: +windowSize,\n                  horizontallyFlip,\n                  model,\n                })\n              } catch (e) {\n                getSession(model).notify(`${e}`, 'error')\n              }\n            })()\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => handleClose()}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["parseCigar","MismatchParser","f","n","Math","floor","findPosInCigar","cigar","startX","featX","mateX","i","length","len","op","min","useStyles","makeStyles","padding","margin","border","LaunchSyntenyViewDialog","_ref","model","feature","handleClose","classes","inverted","get","horizontallyFlip","setHorizontallyFlip","useState","windowSize","setWindowSize","_jsxs","Dialog","open","title","onClose","children","DialogContent","_jsx","FormControlLabel","className","control","Checkbox","checked","onChange","event","target","label","TextField","value","DialogActions","Button","variant","onClick","async","ws","session","getSession","track","getContainingTrack","reg","getContainingView","dynamicBlocks","contentBlocks","strand","regStart","start","regEnd","end","featStart","featEnd","mate","mateStart","mateEnd","mateAsm","assemblyName","mateRef","refName","featAsm","featRef","rMateStart","rMateEnd","rFeatStart","rFeatEnd","p","fStartX","mStartX","fEndX","mEndX","flipper","trackId","configuration","view2","addView","type","views","id","concat","random","hideHeader","tracks","displays","l1","m1","m2","max","l2","when","undefined","width","Promise","all","navToLocString","navToSynteny","e","notify","color"],"sourceRoot":""}