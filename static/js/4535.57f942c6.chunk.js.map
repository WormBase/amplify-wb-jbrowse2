{"version":3,"file":"static/js/4535.57f942c6.chunk.js","mappings":"uQASA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,MAAO,CACLC,cAAe,OACfC,OAAQ,OACRC,MAAO,EACPC,SAAU,WACVC,OAAQ,IAEVC,GAAI,CACFC,SAAU,MAuCd,GAnCsBC,EAAAA,EAAAA,WAAS,SAAAC,GAM3B,IANqC,MACvCC,EAAK,OACLC,GAIDF,EACC,MAAM,QAAEG,GAAYd,IACpB,OACEe,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNC,MAAI,EACJC,UAAU,MACVC,MAAOP,EAAMQ,MACVC,KAAIC,GAAQA,EAAKC,OAAOV,KACxBQ,KAAI,CAACG,EAAKC,KACTV,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CACTC,UAAWb,EAAQN,GAAGoB,UAGrBC,EAAAA,EAAAA,WAAUL,GAAK,IAFX,CAACM,KAAKD,UAAUL,GAAMC,GAAKM,KAAK,QAK3CC,OAAK,EAAAJ,UAELb,EAAAA,EAAAA,KAAA,OACEY,UAAWb,EAAQZ,MACnB+B,MAAO,CACLC,KAAMrB,EACNsB,WAAY,UAKtB,ICxCMnC,GAAYC,EAAAA,EAAAA,KAAAA,EAAamC,IAC7B,MAAM,SAAEC,EAAQ,QAAEC,GAAYF,EAAMG,QAIpC,MAAO,CACLC,WAAY,CACVpC,OAAQ,OACR+B,WANeE,GACfI,EAAAA,EAAAA,IAAMJ,EAASK,KAAM,KACrBD,EAAAA,EAAAA,IAAMH,EAAQI,KAAM,IAKpBpC,SAAU,WACVC,OAAQ,GACRoC,UAAW,SACXC,SAAU,UAEZC,kBAAmB,CACjBC,OAAQ,YACRzC,MAAO,OACP0C,UAAW,GAEbC,eAAgB,CACdC,MAAOZ,EAAWA,EAASa,aAAeZ,EAAQY,cAEpDC,QAAS,CACPC,YAAa,OACbN,OAAQ,aAEVO,MAAO,CACLC,YAAalB,EAAMmB,QAAQ,GAC3BC,aAAcpB,EAAMmB,QAAQ,IAE/B,IAmPH,GAhPoC7C,EAAAA,EAAAA,WAAS,SAAmBC,GAM5D,IAN6D,MAC/DC,EAAK,iBACL6C,GAAmB1C,EAAAA,EAAAA,KAAA,WAIpBJ,EACC,MAAO+C,EAAQC,IAAaC,EAAAA,EAAAA,aACrBC,EAAUC,IAAeF,EAAAA,EAAAA,aAIzBG,EAAgBC,IAAqBJ,EAAAA,EAAAA,aAKrCK,EAAQC,IAAaN,EAAAA,EAAAA,YACtBO,GAAcC,EAAAA,EAAAA,QAAuB,MACrCC,GAAgBD,EAAAA,EAAAA,QAAO,OACvB,QAAEtD,GAAYd,IACdsE,OAA2BC,IAAXb,QAA2Ca,IAAnBR,EAuE9C,SAASS,EAAUC,GACjBA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EACJH,EAAMI,QACLJ,EAAMK,OAA0BC,wBAAwB7C,KAC3DyB,EAAUiB,GACVd,EAAYc,EACd,CAEA,SAASI,EAAUP,GACjB,MAAMK,EAASL,EAAMK,OACrBZ,EAAUO,EAAMI,QAAUC,EAAOC,wBAAwB7C,KAC3D,CAEA,SAAS+C,IACPf,OAAUK,GACV3D,EAAMQ,MAAM8D,SAAQ5D,GAAQA,EAAK6D,gBAAWZ,OAAWA,IACzD,CAEA,SAASa,IACPpB,OAAkBO,GAClBZ,OAAUY,GACVT,OAAYS,EACd,EA7FAc,EAAAA,EAAAA,YAAU,KAiBR,SAASC,EAAgBb,GACvB,GAAIN,EAAYoB,SAAWjB,EAAe,CACxC,MAAMM,EACJH,EAAMI,QAAUV,EAAYoB,QAAQR,wBAAwB7C,KAC9D4B,EAAYc,EACd,CACF,CAEA,SAASY,EAAcf,GACrB,QAAeF,IAAXb,GAAwBS,EAAYoB,QAAS,CAC/C,MAAM,QAAEV,EAAO,QAAEY,GAAYhB,EAEvBiB,EAAUb,EADJV,EAAYoB,QACMR,wBAAwB7C,KAGtD8B,EAAkB,CAChB0B,UACAb,UACAY,YAEF7E,EAAMQ,MAAM8D,SAAQ5D,IAClB,MAAMqE,EArCZ,SAAwBD,EAAiBpE,GACvC,QAAeiD,IAAXb,EACF,OAEF,IAAIkC,EAASlC,EACTmC,EAAUH,EAQd,OANIG,EAAUD,KACVA,EAAQC,GAAW,CAACA,EAASD,IAK1B,CAAEE,WAHUxE,EAAKC,OAAOqE,GAGVG,YAFDzE,EAAKC,OAAOsE,GAGlC,CAuBmBG,CAAeN,EAASpE,GACrC,GAAIqE,EAAM,CACR,MAAM,WAAEG,EAAU,YAAEC,GAAgBJ,EACpCrE,EAAK6D,WAAWW,EAAYC,EAC9B,KAEF7B,OAAUK,EACZ,CACF,CACA,OAAID,GACF2B,OAAOC,iBAAiB,YAAaZ,GACrCW,OAAOC,iBAAiB,UAAWV,GAC5B,KACLS,OAAOE,oBAAoB,YAAab,GACxCW,OAAOE,oBAAoB,UAAWX,EAAc,GAGjD,MAAQ,GACd,CAAC9B,EAAQY,EAAeP,EAAgBnD,KAE3CyE,EAAAA,EAAAA,YAAU,MAELf,QACYC,IAAbV,QACWU,IAAXb,GACA0C,KAAKC,IAAIxC,EAAWH,IAAW,GAE/B0B,GACF,GACC,CAACd,EAAeT,EAAUH,IA4B7B,MAAMzC,EAAOqF,QAAQvC,GAOrB,QAAeQ,IAAXb,EACF,OACE6C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5E,SAAA,MACc2C,IAAXN,GACClD,EAAAA,EAAAA,KAAC0F,EAAa,CAAC7F,MAAOA,EAAOC,OAAQoD,IACnC,MACJlD,EAAAA,EAAAA,KAAA,OACE2F,IAAKvC,EACLxC,UAAWb,EAAQ+B,kBACnB8D,YAAanC,EACboC,WAAY3B,EACZ4B,YAAa7B,EAAUpD,SAEtB6B,OAMT,MAAMqD,EAAQ/C,EAAiBA,EAAe2B,QAAU7B,GAAY,EAC9D3B,EAAO4E,EAAQpD,EAASoD,EAAQpD,EAChCrD,EAAQ+F,KAAKC,IAAIS,EAAQpD,IACzB,MAAEtC,GAAUR,EACZmG,EAAe3F,EAAMC,KAAIC,GAAQA,EAAKC,OAAOW,KAC7C8E,EAAgB5F,EAAMC,KAAIC,GAAQA,EAAKC,OAAOW,EAAO7B,KACrD4G,EAAkB7F,EAAMC,KAAIC,GAAQ8E,KAAKc,KAAK7G,EAAQiB,EAAK6F,WACjE,OACEZ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5E,SAAA,CACGyC,EAAckB,SACbgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5E,SAAA,EACEb,EAAAA,EAAAA,KAACqG,EAAAA,GAAO,CACNzF,UAAWb,EAAQqC,QACnBrC,QAAS,CAAEuC,MAAOvC,EAAQuC,OAC1BpC,MAAI,EACJoG,SAAUhD,EAAckB,QACxB+B,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,SAEdE,aAAW,EACXC,qBAAmB,EAAA/F,SAElBmF,EAAa1F,KAAI,CAACuG,EAAGnG,KACpBV,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAE,UACRC,EAAAA,EAAAA,WAAU+F,GAAG,IADC,CAAC9F,KAAKD,UAAU+F,GAAInG,EAAK,QAAQM,KAAK,WAK3DhB,EAAAA,EAAAA,KAACqG,EAAAA,GAAO,CACNzF,UAAWb,EAAQqC,QACnBrC,QAAS,CAAEuC,MAAOvC,EAAQuC,OAC1BpC,MAAI,EACJoG,SAAUhD,EAAckB,QACxB+B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,QAEdE,aAAW,EACXC,qBAAmB,EAAA/F,SAElBoF,EAAc3F,KAAI,CAACuG,EAAGnG,KACrBV,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAE,UACRC,EAAAA,EAAAA,WAAU+F,GAAG,IADC,CAAC9F,KAAKD,UAAU+F,GAAInG,EAAK,SAASM,KAAK,aAM5D,MACJhB,EAAAA,EAAAA,KAAA,OACE2F,IAAKrC,EACL1C,UAAWb,EAAQ0B,WACnBP,MAAO,CAAEC,OAAM7B,SAAQuB,UAEvBb,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAACmG,QAAQ,KAAKlG,UAAWb,EAAQkC,eAAepB,SACxDqF,EAAgB5F,KAAI,CAACyG,EAAGC,KACvBhH,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAE,SAAA,GAAAoG,OACLF,EAAEG,eAAe,SAAQ,UAAAD,OADXF,EAAC,KAAAE,OAAID,WAM/BhH,EAAAA,EAAAA,KAAA,OACEY,UAAWb,EAAQ+B,kBACnB6D,IAAKvC,EACLwC,YAAanC,EACboC,WAAY3B,EACZ4B,YAAa7B,EAAUpD,SAEtB6B,IAEFM,GACChD,EAAAA,EAAAA,KAACmH,EAAAA,KAAI,CACHC,gBAAgB,iBAChBpE,eAAgB,CACd7B,KAAM6B,EAAec,QACrBuD,IAAKrE,EAAe0B,SAEtB4C,gBA9GR,SAA6BC,EAAYC,GACvCA,IACAnD,GACF,EA4GQnE,KAAMA,EACNuH,QAASpD,EACTqD,UAAW7H,EAAM8H,wBAEjB,OAGV,I,0DC7QA,MAAM1I,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,MAC7B0I,UAAW,CACTC,SAAU,kBACVC,QAAS,QAEXC,OAAQ,CACNC,SAAU,GAEZC,WAAY,CACVC,OAAQ,GAEVC,GAAI,CACFL,QAAS,OACTM,WAAY,SACZC,WAAY,IAEdC,gBAAiB,CACfD,WAAY,GAEdE,UAAW,CACTT,QAAS,YAIPU,GAAgB7I,EAAAA,EAAAA,WAASC,IAAgC,IAA/B,MAAEC,GAAuBD,EACvD,OACEI,EAAAA,EAAAA,KAACyI,EAAAA,EAAmB,CAClBf,UAAW,CACT,CACEgB,MAAO,yBACPC,QAASA,IAAM9I,EAAM+I,4BAEpB/I,EAAMQ,MAAMC,KAAI,CAACC,EAAMG,KAAG,CAC3BgI,MAAM,QAADzB,OAAUvG,EAAM,EAAC,mBACtBiI,QAASA,IAAMpI,EAAKqI,6BAEtB/H,UAEFb,EAAAA,EAAAA,KAAC6I,EAAAA,GAAiB,KACE,IAuD1B,GAnDelJ,EAAAA,EAAAA,WAAS,SAAAmJ,GAAsC,IAA5B,MAAEjJ,GAAuBiJ,EACzD,MAAM,QAAE/I,GAAYd,KACb8J,EAAcC,IAAmBnG,EAAAA,EAAAA,YAClCoG,EAAiBpJ,EAAMQ,MAAM6I,MAAK3I,IAASA,EAAK4I,aACtD,OACE3D,EAAAA,EAAAA,MAAA,OAAK5E,UAAWb,EAAQ6H,UAAU/G,SAAA,EAChCb,EAAAA,EAAAA,KAACwI,EAAa,CAAC3I,MAAOA,KAEtBG,EAAAA,EAAAA,KAACoJ,EAAAA,EAAU,CACTT,QAASjF,GAASsF,EAAgBtF,EAAM2F,eACxCzI,UAAWb,EAAQkI,WAAWpH,UAE9Bb,EAAAA,EAAAA,KAACsJ,EAAAA,EAAY,MAEbL,EAiBE,KAhBApJ,EAAMQ,MAAMC,KAAIC,IACdiF,EAAAA,EAAAA,MAAA,OAAmB5E,UAAWb,EAAQwI,UAAU1H,SAAA,EAC9Cb,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQuI,gBAAgBzH,UACtCb,EAAAA,EAAAA,KAACuJ,EAAAA,GAAS,CAAC1J,MAAOU,EAAMiJ,UAAU,OAEpCxJ,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQoI,GAAGtH,UACzB2E,EAAAA,EAAAA,MAAC7E,EAAAA,EAAU,CACTmG,QAAQ,QACR5E,MAAM,gBACNtB,UAAWb,EAAQoI,GAAGtH,SAAA,CAErBwE,KAAKoE,MAAMlJ,EAAKmJ,eAAexC,eAAe,SAAS,aAVpD3G,EAAKoJ,OAiBrB3J,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQgI,SAEvBgB,GACC/I,EAAAA,EAAAA,KAACmH,EAAAA,KAAI,CACHb,SAAUyC,EACV7I,MAAI,EACJoH,gBAAiBA,CAACsC,EAAQpC,KACxBA,IACAwB,OAAgBxF,EAAU,EAE5BkE,UAAW7H,EAAMgK,kBACjBpC,QAASA,IAAMuB,OAAgBxF,KAE/B,OAGV,ICjGMvE,GAAYC,EAAAA,EAAAA,KAAAA,EAAamC,IAAK,CAClCyI,UAAW,CACThC,QAAS,QAEXiC,QAAS,CACPvK,OAAQ,IACRqI,SAAU,OAEZmC,QAAS,CACPnC,SAAU,MACVtI,SAAU,YAEZ0K,KAAM,CACJnC,QAAS,QAEXoC,SAAU,CACR3K,SAAU,YAKZ4K,oBAAqB,CACnB5K,SAAU,WACVsC,SAAU,UAGZuI,cAAe,CACb9K,MAAO,OACP8B,WAAYC,EAAMG,QAAQ6I,OAAOC,mBACjCjL,OAAQ,GACR,UAAW,CACT+B,WAAYC,EAAMG,QAAQ6I,OAAOE,eAOjCC,GAAW7K,EAAAA,EAAAA,WAASC,IAAgC,IAA/B,MAAEC,GAAuBD,EAClD,MAAM,QAAEG,GAAYd,IACpB,OACEe,EAAAA,EAAAA,KAAAyF,EAAAA,SAAA,CAAA5E,SACGhB,EAAM4K,OAAOnK,KAAIoK,IAChB,MAAO5C,GAAW4C,EAAMC,UAClB,mBAAEC,GAAuB9C,EACzB+C,GAAUC,EAAAA,EAAAA,SAAQJ,EAAO,WAC/B,OAAOE,GACL5K,EAAAA,EAAAA,KAAA,OACEY,UAAWb,EAAQgK,QAEnB7I,MAAO,CACL7B,OAAQQ,EAAMkL,wBACdlJ,SAAU,UACVhB,UAEFb,EAAAA,EAAAA,KAAC4K,EAAkB,CAAC/K,MAAOiI,KANtB+C,GAQL,IAAI,KAET,IAKDG,GAAwBrL,EAAAA,EAAAA,WAASmJ,IAAgC,IAA/B,MAAEjJ,GAAuBiJ,EAC/D,MAAM,QAAE/I,GAAYd,KACd,MAAEoB,GAAUR,GACZ,cAAEoL,IAAkBC,EAAAA,EAAAA,QAAOrL,IAC3B,eAAEsL,GAAmBF,EAAcG,YAAY/K,EAAM,GAAGgL,MAE9D,OACE7F,EAAAA,EAAAA,MAAA,OAAK5E,UAAWb,EAAQoK,oBAAoBtJ,SAAA,EAC1Cb,EAAAA,EAAAA,KAACsL,EAAM,CAACzL,MAAOA,KACfG,EAAAA,EAAAA,KAACuL,EAAU,CACT1L,MAAOA,EACP6C,kBAAkB1C,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQqK,mBAE5C5E,EAAAA,EAAAA,MAAA,OAAK5E,UAAWb,EAAQ+J,UAAUjJ,SAAA,EAChCb,EAAAA,EAAAA,KAACmL,EAAc,CAACtL,MAAOQ,EAAM,MAC7BL,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQkK,KAAKpJ,UAC3Bb,EAAAA,EAAAA,KAACwK,EAAQ,CAAC3K,MAAOA,OAEnBG,EAAAA,EAAAA,KAACwL,EAAAA,aAAY,CACXC,OAAQ1E,GACNlH,EAAM6L,2BAA2B7L,EAAMkL,wBAA0BhE,GAEnE7F,MAAO,CACL7B,OAAQ,EACR+B,WAAY,WAGhBpB,EAAAA,EAAAA,KAACmL,EAAc,CAACtL,MAAOQ,EAAM,UAE3B,IAGJsL,GAAyBhM,EAAAA,EAAAA,WAASiM,IAAgC,IAA/B,MAAE/L,GAAuB+L,EAChE,MAAM,QAAE7L,GAAYd,KACd,MAAEoB,GAAUR,GACZ,cAAEoL,IAAkBC,EAAAA,EAAAA,QAAOrL,GACjC,OACE2F,EAAAA,EAAAA,MAAA,OAAK5E,UAAWb,EAAQoK,oBAAoBtJ,SAAA,EAC1Cb,EAAAA,EAAAA,KAACsL,EAAM,CAACzL,MAAOA,KACfG,EAAAA,EAAAA,KAACuL,EAAU,CACT1L,MAAOA,EACP6C,kBAAkB1C,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQqK,mBAG5CpK,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQ+J,UAAUjJ,UAChC2E,EAAAA,EAAAA,MAAA,OAAK5E,UAAWb,EAAQiK,QAAQnJ,SAAA,EAC9Bb,EAAAA,EAAAA,KAAA,OAAKY,UAAWb,EAAQmK,SAASrJ,SAC9BR,EAAMC,KAAIC,IACT,MAAM,eAAE4K,GAAmBF,EAAcG,YAAY7K,EAAK8K,MAC1D,OAAOrL,EAAAA,EAAAA,KAACmL,EAAc,CAAetL,MAAOU,GAAhBA,EAAKoJ,GAAmB,OAGxD3J,EAAAA,EAAAA,KAACwK,EAAQ,CAAC3K,MAAOA,WAGjB,IAsBV,GAlB8BF,EAAAA,EAAAA,WAAS,SAAUkM,GAI/C,MAAM,MAAEhM,GAAUgM,EAOlB,OALehM,EAAM4K,OAAOvB,MAAK4C,IAAA,IAAC,SAAEnB,GAAUmB,EAAA,OAC5CnB,EAASzB,MAAM6C,IACbjB,EAAAA,EAAAA,SAAQiB,EAAG,WACZ,KAGD/L,EAAAA,EAAAA,KAACgL,EAAqB,IAAKa,KAE3B7L,EAAAA,EAAAA,KAAC2L,EAAsB,IAAKE,GAEhC,G","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/VerticalGuide.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Rubberband.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx"],"sourcesContent":["import React from 'react'\nimport { Tooltip, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { stringify } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()({\n  guide: {\n    pointerEvents: 'none',\n    height: '100%',\n    width: 1,\n    position: 'absolute',\n    zIndex: 10,\n  },\n  sm: {\n    fontSize: 10,\n  },\n})\n\nconst VerticalGuide = observer(function ({\n  model,\n  coordX,\n}: {\n  model: LCV\n  coordX: number\n}) {\n  const { classes } = useStyles()\n  return (\n    <Tooltip\n      open\n      placement=\"top\"\n      title={model.views\n        .map(view => view.pxToBp(coordX))\n        .map((elt, idx) => (\n          <Typography\n            className={classes.sm}\n            key={[JSON.stringify(elt), idx].join('-')}\n          >\n            {stringify(elt, true)}\n          </Typography>\n        ))}\n      arrow\n    >\n      <div\n        className={classes.guide}\n        style={{\n          left: coordX,\n          background: 'red',\n        }}\n      />\n    </Tooltip>\n  )\n})\n\nexport default VerticalGuide\n","import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport VerticalGuide from './VerticalGuide'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary, primary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.main, 0.7)\n    : alpha(primary.main, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n  }\n})\n\nconst LinearComparativeRubberband = observer(function Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberbandRef = useRef(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and dragging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          ref={controlsRef}\n          className={classes.rubberbandControl}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberbandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map((l, idx) => (\n              <Typography key={[JSON.stringify(l), idx, 'left'].join('-')}>\n                {stringify(l, true)}\n              </Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map((l, idx) => (\n              <Typography key={[JSON.stringify(l), idx, 'right'].join('-')}>\n                {stringify(l, true)}\n              </Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberbandRef}\n        className={classes.rubberband}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberbandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>\n              {`${n.toLocaleString('en-US')}bp`}\n            </Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        className={classes.rubberbandControl}\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n})\n\nexport default LinearComparativeRubberband\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(({ model }: { model: LCV }) => {\n  return (\n    <CascadingMenuButton\n      menuItems={[\n        {\n          label: 'Synteny track selector',\n          onClick: () => model.activateTrackSelector(),\n        },\n        ...model.views.map((view, idx) => ({\n          label: `View ${idx + 1} track selector`,\n          onClick: () => view.activateTrackSelector(),\n        })),\n      ]}\n    >\n      <TrackSelectorIcon />\n    </CascadingMenuButton>\n  )\n})\n\nconst Header = observer(function ({ model }: { model: LCV }) {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  const anyShowHeaders = model.views.some(view => !view.hideHeader)\n  return (\n    <div className={classes.headerBar}>\n      <TrackSelector model={model} />\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      {!anyShowHeaders\n        ? model.views.map(view => (\n            <div key={view.id} className={classes.searchBox}>\n              <div className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n              <div className={classes.bp}>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.bp}\n                >\n                  {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                </Typography>\n              </div>\n            </div>\n          ))\n        : null}\n\n      <div className={classes.spacer} />\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={model.headerMenuItems()}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default Header\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport Rubberband from './Rubberband'\nimport Header from './Header'\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n\n  rubberbandDiv: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    height: 15,\n    '&:hover': {\n      background: theme.palette.action.selected,\n    },\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const { ReactComponent } = pluginManager.getViewType(views[0].type)\n\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div className={classes.grid}>\n          <Overlays model={model} />\n        </div>\n        <ResizeHandle\n          onDrag={n =>\n            model.setMiddleComparativeHeight(model.middleComparativeHeight + n)\n          }\n          style={{\n            height: 4,\n            background: '#ccc',\n          }}\n        />\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div className={classes.relative}>\n            {views.map(view => {\n              const { ReactComponent } = pluginManager.getViewType(view.type)\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nconst LinearComparativeView = observer(function (props: {\n  ExtraButtons?: React.ReactNode\n  model: LCV\n}) {\n  const { model } = props\n\n  const middle = model.tracks.some(({ displays }) =>\n    displays.some((d: { configuration: AnyConfigurationModel }) =>\n      getConf(d, 'middle'),\n    ),\n  )\n  return middle ? (\n    <MiddleComparativeView {...props} />\n  ) : (\n    <OverlayComparativeView {...props} />\n  )\n})\n\nexport default LinearComparativeView\n"],"names":["useStyles","makeStyles","guide","pointerEvents","height","width","position","zIndex","sm","fontSize","observer","_ref","model","coordX","classes","_jsx","Tooltip","open","placement","title","views","map","view","pxToBp","elt","idx","Typography","className","children","stringify","JSON","join","arrow","style","left","background","theme","tertiary","primary","palette","rubberband","alpha","main","textAlign","overflow","rubberbandControl","cursor","minHeight","rubberbandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","ControlComponent","startX","setStartX","useState","currentX","setCurrentX","anchorPosition","setAnchorPosition","guideX","setGuideX","controlsRef","useRef","rubberbandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","_jsxs","_Fragment","VerticalGuide","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","concat","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","iconButton","margin","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","CascadingMenuButton","label","onClick","activateTrackSelector","TrackSelectorIcon","_ref2","menuAnchorEl","setMenuAnchorEl","anyShowHeaders","some","hideHeader","IconButton","currentTarget","MoreVertIcon","SearchBox","showHelp","round","coarseTotalBp","id","_event","headerMenuItems","container","overlay","content","grid","relative","rubberbandContainer","rubberbandDiv","action","disabledBackground","selected","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","pluginManager","getEnv","ReactComponent","getViewType","type","Header","Rubberband","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","_ref3","props","_ref4","d"],"sourceRoot":""}