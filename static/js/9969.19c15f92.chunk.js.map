{"version":3,"file":"static/js/9969.19c15f92.chunk.js","mappings":"+NAYMA,GAA0BC,EAAAA,EAAAA,WAAS,SAAAC,GAcrC,IAbFC,EAAKD,EAALC,MACAC,EAAOF,EAAPE,QACAC,EAASH,EAATG,UACAC,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,aACAC,EAAWN,EAAXM,YASA,OACEC,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAI,EAACP,QAASA,EAASQ,MAAM,sBAAqBC,SAAA,EACxDJ,EAAAA,EAAAA,MAACK,EAAAA,EAAa,CAAAD,SAAA,EACZJ,EAAAA,EAAAA,MAACM,EAAAA,EAAU,CAAAF,SAAA,CAAC,6BACiB,KAC3BJ,EAAAA,EAAAA,MAAA,UAAAI,SAAA,CACY,OAATR,QAAS,IAATA,OAAS,EAATA,EAAWW,QAAQ,IAAW,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWY,MAAM,KAAY,OAATZ,QAAS,IAATA,OAAS,EAATA,EAAWa,OAC9C,QAGXC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,WAAS,EACTC,WAAY,CAAE,cAAe,6BAC7BC,QAAQ,WACRC,MAAe,OAARlB,QAAQ,IAARA,EAAAA,EAAqB,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWoB,MAC9BC,SAAU,SAAAC,GAAC,OAAInB,EAAYmB,EAAEC,OAAOJ,MAAM,QAG9CL,EAAAA,EAAAA,KAACU,EAAAA,EAAa,CAAAhB,UACZM,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CACLP,QAAQ,YACRQ,MAAM,UACNC,QAAS,WACP,GAAI1B,GAAYD,EAAW,CACzB,IAAMuB,EAASrB,EAAaF,EAAU4B,IACtC9B,EAAM+B,oBAAoBN,EAAQtB,EACpC,CACAE,EAAY,IACZJ,GACF,EAAES,SACH,gBAMT,IAEA,W","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/EditBookmarkLabelDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { GridBookmarkModel, IExtendedLabeledRegionModel } from '../model'\nimport { observer } from 'mobx-react'\n\nconst EditBookmarkLabelDialog = observer(function ({\n  model,\n  onClose,\n  dialogRow,\n  newLabel,\n  bookmarkRows,\n  setNewLabel,\n}: {\n  bookmarkRows: IExtendedLabeledRegionModel[]\n  model: GridBookmarkModel\n  newLabel?: string\n  setNewLabel: (arg: string) => void\n  dialogRow?: IExtendedLabeledRegionModel\n  onClose: () => void\n}) {\n  return (\n    <Dialog open onClose={onClose} title=\"Edit bookmark label\">\n      <DialogContent>\n        <Typography>\n          Editing label for bookmark{' '}\n          <strong>\n            {dialogRow?.refName}:{dialogRow?.start}..{dialogRow?.end}\n          </strong>\n          :\n        </Typography>\n        <TextField\n          fullWidth\n          inputProps={{ 'data-testid': 'edit-bookmark-label-field' }}\n          variant=\"outlined\"\n          value={newLabel ?? dialogRow?.label}\n          onChange={e => setNewLabel(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (newLabel && dialogRow) {\n              const target = bookmarkRows[dialogRow.id]\n              model.updateBookmarkLabel(target, newLabel)\n            }\n            setNewLabel('')\n            onClose()\n          }}\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default EditBookmarkLabelDialog\n"],"names":["EditBookmarkLabelDialog","observer","_ref","model","onClose","dialogRow","newLabel","bookmarkRows","setNewLabel","_jsxs","Dialog","open","title","children","DialogContent","Typography","refName","start","end","_jsx","TextField","fullWidth","inputProps","variant","value","label","onChange","e","target","DialogActions","Button","color","onClick","id","updateBookmarkLabel"],"sourceRoot":""}