{"version":3,"file":"static/js/2167.f47b2d19.chunk.js","mappings":"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","sources":["../../../plugins/spreadsheet-view/src/SpreadsheetView/components/NumberEditor.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ImportWizard.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/RowMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/CellData.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/DataRow.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SortIndicator.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/util.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/DataTableHeader.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/DataTable.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/Spreadsheet.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/GlobalFilterControls.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnFilterControls.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/RowCountMessage.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/StatusBar.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { ImportWizardModel } from '../models/ImportWizard'\n\nconst useStyles = makeStyles()({\n  textField: {\n    width: '2rem',\n    verticalAlign: 'baseline',\n  },\n})\n\nconst NumberEditor = observer(function ({\n  model,\n  disabled,\n  modelPropName,\n  modelSetterName,\n}: {\n  model: ImportWizardModel\n  disabled: boolean\n  modelPropName: string\n  modelSetterName: string\n}) {\n  // @ts-expect-error\n  const [val, setVal] = useState(model[modelPropName])\n  const { classes } = useStyles()\n  useEffect(() => {\n    const num = Number.parseInt(val, 10)\n    if (!Number.isNaN(num)) {\n      if (num > 0) {\n        // @ts-expect-error\n        model[modelSetterName](num)\n      } else {\n        setVal(1)\n      }\n    }\n  }, [model, modelSetterName, val])\n  return (\n    <TextField\n      value={val}\n      disabled={disabled}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n      className={classes.textField}\n    />\n  )\n})\n\nexport default NumberEditor\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Checkbox,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getRoot } from 'mobx-state-tree'\nimport { AbstractRootModel, getSession } from '@jbrowse/core/util'\nimport { FileSelector, ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { ImportWizardModel } from '../models/ImportWizard'\nimport NumberEditor from './NumberEditor'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  container: {\n    margin: '0 auto',\n    maxWidth: '25em',\n    padding: 20,\n  },\n})\n\nconst ImportWizard = observer(({ model }: { model: ImportWizardModel }) => {\n  const session = getSession(model)\n  const { classes } = useStyles()\n  const { assemblyNames, assemblyManager } = session\n  const {\n    fileType,\n    canCancel,\n    fileSource,\n    isReadyToOpen,\n    fileTypes,\n    hasColumnNameLine,\n    error,\n  } = model\n  const [selected, setSelected] = useState(assemblyNames[0])\n  const err = assemblyManager.get(selected)?.error || error\n  const showRowControls = fileType === 'CSV' || fileType === 'TSV'\n  const rootModel = getRoot(model)\n\n  return (\n    <div className={classes.container}>\n      {err ? <ErrorMessage error={err} /> : null}\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Tabular file</FormLabel>\n          <FormGroup>\n            <FileSelector\n              location={fileSource}\n              setLocation={arg => model.setFileSource(arg)}\n              rootModel={rootModel as AbstractRootModel}\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">File Type</FormLabel>\n          <RadioGroup row aria-label=\"file type\" name=\"type\" value={fileType}>\n            {fileTypes.map(fileTypeName => (\n              <FormControlLabel\n                key={fileTypeName}\n                checked={fileType === fileTypeName}\n                value={fileTypeName}\n                onClick={() => model.setFileType(fileTypeName)}\n                control={<Radio />}\n                label={fileTypeName}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      </div>\n      {showRowControls ? (\n        <div>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Column Names</FormLabel>\n            <FormControlLabel\n              disabled={!showRowControls}\n              label=\"has column names on line\"\n              labelPlacement=\"end\"\n              control={\n                <Checkbox\n                  checked={hasColumnNameLine}\n                  onClick={() => model.toggleHasColumnNameLine()}\n                />\n              }\n            />\n            <NumberEditor\n              model={model}\n              disabled={!showRowControls || !hasColumnNameLine}\n              modelPropName=\"columnNameLineNumber\"\n              modelSetterName=\"setColumnNameLineNumber\"\n            />\n          </FormControl>\n        </div>\n      ) : null}\n      <div>\n        <AssemblySelector\n          session={session}\n          selected={selected}\n          onChange={val => setSelected(val)}\n        />\n      </div>\n      <div>\n        {canCancel ? (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => model.cancelButton()}\n            disabled={!canCancel}\n          >\n            Cancel\n          </Button>\n        ) : null}{' '}\n        <Button\n          disabled={!isReadyToOpen || !!err}\n          variant=\"contained\"\n          data-testid=\"open_spreadsheet\"\n          color=\"primary\"\n          onClick={() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            model.import(selected)\n          }}\n        >\n          Open\n        </Button>\n      </div>\n    </div>\n  )\n})\n\nexport default ImportWizard\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Menu, MenuItem } from '@jbrowse/core/ui'\nimport { Instance } from 'mobx-state-tree'\n\n// locals\nimport SpreadsheetModel from '../models/Spreadsheet'\nimport ViewModel from '../models/SpreadsheetView'\n\nconst RowMenu = observer(function ({\n  viewModel,\n  spreadsheetModel,\n}: {\n  viewModel: Instance<typeof ViewModel>\n  spreadsheetModel: Instance<typeof SpreadsheetModel>\n}) {\n  const currentRowMenu = spreadsheetModel.rowMenuPosition\n  const { setRowMenuPosition } = spreadsheetModel\n\n  const rowMenuClose = () => {\n    setRowMenuPosition(null)\n  }\n\n  const rowNumber = spreadsheetModel.rowMenuPosition?.rowNumber\n  if (rowNumber === undefined) {\n    return null\n  }\n\n  const row = spreadsheetModel.rowSet.rows[+rowNumber - 1]\n\n  function handleMenuItemClick(_event: unknown, callback: Function) {\n    callback(viewModel, spreadsheetModel, rowNumber, row)\n    rowMenuClose()\n  }\n\n  // got through and evaluate all the `disabled` callbacks of the menu items\n  const menuItems: MenuItem[] = viewModel.rowMenuItems.map(item => {\n    if (typeof item.disabled === 'function') {\n      const disabled = item.disabled(\n        viewModel,\n        spreadsheetModel,\n        +rowNumber,\n        row,\n      )\n      return { ...item, disabled }\n    }\n    return item\n  })\n\n  return (\n    <Menu\n      anchorEl={currentRowMenu?.anchorEl}\n      open={Boolean(currentRowMenu)}\n      onMenuItemClick={handleMenuItemClick}\n      onClose={rowMenuClose}\n      menuItems={menuItems}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    />\n  )\n})\n\nexport default RowMenu\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\n\nconst CellData = observer(function ({\n  cell,\n  spreadsheetModel,\n  columnNumber,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  cell: any\n  spreadsheetModel: SpreadsheetModel\n  columnNumber: number\n}) {\n  const ret = spreadsheetModel.columns[columnNumber]\n  if (ret && 'dataType' in ret && ret.dataType.DataCellReactComponent) {\n    return (\n      <ret.dataType.DataCellReactComponent\n        cell={cell}\n        dataType={ret.dataType}\n        columnNumber={columnNumber}\n        spreadsheet={spreadsheetModel}\n      />\n    )\n  }\n\n  return cell.text\n})\n\nexport default CellData\n","import React from 'react'\nimport { Checkbox, IconButton, FormControlLabel } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport { indigo } from '@mui/material/colors'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\nimport RowStateModel from '../models/Row'\nimport CellData from './CellData'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\ntype RowModel = Instance<typeof RowStateModel>\n\nconst useStyles = makeStyles()(theme => ({\n  rowNumCell: {\n    textAlign: 'left',\n    border: `1px solid ${theme.palette.action.disabledBackground}`,\n    position: 'relative',\n    padding: '0 2px 0 0',\n    whiteSpace: 'nowrap',\n    userSelect: 'none',\n  },\n  rowNumber: {\n    fontWeight: 'normal',\n    display: 'inline-block',\n    flex: 'none',\n    paddingRight: '20px',\n    margin: 0,\n    whiteSpace: 'nowrap',\n  },\n  rowMenuButton: {\n    padding: 0,\n    margin: 0,\n    position: 'absolute',\n    right: 0,\n    display: 'inline-block',\n    whiteSpace: 'nowrap',\n    flex: 'none',\n  },\n  rowMenuButtonIcon: {},\n  rowSelector: {\n    position: 'relative',\n    top: '-2px',\n    margin: 0,\n    padding: '0 0.2rem',\n  },\n\n  dataRowSelected: {\n    background: indigo[100],\n    '& th': {\n      background: indigo[100],\n    },\n  },\n}))\n\nconst DataRow = observer(function ({\n  rowModel,\n  rowNumber,\n  spreadsheetModel,\n}: {\n  rowModel: RowModel\n  rowNumber: string\n  spreadsheetModel: SpreadsheetModel\n}) {\n  const { classes } = useStyles()\n  const { hideRowSelection, columnDisplayOrder } = spreadsheetModel\n  let rowClass = ''\n  if (rowModel.isSelected) {\n    rowClass += `${classes.dataRowSelected}`\n  }\n\n  function labelClick(evt: React.MouseEvent) {\n    rowModel.toggleSelect()\n    evt.stopPropagation()\n    evt.preventDefault()\n  }\n\n  return (\n    <tr className={rowClass}>\n      <td className={classes.rowNumCell} onClick={labelClick}>\n        {hideRowSelection ? (\n          <FormControlLabel\n            className={classes.rowNumber}\n            control={\n              <Checkbox\n                className={classes.rowSelector}\n                checked={rowModel.isSelected}\n                onClick={labelClick}\n              />\n            }\n            label={rowModel.id}\n          />\n        ) : null}\n        <IconButton\n          className={classes.rowMenuButton}\n          onClick={event => {\n            spreadsheetModel.setRowMenuPosition({\n              anchorEl: event.currentTarget,\n              rowNumber,\n            })\n            event.preventDefault()\n            event.stopPropagation()\n          }}\n        >\n          <ArrowDropDown className={classes.rowMenuButtonIcon} />\n        </IconButton>\n      </td>\n      {columnDisplayOrder.map(colNumber => (\n        <td key={colNumber}>\n          <CellData\n            cell={rowModel.cellsWithDerived[colNumber]}\n            spreadsheetModel={spreadsheetModel}\n            columnNumber={colNumber}\n          />\n        </td>\n      ))}\n    </tr>\n  )\n})\n\nexport default DataRow\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { iterMap } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { MenuItem } from '@jbrowse/core/ui/Menu'\nimport { SpreadsheetModel } from '../models/Spreadsheet'\nimport { SpreadsheetViewModel } from '../models/SpreadsheetView'\n\n// icons\nimport CheckIcon from '@mui/icons-material/Check'\nimport FilterListIcon from '@mui/icons-material/FilterList'\nimport PermDataSettingIcon from '@mui/icons-material/PermDataSetting'\nimport SortIcon from '@mui/icons-material/Sort'\n\nconst ColumnMenu = observer(function ({\n  viewModel,\n  spreadsheetModel,\n  currentColumnMenu,\n  setColumnMenu,\n}: {\n  spreadsheetModel: SpreadsheetModel\n  viewModel: SpreadsheetViewModel\n  currentColumnMenu?: { colNumber: number; anchorEl: HTMLElement }\n  setColumnMenu: (arg?: { anchorEl: HTMLElement; colNumber: number }) => void\n}) {\n  const columnMenuClose = () => setColumnMenu(undefined)\n  const columnNumber = currentColumnMenu?.colNumber || 0\n  const sortMenuClick = (descending: boolean) => {\n    spreadsheetModel.setSortColumns([\n      {\n        columnNumber,\n        descending,\n      },\n    ])\n  }\n\n  const { dataTypeChoices } = spreadsheetModel\n\n  // make a Map of categoryName => [entry...]\n  type Record = (typeof dataTypeChoices)[0]\n  interface RecordGroup {\n    isCategory: boolean\n    subMenuItems: Record[]\n  }\n  const dataTypeTopLevelMenu = new Map<string, Record | RecordGroup>()\n  dataTypeChoices.forEach(dataTypeRecord => {\n    const { displayName, categoryName } = dataTypeRecord\n    if (categoryName) {\n      let entry = dataTypeTopLevelMenu.get(categoryName) as RecordGroup\n      if (!entry) {\n        entry = {\n          isCategory: true,\n          subMenuItems: [],\n        }\n        dataTypeTopLevelMenu.set(categoryName, entry)\n      }\n      entry.subMenuItems.push(dataTypeRecord)\n    } else {\n      dataTypeTopLevelMenu.set(displayName, dataTypeRecord)\n    }\n  })\n\n  const { columns, sortColumns } = spreadsheetModel\n  const dataType = currentColumnMenu && columns[columnNumber].dataType\n  const dataTypeName = dataType?.type || ''\n  const dataTypeDisplayName =\n    (currentColumnMenu && columns[columnNumber].dataType.displayName) || ''\n\n  const isSortingAscending =\n    !!currentColumnMenu &&\n    sortColumns.some(\n      c => c.columnNumber === currentColumnMenu.colNumber && !c.descending,\n    )\n  const isSortingDescending =\n    !!currentColumnMenu &&\n    sortColumns.some(\n      c => c.columnNumber === currentColumnMenu.colNumber && c.descending,\n    )\n\n  const menuItems = [\n    // top-level column menu\n    {\n      label: 'Sort ascending',\n      icon: SortIcon,\n      type: 'radio',\n      checked: isSortingAscending,\n      onClick: () => sortMenuClick(false),\n    },\n    {\n      label: 'Sort descending',\n      icon: SortIcon,\n      type: 'radio',\n      checked: isSortingDescending,\n      onClick: () => sortMenuClick(true),\n    },\n    {\n      label: 'No sort',\n      icon: SortIcon,\n      type: 'radio',\n      checked: !isSortingDescending && !isSortingAscending,\n      onClick: () => spreadsheetModel.setSortColumns([]),\n    },\n    // data type menu\n    {\n      label: `Type: ${dataTypeDisplayName}`,\n      icon: PermDataSettingIcon,\n      subMenu: iterMap(\n        dataTypeTopLevelMenu.entries(),\n        ([displayName, record]) => {\n          if ('typeName' in record && record.typeName) {\n            const { typeName } = record\n            return {\n              label: displayName || typeName,\n              icon: dataTypeName === typeName ? CheckIcon : undefined,\n              onClick: () =>\n                spreadsheetModel.setColumnType(columnNumber, typeName),\n            }\n          } else if ('subMenuItems' in record && record.subMenuItems) {\n            const { subMenuItems } = record\n            return {\n              label: displayName,\n              icon: subMenuItems.some(i => i.typeName === dataTypeName)\n                ? CheckIcon\n                : undefined,\n              subMenu: subMenuItems.map(({ typeName, displayName }) => ({\n                label: displayName,\n                icon: typeName === dataTypeName ? CheckIcon : undefined,\n                onClick: () =>\n                  spreadsheetModel.setColumnType(columnNumber, typeName),\n              })),\n            }\n          } else {\n            return null\n          }\n        },\n      ).filter(Boolean),\n    },\n  ] as MenuItem[]\n\n  // don't display the filter item if this data type doesn't have filtering\n  // implemented\n  if (dataType?.hasFilter) {\n    menuItems.push({\n      label: 'Create filter',\n      icon: FilterListIcon,\n      onClick: () =>\n        viewModel.filterControls.addBlankColumnFilter(columnNumber),\n    })\n  }\n\n  return (\n    <Menu\n      anchorEl={currentColumnMenu?.anchorEl}\n      open={Boolean(currentColumnMenu)}\n      onMenuItemClick={(_event, callback) => {\n        callback()\n        columnMenuClose()\n      }}\n      onClose={columnMenuClose}\n      menuItems={menuItems}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    />\n  )\n})\n\nexport default ColumnMenu\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport { SpreadsheetModel } from '../models/Spreadsheet'\n\nconst useStyles = makeStyles()({\n  sortIndicator: {\n    position: 'relative',\n    top: '0.2rem',\n    fontSize: '1rem',\n  },\n})\n\nexport default function SortIndicator({\n  model,\n  columnNumber,\n}: {\n  model: SpreadsheetModel\n  columnNumber: number\n}) {\n  const { classes } = useStyles()\n  const sortSpec = model.sortColumns.find(c => c.columnNumber === columnNumber)\n\n  if (sortSpec) {\n    const { descending } = sortSpec\n    return descending ? (\n      <KeyboardArrowUpIcon className={classes.sortIndicator} />\n    ) : (\n      <KeyboardArrowDownIcon className={classes.sortIndicator} />\n    )\n  }\n  return null\n}\n","function letterFor(n: number) {\n  return String.fromCharCode(n + 65)\n}\n\nexport function numToColName(num: number) {\n  if (num >= 0) {\n    if (num < 26) {\n      return letterFor(num)\n    }\n    if (num < 27 * 26) {\n      return letterFor(Math.floor(num / 26 - 1)) + letterFor(num % 26)\n    }\n  }\n\n  throw new RangeError('column number out of range')\n}\n","import React, { useState } from 'react'\nimport { IconButton, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport CropFreeIcon from '@mui/icons-material/CropFree'\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\n\n// locals\nimport { SpreadsheetModel } from '../models/Spreadsheet'\nimport ColumnMenu from './ColumnMenu'\nimport SortIndicator from './SortIndicator'\nimport { numToColName } from './util'\n\ninterface ColMenu {\n  colNumber: number\n  anchorEl: HTMLElement\n}\n\nconst useStyles = makeStyles()(theme => ({\n  columnHead: {\n    fontWeight: 'normal',\n    background: theme.palette.mode === 'dark' ? '#333' : '#eee',\n    position: 'sticky',\n    top: 0,\n    zIndex: 2,\n    whiteSpace: 'nowrap',\n  },\n\n  columnButtonContainer: {\n    display: 'none',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    background: theme.palette.background.paper,\n    height: '100%',\n  },\n\n  topLeftCorner: {\n    background: theme.palette.mode === 'dark' ? '#333' : '#eee',\n    zIndex: 2,\n    position: 'sticky',\n    top: 0,\n    minWidth: theme.spacing(2),\n    textAlign: 'left',\n  },\n}))\n\nconst DataTableHeader = observer(function ({\n  model,\n}: {\n  model: SpreadsheetModel\n}) {\n  const { classes } = useStyles()\n  const { columnDisplayOrder, columns, hasColumnNames, rowSet } = model\n  const [currentColumnMenu, setColumnMenu] = useState<ColMenu>()\n  const [currentHoveredColumn, setHoveredColumn] = useState<number>()\n\n  return (\n    <>\n      <thead>\n        <tr>\n          <th className={classes.topLeftCorner}>\n            <Tooltip title=\"Unselect all\" placement=\"right\">\n              <span>\n                <IconButton\n                  onClick={() => model.unselectAll()}\n                  disabled={!rowSet.selectedCount}\n                >\n                  <CropFreeIcon />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </th>\n          {columnDisplayOrder.map(colNumber => (\n            <th\n              className={classes.columnHead}\n              key={colNumber}\n              onMouseOver={() => setHoveredColumn(colNumber)}\n              onMouseOut={() => setHoveredColumn(undefined)}\n            >\n              <SortIndicator model={model} columnNumber={colNumber} />\n              {(hasColumnNames && columns[colNumber]?.name) ||\n                numToColName(colNumber)}\n              <div\n                className={classes.columnButtonContainer}\n                style={{\n                  display:\n                    currentHoveredColumn === colNumber ||\n                    currentColumnMenu?.colNumber === colNumber\n                      ? 'block'\n                      : 'none',\n                }}\n              >\n                <IconButton\n                  onClick={evt => {\n                    setColumnMenu({\n                      colNumber,\n                      anchorEl: evt.currentTarget,\n                    })\n                  }}\n                >\n                  <ArrowDropDown />\n                </IconButton>\n              </div>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <ColumnMenu\n        viewModel={getParent(model)}\n        spreadsheetModel={model}\n        currentColumnMenu={currentColumnMenu}\n        setColumnMenu={setColumnMenu}\n      />\n    </>\n  )\n})\n\nexport default DataTableHeader\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getParent, Instance } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\nimport RowStateModel from '../models/Row'\nimport RowMenu from './RowMenu'\nimport DataRow from './DataRow'\nimport DataTableHeader from './DataTableHeader'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\ntype RowModel = Instance<typeof RowStateModel>\n\nconst useStyles = makeStyles()(theme => ({\n  dataTable: {\n    borderCollapse: 'collapse',\n    '& td': {\n      border: `1px solid ${theme.palette.action.disabledBackground}`,\n      padding: '0.2rem',\n      maxWidth: '50em',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    },\n  },\n\n  emptyMessage: {\n    captionSide: 'bottom',\n  },\n}))\n\nconst DataTableBody = observer(function ({\n  rows,\n  spreadsheetModel,\n  page,\n  rowsPerPage,\n}: {\n  rows: RowModel[]\n  spreadsheetModel: SpreadsheetModel\n  page: number\n  rowsPerPage: number\n}) {\n  return (\n    <tbody>\n      {rows.slice(rowsPerPage * page, rowsPerPage * (page + 1)).map(row => (\n        <DataRow\n          key={row.id}\n          rowNumber={row.id}\n          spreadsheetModel={spreadsheetModel}\n          rowModel={row}\n        />\n      ))}\n    </tbody>\n  )\n})\n\nconst DataTable = observer(function ({\n  model,\n  page,\n  rowsPerPage,\n}: {\n  model: SpreadsheetModel\n  page: number\n  rowsPerPage: number\n}) {\n  const { rowSet } = model\n  const { classes } = useStyles()\n  const rows = rowSet.sortedFilteredRows\n  return (\n    <>\n      <RowMenu viewModel={getParent(model)} spreadsheetModel={model} />\n      <table className={classes.dataTable}>\n        <DataTableHeader model={model} />\n        <DataTableBody\n          rows={rows}\n          spreadsheetModel={model}\n          page={page}\n          rowsPerPage={rowsPerPage}\n        />\n        {!rows.length ? (\n          <caption className={classes.emptyMessage}>\n            {rowSet.count ? 'no rows match criteria' : 'no rows present'}\n          </caption>\n        ) : null}\n      </table>\n    </>\n  )\n})\n\nexport default DataTable\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport DataTable from './DataTable'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    background: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n}))\n\nconst Spreadsheet = observer(function ({\n  model,\n  height,\n  page,\n  rowsPerPage,\n}: {\n  model: SpreadsheetModel\n  height: number\n  page: number\n  rowsPerPage: number\n}) {\n  const { classes } = useStyles()\n\n  return (\n    <div className={classes.root} style={{ height }}>\n      {model?.rowSet?.isLoaded && model.initialized ? (\n        <DataTable model={model} page={page} rowsPerPage={rowsPerPage} />\n      ) : (\n        <LoadingEllipses variant=\"h6\" />\n      )}\n    </div>\n  )\n})\n\nexport default Spreadsheet\n","import React, { useState, useEffect } from 'react'\n\nimport { IconButton, InputAdornment, TextField } from '@mui/material'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport FilterIcon from '@mui/icons-material/FilterList'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { useDebounce } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  textFilterControlEndAdornment: {\n    marginRight: '-18px',\n  },\n})\n\nconst TextFilter = observer(function ({\n  textFilter,\n}: {\n  textFilter: { stringToFind: string; setString: (arg: string) => void }\n}) {\n  const { classes } = useStyles()\n  // this paragraph is silliness to debounce the text filter input\n  const [textFilterValue, setTextFilterValue] = useState(\n    textFilter.stringToFind,\n  )\n  const debouncedTextFilter = useDebounce(textFilterValue, 500)\n  useEffect(() => {\n    textFilter.setString(debouncedTextFilter)\n  }, [debouncedTextFilter, textFilter])\n\n  return (\n    <div>\n      <TextField\n        label=\"text filter\"\n        value={textFilterValue}\n        onChange={evt => setTextFilterValue(evt.target.value)}\n        variant=\"outlined\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <FilterIcon />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlEndAdornment}\n              position=\"end\"\n            >\n              <IconButton\n                aria-label=\"clear filter\"\n                onClick={() => setTextFilterValue('')}\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  )\n})\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst GlobalFilterControls = observer(({ model }: { model: any }) => {\n  const textFilter = model.filterControls.rowFullText\n  return <TextFilter textFilter={textFilter} />\n})\n\nexport default GlobalFilterControls\n","import React from 'react'\nimport { Grid, IconButton, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport FilterIcon from '@mui/icons-material/FilterList'\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  columnName: {\n    verticalAlign: 'middle',\n    paddingRight: '0.3em',\n  },\n  columnFilter: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    width: '100%',\n    position: 'relative',\n  },\n  filterIcon: {\n    position: 'relative',\n    top: '12px',\n  },\n  filterIconBg: {\n    background: theme.palette.tertiary.main,\n    color: 'white',\n    padding: theme.spacing(1.5),\n  },\n}))\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction FilterOperations({ filterModel }: { filterModel: any }) {\n  if (filterModel) {\n    return <filterModel.ReactComponent filterModel={filterModel} />\n  }\n  return null\n}\n\nconst ColumnFilterControls = observer(function ({\n  viewModel,\n  filterModel,\n  columnNumber,\n  height,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nany) {\n  const { classes } = useStyles()\n\n  const columnDefinition = viewModel.spreadsheet.columns[columnNumber]\n  if (!columnDefinition) {\n    throw new Error('no column definition! filters are probably out of date')\n  }\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      className={classes.columnFilter}\n      style={{ height }}\n    >\n      <Grid item className={classes.filterIconBg}>\n        <FilterIcon className={classes.filterIcon} />\n      </Grid>\n      <Grid item>\n        <IconButton\n          onClick={() =>\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            getParent<any>(filterModel, 2).removeColumnFilter(filterModel)\n          }\n          title=\"remove filter\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography className={classes.columnName} component=\"span\">\n          {columnDefinition.name}\n        </Typography>{' '}\n        <FilterOperations filterModel={filterModel} />\n      </Grid>\n    </Grid>\n  )\n})\n\nexport default ColumnFilterControls\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\n\nconst RowCountMessage = observer(function ({\n  spreadsheet,\n}: {\n  spreadsheet: SpreadsheetModel\n}) {\n  if (spreadsheet.rowSet.isLoaded) {\n    const {\n      passingFiltersCount,\n      count,\n      selectedCount,\n      selectedAndPassingFiltersCount,\n    } = spreadsheet.rowSet\n\n    let rowMessage\n    if (passingFiltersCount !== count) {\n      rowMessage = `${spreadsheet.rowSet.passingFiltersCount} rows of ${spreadsheet.rowSet.count} total`\n      if (selectedCount) {\n        rowMessage += `, ${selectedAndPassingFiltersCount} selected`\n        const selectedAndNotPassingFiltersCount =\n          selectedCount - selectedAndPassingFiltersCount\n        if (selectedAndNotPassingFiltersCount) {\n          rowMessage += ` (${selectedAndNotPassingFiltersCount} selected rows do not pass filters)`\n        }\n      }\n    } else {\n      rowMessage = `${spreadsheet.rowSet.count} rows`\n      if (selectedCount) {\n        rowMessage += `, ${selectedCount} selected`\n      }\n    }\n    return <>{rowMessage}</>\n  }\n  return null\n})\nexport default RowCountMessage\n","import React from 'react'\nimport { FormGroup, TablePagination } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport RowCountMessage from './RowCountMessage'\nimport { SpreadsheetModel } from '../models/Spreadsheet'\nimport { observer } from 'mobx-react'\n\nconst statusBarHeight = 40\n\nconst useStyles = makeStyles()(theme => ({\n  statusBar: {\n    height: statusBarHeight,\n    boxSizing: 'border-box',\n    borderTop: '1px outset #b1b1b1',\n    paddingLeft: theme.spacing(1),\n  },\n  verticallyCenter: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n}))\n\nconst StatusBar = observer(function StatusBar({\n  page,\n  rowsPerPage,\n  setPage,\n  setRowsPerPage,\n  spreadsheet,\n  mode,\n}: {\n  page: number\n  mode: string\n  spreadsheet: SpreadsheetModel\n  rowsPerPage: number\n  setPage: (arg: number) => void\n  setRowsPerPage: (arg: number) => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <div\n      className={classes.statusBar}\n      style={{ display: mode === 'display' ? undefined : 'none' }}\n    >\n      {spreadsheet ? (\n        <FormGroup row>\n          <div className={classes.verticallyCenter}>\n            <RowCountMessage spreadsheet={spreadsheet} />\n          </div>\n          <div className={classes.spacer} />\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100, 1000]}\n            count={spreadsheet.rowSet.count}\n            component=\"div\"\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={(_, newPage) => setPage(newPage)}\n            onRowsPerPageChange={event => {\n              setRowsPerPage(+event.target.value)\n              setPage(0)\n            }}\n          />\n          <div className={classes.spacer} />\n        </FormGroup>\n      ) : null}\n    </div>\n  )\n})\n\nexport default StatusBar\n","import React, { useState } from 'react'\nimport { Grid } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport ImportWizard from './ImportWizard'\nimport Spreadsheet from './Spreadsheet'\nimport GlobalFilterControls from './GlobalFilterControls'\nimport ColumnFilterControls from './ColumnFilterControls'\nimport { SpreadsheetViewModel } from '../models/SpreadsheetView'\nimport StatusBar from './StatusBar'\n\nconst headerHeight = 52\nconst colFilterHeight = 46\nconst statusBarHeight = 40\n\nconst useStyles = makeStyles()(theme => ({\n  header: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  contentArea: {\n    overflow: 'auto',\n  },\n  resizeHandle: {\n    height: 3,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    background: theme.palette.action.disabled,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\nconst SpreadsheetView = observer(function ({\n  model,\n}: {\n  model: SpreadsheetViewModel\n}) {\n  const { classes } = useStyles()\n  const {\n    spreadsheet,\n    filterControls,\n    hideFilterControls,\n    hideVerticalResizeHandle,\n    mode,\n    height,\n  } = model\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(100)\n\n  return (\n    <div>\n      {mode !== 'display' || hideFilterControls ? null : (\n        <>\n          <Grid container direction=\"row\" className={classes.header}>\n            <Grid item>\n              <GlobalFilterControls model={model} />\n            </Grid>\n          </Grid>\n          {filterControls.columnFilters.map((f, i) => (\n            <ColumnFilterControls\n              key={`${f.columnNumber}-${i}`}\n              viewModel={model}\n              filterModel={f}\n              columnNumber={f.columnNumber}\n              height={colFilterHeight}\n            />\n          ))}\n        </>\n      )}\n\n      {mode === 'import' ? (\n        <ImportWizard model={model.importWizard} />\n      ) : (\n        <div className={classes.contentArea}>\n          <div\n            style={{\n              position: 'relative',\n              display: mode === 'display' ? undefined : 'none',\n            }}\n          >\n            {spreadsheet ? (\n              <Spreadsheet\n                page={page}\n                rowsPerPage={rowsPerPage}\n                model={spreadsheet}\n                height={\n                  height -\n                  headerHeight -\n                  filterControls.columnFilters.length * colFilterHeight -\n                  statusBarHeight\n                }\n              />\n            ) : null}\n          </div>\n        </div>\n      )}\n      {spreadsheet ? (\n        <StatusBar\n          page={page}\n          setPage={setPage}\n          rowsPerPage={rowsPerPage}\n          setRowsPerPage={setRowsPerPage}\n          mode={mode}\n          spreadsheet={spreadsheet}\n        />\n      ) : null}\n      {hideVerticalResizeHandle ? null : (\n        <ResizeHandle\n          onDrag={model.resizeHeight}\n          className={classes.resizeHandle}\n        />\n      )}\n    </div>\n  )\n})\n\nexport default SpreadsheetView\n"],"names":["useStyles","makeStyles","textField","width","verticalAlign","observer","_ref","model","disabled","modelPropName","modelSetterName","val","setVal","useState","classes","useEffect","num","Number","parseInt","isNaN","_jsx","TextField","value","type","onChange","evt","target","className","container","margin","maxWidth","padding","_assemblyManager$get","session","getSession","assemblyNames","assemblyManager","fileType","canCancel","fileSource","isReadyToOpen","fileTypes","hasColumnNameLine","error","selected","setSelected","err","get","showRowControls","rootModel","getRoot","_jsxs","children","ErrorMessage","FormControl","component","FormLabel","FormGroup","FileSelector","location","setLocation","arg","setFileSource","RadioGroup","row","name","map","fileTypeName","FormControlLabel","checked","onClick","setFileType","control","Radio","label","labelPlacement","Checkbox","toggleHasColumnNameLine","NumberEditor","AssemblySelector","Button","variant","color","cancelButton","import","_spreadsheetModel$row","viewModel","spreadsheetModel","currentRowMenu","rowMenuPosition","setRowMenuPosition","rowMenuClose","rowNumber","undefined","rowSet","rows","menuItems","rowMenuItems","item","Menu","anchorEl","open","Boolean","onMenuItemClick","_event","callback","onClose","anchorOrigin","vertical","horizontal","cell","columnNumber","ret","columns","dataType","DataCellReactComponent","spreadsheet","text","theme","rowNumCell","textAlign","border","concat","palette","action","disabledBackground","position","whiteSpace","userSelect","fontWeight","display","flex","paddingRight","rowMenuButton","right","rowMenuButtonIcon","rowSelector","top","dataRowSelected","background","indigo","rowModel","hideRowSelection","columnDisplayOrder","rowClass","labelClick","toggleSelect","stopPropagation","preventDefault","isSelected","id","IconButton","event","currentTarget","ArrowDropDown","colNumber","CellData","cellsWithDerived","currentColumnMenu","setColumnMenu","columnMenuClose","sortMenuClick","descending","setSortColumns","dataTypeChoices","dataTypeTopLevelMenu","Map","forEach","dataTypeRecord","displayName","categoryName","entry","isCategory","subMenuItems","set","push","sortColumns","dataTypeName","dataTypeDisplayName","isSortingAscending","some","c","isSortingDescending","icon","SortIcon","PermDataSettingIcon","subMenu","iterMap","entries","_ref2","record","typeName","CheckIcon","setColumnType","i","_ref3","filter","hasFilter","FilterListIcon","filterControls","addBlankColumnFilter","sortIndicator","fontSize","SortIndicator","sortSpec","find","KeyboardArrowUpIcon","KeyboardArrowDownIcon","letterFor","n","String","fromCharCode","numToColName","Math","floor","RangeError","columnHead","mode","zIndex","columnButtonContainer","paper","height","topLeftCorner","minWidth","spacing","hasColumnNames","currentHoveredColumn","setHoveredColumn","_Fragment","Tooltip","title","placement","unselectAll","selectedCount","CropFreeIcon","_columns$colNumber","onMouseOver","onMouseOut","style","ColumnMenu","getParent","dataTable","borderCollapse","overflow","textOverflow","emptyMessage","captionSide","DataTableBody","page","rowsPerPage","slice","DataRow","sortedFilteredRows","RowMenu","DataTableHeader","length","count","root","marginBottom","_model$rowSet","isLoaded","initialized","DataTable","LoadingEllipses","textFilterControlEndAdornment","marginRight","TextFilter","textFilter","textFilterValue","setTextFilterValue","stringToFind","debouncedTextFilter","useDebounce","setString","InputProps","startAdornment","InputAdornment","FilterIcon","endAdornment","ClearIcon","rowFullText","columnName","columnFilter","boxSizing","filterIcon","filterIconBg","tertiary","main","FilterOperations","filterModel","ReactComponent","columnDefinition","Error","Grid","direction","removeColumnFilter","CloseIcon","Typography","passingFiltersCount","selectedAndPassingFiltersCount","rowMessage","selectedAndNotPassingFiltersCount","statusBar","borderTop","paddingLeft","verticallyCenter","justifyContent","flexDirection","spacer","flexGrow","setPage","setRowsPerPage","RowCountMessage","TablePagination","rowsPerPageOptions","onPageChange","_","newPage","onRowsPerPageChange","header","contentArea","resizeHandle","bottom","left","hideFilterControls","hideVerticalResizeHandle","GlobalFilterControls","columnFilters","f","ColumnFilterControls","ImportWizard","importWizard","Spreadsheet","StatusBar","ResizeHandle","onDrag","resizeHeight"],"sourceRoot":""}