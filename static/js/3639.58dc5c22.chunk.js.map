{"version":3,"file":"static/js/3639.58dc5c22.chunk.js","mappings":"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","sources":["../../../plugins/sequence/src/SequenceSearchAdapter/SequenceSearchAdapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport {\n  SimpleFeature,\n  Feature,\n  Region,\n  revcom,\n  doesIntersect2,\n} from '@jbrowse/core/util'\nimport { toArray } from 'rxjs/operators'\nimport { firstValueFrom } from 'rxjs'\n\nexport default class extends BaseFeatureDataAdapter {\n  public async configure() {\n    const adapter = await this.getSubAdapter?.(this.getConf('sequenceAdapter'))\n    if (!adapter) {\n      throw new Error('Error getting subadapter')\n    }\n    return adapter.dataAdapter as BaseFeatureDataAdapter\n  }\n\n  public async getRefNames() {\n    const adapter = await this.configure()\n    return adapter.getRefNames()\n  }\n\n  public getFeatures(query: Region, opts: BaseOptions) {\n    return ObservableCreate<Feature>(async observer => {\n      const sequenceAdapter = await this.configure()\n      const hw = 1000\n      let { start: queryStart, end: queryEnd } = query\n      queryStart = Math.max(0, queryStart - hw)\n      queryEnd += hw\n\n      if (queryEnd < 0 || queryStart > queryEnd) {\n        observer.complete()\n        return\n      }\n\n      const ret = sequenceAdapter.getFeatures(\n        {\n          ...query,\n          start: queryStart,\n          end: queryEnd,\n        },\n        opts,\n      )\n      const feats = await firstValueFrom(ret.pipe(toArray()))\n      const residues: string = feats[0]?.get('seq') || ''\n      const search = this.getConf('search') as string\n      const searchForward = this.getConf('searchForward')\n      const searchReverse = this.getConf('searchReverse')\n      const caseInsensitive = this.getConf('caseInsensitive')\n      const re = new RegExp(search, 'g' + (caseInsensitive ? 'i' : ''))\n\n      if (search) {\n        if (searchForward) {\n          const matches = residues.matchAll(re)\n          for (const match of matches) {\n            const s = queryStart + (match.index || 0)\n\n            if (doesIntersect2(s, s + search.length, query.start, query.end)) {\n              observer.next(\n                new SimpleFeature({\n                  uniqueId: `${this.id}-match-${s}-p`,\n                  refName: query.refName,\n                  start: s,\n                  end: s + match[0].length,\n                  name: match[0],\n                  strand: 1,\n                }),\n              )\n            }\n          }\n        }\n        if (searchReverse) {\n          const matches = revcom(residues).matchAll(re)\n          for (const match of matches) {\n            const s = queryEnd - (match.index || 0)\n            if (doesIntersect2(s, s + search.length, query.start, query.end)) {\n              observer.next(\n                new SimpleFeature({\n                  uniqueId: `${this.id}-match-${s}-n`,\n                  refName: query.refName,\n                  start: s - match[0].length,\n                  name: match[0],\n                  end: s,\n                  strand: -1,\n                }),\n              )\n            }\n          }\n        }\n      }\n\n      observer.complete()\n    })\n  }\n\n  public freeResources() {}\n}\n"],"names":["_default","_BaseFeatureDataAdapt","_configure","_getRefNames","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$getSubAdapter","adapter","wrap","_context","prev","next","this","getSubAdapter","call","getConf","sent","Error","abrupt","dataAdapter","stop","_callee2","_context2","configure","getRefNames","query","opts","_ref","_this","ObservableCreate","_x","_callee3","observer","_feats$","sequenceAdapter","queryStart","queryEnd","ret","feats","residues","search","searchForward","searchReverse","caseInsensitive","re","matches","_iterator","_step","match","s","_matches","_iterator2","_step2","_match","_s","_context3","start","end","Math","max","complete","getFeatures","_objectSpread","firstValueFrom","pipe","toArray","get","RegExp","matchAll","_createForOfIteratorHelper","n","done","index","doesIntersect2","length","SimpleFeature","uniqueId","concat","id","refName","name","strand","err","e","f","revcom","BaseFeatureDataAdapter"],"sourceRoot":""}