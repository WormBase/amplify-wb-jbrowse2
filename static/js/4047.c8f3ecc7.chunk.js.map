{"version":3,"file":"static/js/4047.c8f3ecc7.chunk.js","mappings":"6MAQA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCC,WAAY,CACVC,UAAW,aACXC,UAAW,IACXC,SAAU,GACVC,QAASL,EAAMM,QAAQ,IACvBC,SAAU,YAIC,SAASC,EAAUC,GAAiC,IAAhC,MAAEC,GAA2BD,EAC9D,MAAM,QAAEE,GAAYb,IACdc,EAAS,GAAAC,OAAGH,GAAQI,MAAM,gBAChC,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWL,EAAQV,WAAWgB,SAChCC,EAAAA,eAAqBR,GACpBA,EACEE,GACFG,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAACC,KAAI,GAAAP,OAAKH,GAAQO,SAAA,GAAAJ,OAAKH,MAE5BK,EAAAA,EAAAA,KAACM,EAAAA,cAAa,CACZC,KAAMC,IAASb,GAASc,KAAKC,UAAUf,GAASgB,OAAOhB,MAKjE,C,iFC9BA,MAAMZ,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClC2B,iBAAkB,CAChB,UAAW,CACTC,WAAmC,SAAvB5B,EAAM6B,QAAQC,KAAkB,UAAY,WAG5DC,UAAW,CACT7B,UAAW,YACX8B,SAAU,GACVC,aAAc,kBACd7B,SAAU,GACVwB,WAAY5B,EAAM6B,QAAQK,OAAOC,mBACjCC,YAAapC,EAAMM,QAAQ,GAC3BD,QAASL,EAAMM,QAAQ,SAIZ,SAAS+B,EAAS5B,GAU7B,IAV8B,YAChC6B,EAAW,KACXC,EAAI,MACJC,EAAK,OACLC,EAAS,IAMVhC,EACC,MAAM,QAAEE,EAAO,GAAE+B,GAAO5C,IAClB6C,EAAM,IAAIF,EAAQF,GAAMK,KAAK,KACnC,OAAON,GACLvB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAO,CAACC,MAAOR,EAAaS,UAAU,OAAM9B,UAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAW0B,EAAG/B,EAAQgB,iBAAkBhB,EAAQoB,WAAWd,SAC7D0B,OAIL5B,EAAAA,EAAAA,KAAA,OAAKC,UAAWL,EAAQoB,UAAWiB,MAAO,CAAER,MAAOA,GAAQvB,SACxD0B,GAGP,C,4FCxCA,MAAM7C,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BkD,MAAO,CACLC,QAAS,OACTC,SAAU,UAIC,SAASC,EAAW3C,GAY/B,IAZgC,KAClC8B,EAAI,MACJ7B,EAAK,YACL4B,EAAW,OACXG,EAAM,MACND,GAOD/B,EACC,MAAM,QAAEE,GAAYb,IACpB,OAAiB,OAAVY,QAA4B2C,IAAV3C,GACvB4C,EAAAA,EAAAA,MAAA,OAAKtC,UAAWL,EAAQsC,MAAMhC,SAAA,EAC5BF,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRI,OAAQA,EACRH,YAAaA,EACbC,KAAMA,EACNC,MAAOA,KAETzB,EAAAA,EAAAA,KAACP,EAAAA,EAAU,CAACE,MAAOA,OAEnB,IACN,C,8UCzBA,MAAM6C,GAAUC,EAAAA,EAAAA,OAAK,IAAM,kCACrBC,GAAyBD,EAAAA,EAAAA,OAAK,IAAM,kCAEpC1D,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClC0D,YAAa,CACXC,OAAQ,GAGVC,UAAW,CACTC,UAAW7D,EAAMM,QAAQ,GACzBwD,aAAc9D,EAAMM,QAAQ,QAOjB,SAASyD,EAAoBtD,GAAiC,IAAhC,MAAEuD,EAAK,QAAEC,GAAoBxD,EACxE,MAAM,QAAEE,GAAYb,KACboE,EAAOC,IAAYC,EAAAA,EAAAA,WAAS,IAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAE3C,OAAQJ,GACNV,EAAAA,EAAAA,MAAA,OAAKtC,UAAWL,EAAQiD,UAAU3C,SAAA,EAChCF,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASA,IAAMN,GAAUD,GAAOjD,SACzDiD,EAAQ,wBAA0B,2BAErCnD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAW,CAAC1D,UAAWL,EAAQ+C,YAAYzC,UAC1CF,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAACF,QAASA,IAAMH,GAAa,GAAMrD,UAC5CF,EAAAA,EAAAA,KAAC6D,EAAAA,EAAQ,QAGZV,GACCnD,EAAAA,EAAAA,KAAC8D,EAAAA,SAAQ,CAACC,UAAU/D,EAAAA,EAAAA,KAACgE,EAAAA,gBAAe,IAAI9D,UACtCF,EAAAA,EAAAA,KAAC0C,EACC,CAEAO,MAAOA,EACPC,QAASA,GAFJA,EAAQe,YAKf,KACHX,GACCtD,EAAAA,EAAAA,KAAC8D,EAAAA,SAAQ,CAACC,UAAU/D,EAAAA,EAAAA,KAAA,UAAQE,UAC1BF,EAAAA,EAAAA,KAACwC,EAAO,CAAC0B,YAAaA,IAAMX,GAAa,OAEzC,QAxBQ,IA2BlB,C,6CCrDO,SAASY,EAAc3C,EAAe4C,EAAaC,GACxD,MAAO,EAACC,EAAAA,EAAAA,IAAS,GAAAxE,OAAG0B,IAAI,GAAA1B,OAASsE,IAAM,GAADtE,OAAKuE,IACxCE,QAAOC,KAAOA,IACd3C,KAAK,MACV,C,iFCAA,MAAM9C,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClC2D,OAAQ,CACNA,OAAQ3D,EAAMM,QAAQ,GACtBkC,MAAO,QAGTgD,KAAM,CACJC,WAAY,SACZlF,SAAU,SACVmF,aAAc,gBASH,SAASC,EAAelF,GAQnC,IARoC,MACtCC,EAAK,OACL+B,EAAM,KACNF,GAKD9B,EACC,MAAM,QAAEE,GAAYb,KACd,IAAE8F,EAAG,WAAEC,IAAeC,EAAAA,EAAAA,MACrBC,EAASC,IAAc5B,EAAAA,EAAAA,WAAS,GACjC6B,EAAOC,OAAOD,KAAKvF,EAAM,IAAIyF,OAC7BC,EAAY,IAAIC,IAAIJ,GAGpBK,EAAOJ,OAAOK,QAAQ7F,GAAO8F,KAAIC,IAAe,IAAbC,EAAG/D,GAAI8D,EAC9C,MAAM,GAAEtB,KAAOwB,GAAShE,EACxB,MAAO,CACLwC,GAAIuB,EACJE,WAAYzB,KACTwB,EACJ,IAGH,IAAK,MAAMhE,KAAOjC,EAChB,IAAK,MAAMgG,KAAKR,OAAOD,KAAKtD,GAC1ByD,EAAUS,IAAIH,GAKlB,IAAII,EACAV,EAAUW,IAAI,OAChBX,EAAUY,OAAO,MACjBF,EAAW,CAAC,gBAAiBV,IAE7BU,EAAW,IAAIV,GAEjB,MAAOa,EAAQC,IAAa9C,EAAAA,EAAAA,UAC1B0C,EAASN,KAAIW,IAAKC,EAAAA,EAAAA,kBAAiBd,EAAKE,KAAIa,GAAKA,EAAEF,SAGrD,OAAIf,EAAUkB,KAAOrB,EAAKsB,OAAS,GAE/BjE,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAvG,SAAA,EACEF,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACI,OAAQA,EAAQF,KAAMA,KACjCxB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAgB,CACfC,SACE3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAQ,CACP5B,QAASA,EACT6B,SAAUC,GAAS7B,EAAW6B,EAAMC,OAAO/B,WAG/CgC,OAAOhH,EAAAA,EAAAA,KAACiH,EAAAA,EAAU,CAACxD,QAAQ,QAAOvD,SAAC,oBAErCqC,EAAAA,EAAAA,MAAA,OAAKtC,UAAWL,EAAQgD,OAAQiC,IAAKA,EAAI3E,SAAA,EACvCF,EAAAA,EAAAA,KAACkH,EAAAA,EAAS,CACRhB,OAAQA,EACRC,UAAWA,EACXrB,WAAYA,KAEd9E,EAAAA,EAAAA,KAACmH,EAAAA,GAAQ,CACPC,4BAA0B,EAG1B7B,KAAMA,EACN8B,SAAU,GACVC,UAAW,GACXC,mBAAoB,GACpBC,WAAYjC,EAAKiB,OAAS,GAC1BiB,MAAO,CAAEC,QAAS1C,EAAU2C,EAAAA,EAAc,MAC1CC,UAAW,CACTF,QAAS,CACPG,aAAc,CACZC,sBAAsB,KAI5BC,QAAShC,EAASN,KAAI,CAAC7D,EAAKoG,KAAK,CAC/B9F,MAAON,EACPqG,WAAYC,IACV,MAAMvI,EAAQuI,EAAOvI,MACrB,OACEK,EAAAA,EAAAA,KAAA,OAAKC,UAAWL,EAAQ6E,KAAKvE,UAC3BF,EAAAA,EAAAA,KAACM,EAAAA,cAAa,CAACC,MAAM4H,EAAAA,EAAAA,QAAOxI,MACxB,EAGV8B,MAAOyE,EAAO8B,eAOnB,IACT,C,eCtHA,MAAMjJ,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClCiD,MAAO,CACLC,QAAS,OACTC,SAAU,QAGZgG,cAAe,CACbjJ,UAAW,aACXC,UAAW,IACXE,QAASL,EAAMM,QAAQ,IACvB8I,OAAO,aAADvI,OAAeb,EAAM6B,QAAQK,OAAOmH,UAC1CC,UAAW,aACX/I,SAAU,YAIC,SAASgJ,EAAU9I,GAU9B,IAV+B,KACjC8B,EAAI,MACJ7B,EAAK,YACL4B,EAAW,OACXG,EAAS,IAMVhC,EACC,MAAM,QAAEE,GAAYb,IACpB,OAAqB,IAAjBY,EAAM6G,OACDhG,IAASb,EAAM,KACpBK,EAAAA,EAAAA,KAACyI,EAAU,CAACC,WAAY/I,EAAM,GAAI+B,OAAQ,IAAIA,EAAQF,MAEtDe,EAAAA,EAAAA,MAAA,OAAKtC,UAAWL,EAAQsC,MAAMhC,SAAA,EAC5BF,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACI,OAAQA,EAAQH,YAAaA,EAAaC,KAAMA,KAC3DxB,EAAAA,EAAAA,KAACP,EAAAA,EAAU,CAACE,MAAOA,EAAM,QAGpBA,EAAMgJ,OAAM/G,GAAOpB,IAASoB,MAEnC5B,EAAAA,EAAAA,KAAAyG,EAAAA,SAAA,CAAAvG,SACGP,EAAM8F,KAAI,CAAC7D,EAAKgH,KACf5I,EAAAA,EAAAA,KAACyI,EAAU,CAETC,WAAY9G,EACZF,OAAQ,IAAIA,EAAQF,EAAO,IAAMoH,IAF5BnI,KAAKC,UAAUkB,GAAO,IAAMgH,QASvCrG,EAAAA,EAAAA,MAAA,OAAKtC,UAAWL,EAAQsC,MAAMhC,SAAA,EAC5BF,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACI,OAAQA,EAAQH,YAAaA,EAAaC,KAAMA,IAC1D7B,EAAM8F,KAAI,CAAC7D,EAAKgH,KACf5I,EAAAA,EAAAA,KAAA,OAEEC,UAAWL,EAAQwI,cAAclI,UAEjCF,EAAAA,EAAAA,KAACP,EAAAA,EAAU,CAACE,MAAOiC,KAHdnB,KAAKC,UAAUkB,GAAO,IAAMgH,OAS7C,CCpEA,MAAM7J,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BkD,MAAO,CACLC,QAAS,OACTC,SAAU,UAIC,SAASyG,EAAQnJ,GAQ5B,IAR6B,MAC/BC,EAAK,OACL+B,EAAM,KACNF,GAKD9B,EACC,MAAM,QAAEE,GAAYb,KACd,IAAE+J,EAAG,QAAEC,EAAU,IAAOpJ,EAC9B,IAAIU,EACJ,IACEA,EAAO,IAAI2I,IAAIF,EAAKC,GAAS1I,IAC/B,CAAE,MAAO+F,GACP/F,EAAOyI,CACT,CACA,OACEvG,EAAAA,EAAAA,MAAA,OAAKtC,UAAWL,EAAQsC,MAAMhC,SAAA,EAC5BF,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACI,OAAQA,EAAQF,KAAMA,KACjCxB,EAAAA,EAAAA,KAACP,EAAAA,EAAU,CAACE,MAAOU,MAGzB,CCxBA,MAAM4I,EAAuB,IAGvBC,EAAa,CACjB,eACA,SACA,WACA,cACA,WACA,aACA,WACA,aACA,YAGa,SAAST,EAAWU,GAYjC,MAAM,WACJT,EAAU,KACVU,EAAO,GAAE,gBACTC,EAAkB,GAAE,aACpBC,EAAY,UACZC,EAAY3H,IAAOA,GAAG,SACtB4H,EAAQ,OACR9H,EAAS,IACPyH,EAEEM,EAAQ,IAAInE,IAAI,IAAI8D,KAASF,KAAeG,KAC5C,aAAEK,KAAiB9D,GAAS8C,EAC5BiB,EAAsB,IAAK/D,KAAS8D,GAEpCE,EJtCD,SAA0BC,EAAoBnI,GACnD,OACEoI,KAAKC,MACHC,EAAAA,EAAAA,KAAIH,EAAMpE,KAAIwE,IAAOC,EAAAA,EAAAA,aAAY,IAAIxI,EAAQuI,EAAI,IAAIpI,KAAK,KAAM,QAC9D,EAER,CIgCwBsI,CACpBhF,OAAOK,QAAQmE,GAAqBpF,QAClC7E,IAAA,IAAEiG,EAAGyE,GAAE1K,EAAA,YAAW4C,IAAN8H,IAAoBX,EAAMzD,IAAIL,EAAE,IAE9CjE,GAGF,OACE1B,EAAAA,EAAAA,KAAAyG,EAAAA,SAAA,CAAAvG,SACGiF,OAAOK,QAAQmE,GACbpF,QAAOmB,IAAA,IAAEC,EAAGyE,GAAE1E,EAAA,YAAWpD,IAAN8H,IAAoBX,EAAMzD,IAAIL,EAAE,IACnDF,KAAI4E,IAAmB,IAAjBJ,EAAKtK,GAAM0K,EAChB,MAAM9I,EJjCT,SAAsB+I,GAAmD,IAADC,EAAA,IACzEC,EADkEC,UAAAjE,OAAA,QAAAlE,IAAAmI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAO1E,OALAH,EAAII,SAAQC,IACNnK,IAASgK,KACXA,EAAOA,EAAKG,GACd,IAEqB,kBAATH,EACVA,EACAhK,IAASgK,IAAsC,kBAAlB,QAAXD,EAAOC,SAAI,IAAAD,OAAA,EAAJA,EAAMK,aAC/BJ,EAAKI,iBACLtI,CACN,CIqB8BuI,CAAa,IAAInJ,EAAQuI,GAAMX,GACnD,GAAIwB,MAAMC,QAAQpL,GAGhB,OAAOA,EAAM6G,OAAS,GAAK7G,EAAMgJ,OAAM/G,GAAOpB,IAASoB,MACrD5B,EAAAA,EAAAA,KAAC4E,EAAe,CAEdpD,KAAMyI,EACNvI,OAAQA,EACR/B,MAAOA,GAHFsK,IAMPjK,EAAAA,EAAAA,KAACwI,EAAU,CAEThH,KAAMyI,EACNtK,MAAOA,EACP4B,YAAaA,EACbG,OAAQA,GAJHuI,GAOJ,GAAIzJ,IAASb,GAAQ,CAC1B,MAAM,gBAAE0J,KAAoBzD,GAASuD,EACrC,OAAO6B,EAAAA,EAAAA,eAAcrL,GACnB6J,EAAW,MACTxJ,EAAAA,EAAAA,KAACiL,EAAY,CAEXzJ,KAAMyI,EACNvI,OAAQA,EACR/B,MAAOA,GAHFsK,IAOTiB,EAAAA,EAAAA,eAACzC,EAAU,IACL7C,EACJqE,IAAKA,EACLvB,WAAY/I,EACZ2J,aAAcA,EACd5H,OAAQ,IAAIA,EAAQuI,IAG1B,CACE,OACEjK,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CAEVb,KAAMyI,EACNtK,MAAO4J,EAAU5J,EAAOsK,GACxB1I,YAAaA,EACbG,OAAQA,EACRD,MAAOqI,KAAKqB,IAAIvB,EAAeX,IAL1BgB,EAQX,KAIV,CCtFA,MAAMmB,EAAc,CAClB,OACA,QACA,MACA,SACA,UACA,cACA,QAGIrM,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,IAAAoM,EAAA,MAAK,CACvCC,sBAAuB,CACrBnJ,QAAS,QACT7C,QAASL,EAAMM,QAAQ,IAEzBgM,WAAY,CACVC,OAA6B,QAAtBH,EAAApM,EAAM6B,QAAQ2K,gBAAQ,IAAAJ,OAAA,EAAtBA,EAAwBK,eAAgB,QAElD,IAEM,SAASC,EAAQjM,GAIL,IAJM,SACvBQ,EAAQ,MACR6B,EAAK,gBACL6J,GAAkB,GACJlM,EACd,MAAM,QAAEE,GAAYb,KACb8M,EAAUC,IAAezI,EAAAA,EAAAA,UAASuI,GACzC,OACErJ,EAAAA,EAAAA,MAACwJ,EAAAA,EAAS,CACRF,SAAUA,EACVhF,SAAUA,IAAMiF,GAAYE,IAAMA,IAClCC,gBAAiB,CAAEC,eAAe,EAAMC,QAAS,KAAMjM,SAAA,EAEvDF,EAAAA,EAAAA,KAACoM,EAAAA,EAAgB,CACfb,YAAYvL,EAAAA,EAAAA,KAACqM,EAAAA,EAAU,CAACpM,UAAWL,EAAQ2L,aAAerL,UAE1DqC,EAAAA,EAAAA,MAAC0E,EAAAA,EAAU,CAACxD,QAAQ,SAAQvD,SAAA,CAAC,IAAE6B,QAEjC/B,EAAAA,EAAAA,KAACsM,EAAAA,EAAgB,CAACrM,UAAWL,EAAQ0L,sBAAsBpL,SACxDA,MAIT,CAEA,SAASqM,EAASpD,GAChB,MAAM,QAAEjG,GAAYiG,EACdqD,EAAStJ,EAAQsJ,OACjBC,EAAoC,CACxC,KAAM,IACN,EAAK,GACL,EAAK,KAEDC,EAAMD,EAAUD,GAAO,IAAA1M,OAAO2M,EAAUD,GAAO,KAAM,GAErDG,GAAMC,EAAAA,EAAAA,mBAAkB1J,GAC9B,OAAOlD,EAAAA,EAAAA,KAAAyG,EAAAA,SAAA,CAAAvG,SAAA,GAAAJ,OAAM6M,EAAG,KAAA7M,OAAI4M,IACtB,CAEA,SAASG,EAAY1D,GACnB,MAAM,QAAEjG,GAAYiG,EACd2D,EAAM5J,EAgBN6J,EAAgB,IAAKD,KAAQA,EAAIpD,eACjC,MAAEsD,EAAK,IAAEC,GAAQF,EAEjBG,EAAwC,IACzCH,EACHvG,QL7FqB2G,EK6FJF,EAAMD,EL5FlBG,EAAEC,eAAe,WADnB,IAAkBD,EKsGvB,OACE5K,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAvG,SAAA,EACEF,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CACVb,KAAK,WACL7B,OAAOK,EAAAA,EAAAA,KAACuM,EAAQ,IAAKpD,EAAOjG,QAAS6J,MAEtC5H,OAAOK,QAZgB,CAC1BjE,YAAa,cACbC,KAAM,OACNgF,OAAQ,SACRnC,KAAM,SASDoB,KAAIC,IAAA,IAAEuE,EAAKzI,GAAKkE,EAAA,MAAK,CAAClE,EAAM0L,EAAiBjD,GAAK,IAClD1F,QAAO8F,IAAA,IAAE,CAAE1K,GAAM0K,EAAA,OAAc,MAAT1K,CAAa,IACnC8F,KAAI4H,IAAA,IAAE7L,EAAM7B,GAAM0N,EAAA,OACjBrN,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CAAYb,KAAMA,EAAM7B,MAAOA,GAAzB6B,EAAkC,MAI9D,CAEO,MAAM8L,EAAmBnE,IAC9B,MAAM,MAAEpH,EAAQ,gBAAmBoH,EACnC,OACEnJ,EAAAA,EAAAA,KAAC2L,EAAQ,IAAKxC,EAAOpH,MAAOA,EAAM7B,UAChCF,EAAAA,EAAAA,KAAC6M,EAAW,IAAK1D,KACR,EAIFoE,EAAkBpE,IAC7B,MAAM,QAAEjG,GAAYiG,EACpB,OACEnJ,EAAAA,EAAAA,KAAC2L,EAAQ,IAAKxC,EAAOpH,MAAM,aAAY7B,UACrCF,EAAAA,EAAAA,KAACyI,EAAU,IAAKU,EAAOT,WAAYxF,KAC1B,EAgBR,SAASsK,EAAerE,GAQ7B,MAAM,KAAEC,EAAO,GAAE,MAAEnG,EAAK,QAAEC,EAAO,MAAEuK,EAAQ,GAAMtE,GAC3C,KAAEuE,EAAI,KAAElM,EAAO,GAAE,GAAE4C,EAAK,GAAE,KAAEC,EAAO,GAAE,YAAEsJ,EAAW,SAAE1J,GAAaf,EACjE0K,GAAKC,EAAAA,EAAAA,QAAO5K,GAAO6K,cACnBC,GAAUC,EAAAA,EAAAA,YAAW/K,GAErBgL,EAAaL,EAAGM,uBAAuB,yBAA0B,KAAM,CAC3EH,UACA7K,UACAD,UAEF,OACEV,EAAAA,EAAAA,MAACoJ,EAAQ,CAAC5J,MAAOoC,EAAc3C,EAAM4C,EAAIC,GAAMnE,SAAA,EAC7CF,EAAAA,EAAAA,KAACiH,EAAAA,EAAU,CAAA/G,SAAC,kBACZF,EAAAA,EAAAA,KAAC6M,EAAW,IAAK1D,IAChBuE,GACCnL,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAvG,SAAA,EACEF,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KACRnO,EAAAA,EAAAA,KAACiH,EAAAA,EAAU,CAAA/G,SAAC,kBACZF,EAAAA,EAAAA,KAAC6M,EAAW,IACN1D,EACJjG,QAAS,IAAKwK,EAAMzJ,SAAUA,EAAW,cAG3C,MAEJjE,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KACRnO,EAAAA,EAAAA,KAACiH,EAAAA,EAAU,CAAA/G,SAAC,gBACZF,EAAAA,EAAAA,KAACyI,EAAU,CACTC,WAAYxF,KACRiG,EACJC,KAAMA,EACNC,gBAAiB+B,KAGnBpL,EAAAA,EAAAA,KAACoO,EAAAA,GAAa,CAACC,kBAAmBjI,IAAKpG,EAAAA,EAAAA,KAACsO,EAAAA,aAAY,CAACC,MAAOnI,EAAEmI,QAAUrO,UACtEF,EAAAA,EAAAA,KAAC0C,EAAsB,IAAKyG,MAG7B8E,GACC1L,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAvG,SAAA,EACEF,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KACRnO,EAAAA,EAAAA,KAAC2L,EAAQ,CAAC5J,MAAOkM,EAAWzM,KAAKtB,UAC/BF,EAAAA,EAAAA,KAACiO,EAAWO,UAAS,IAAKrF,SAG5B,KAEQ,OAAXwE,QAAW,IAAXA,GAAAA,EAAanH,QACZxG,EAAAA,EAAAA,KAAC2L,EAAQ,CAAC5J,MAAM,cAAc6J,gBAAiB6B,EAAQ,EAAEvN,SACtDyN,EAAYlI,KAAI,CAACgJ,EAAKC,KACrB1O,EAAAA,EAAAA,KAACwN,EAAc,CAEbtK,QAAS,IAAKuL,EAAKxK,SAAS,GAADnE,OAAKmE,EAAQ,KAAAnE,OAAI4O,IAC5CzL,MAAOA,EACPwK,MAAOA,EAAQ,GAHVhN,KAAKC,UAAU+N,QAOxB,OAGV,CAEA,MAoBA,IApB0BE,EAAAA,EAAAA,WAAS,SAAAC,GAAsC,IAA5B,MAAE3L,GAAuB2L,EACpE,MAAM,MAAEL,EAAK,YAAEM,GAAgB5L,EAE/B,GAAIsL,EACF,OAAOvO,EAAAA,EAAAA,KAACsO,EAAAA,aAAY,CAACC,MAAOA,IAE9B,IAAKM,EACH,OAAO,KAOT,MAAMC,EAAIrO,KAAKsO,MACbtO,KAAKC,UAAUmO,GAAa,CAACG,EAAG5E,SAAa9H,IAAN8H,EAAkB,KAAOA,KAElE,OL9PsB0C,EK8PPgC,EL7PoB,IAA5B3J,OAAOD,KAAK4H,GAAKtG,OK6PJ,MAAOxG,EAAAA,EAAAA,KAACwN,EAAc,CAACvK,MAAOA,EAAOC,QAAS4L,IL9P7D,IAAiBhC,CK+PxB,G,iBC3OO,SAASmC,EAAOC,EAAkBC,GACvC,OAAOD,EAASzJ,KAAIgJ,GAAOU,EAASC,MAAMX,EAAIzB,MAAOyB,EAAIxB,OAAMpL,KAAK,GACtE,CAGA,SAASwN,EAAUC,GACjB,MAAM,GAANxP,OAAUwP,EAAKtC,MAAK,KAAAlN,OAAIwP,EAAKrC,IAC/B,CAGO,SAASsC,EAAOC,GACrB,OAAOA,EAAKjL,QACV,CAACkL,EAAMC,EAAKC,KAASD,GAAOL,EAAUI,KAAUJ,EAAUM,EAAID,EAAM,KAExE,CAEO,SAASE,EAAQJ,EAAcK,GACpC,OAAOL,EACJ/J,KAAIgJ,IAAG,IACHA,EACHzB,MAAO6C,EAASpB,EAAIxB,IACpBA,IAAK4C,EAASpB,EAAIzB,UAEnB5H,MAAK,CAAC0K,EAAGC,IAAMD,EAAE9C,MAAQ+C,EAAE/C,OAChC,CAEO,SAASgD,EAAcC,EAAaC,GAEzC,IAAKD,EAAIzJ,OACP,MAAO,GAGT,MAAM2J,EAAWF,EAAIG,GAAG,GAElBC,EAAUJ,EAAIG,IAAI,GAClBE,EAAcJ,EAAMK,WACxBC,GAAQA,EAAKvD,KAAOkD,EAASnD,OAASwD,EAAKxD,OAASmD,EAASnD,QAEzDyD,EAAaP,EAAMK,WACvBC,GAAQA,EAAKvD,KAAOoD,EAAQpD,KAAOuD,EAAKxD,OAASqD,EAAQpD,MAErDyD,EAAcR,EAAMO,GACpBE,EAAeT,EAAMI,GAY3B,MAAO,IAVU,IACZJ,EAAMd,MAAM,EAAGkB,GAClB,CAAEtD,MAAO2D,EAAa3D,MAAOC,IAAKkD,EAASnD,QAC3CvH,KAAIkF,IAAG,IAAUA,EAAKtG,KAAM,wBAEZ,CAChB,CAAE2I,MAAOqD,EAAQpD,IAAKA,IAAKyD,EAAYzD,QACpCiD,EAAMd,MAAMqB,EAAa,IAC5BhL,KAAIkF,IAAG,IAAUA,EAAKtG,KAAM,sBAGhC,CAGO,SAASuM,EAAeX,EAAaY,GAC1C,IAAKZ,EAAIzJ,OACP,MAAO,GAGT,MAAM2J,EAAWF,EAAIG,GAAG,GAElBC,EAAUJ,EAAIG,IAAI,GAWxB,MAAO,IATU,CAAC,CAAEpD,MAAO6D,EAAW7D,MAAOC,IAAKkD,EAASnD,QAASvH,KAClEkF,IAAG,IAAUA,EAAKtG,KAAM,wBAGR,CAAC,CAAE2I,MAAOqD,EAAQpD,IAAKA,IAAK4D,EAAW5D,MAAOxH,KAAIkF,IAAG,IAClEA,EACHtG,KAAM,sBAIV,CAEO,SAASC,EAASwM,GACvB,OAAOA,EAAKtK,OAAS,GAAE,GAAA1G,OAAMgR,EAAK1B,MAAM,EAAG,IAAG,OAAQ0B,CACxD,C,iJCnGA,MAAM/R,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAK,CAClC8R,UAAW,CACTlQ,WAAY5B,EAAM6B,QAAQK,OAAOC,mBACjC4P,OAAQ,GACRC,SAAU,WACVzR,SAAU,UAEZ0R,KAAM,CACJD,SAAU,WACVD,OAAQ,OACRG,cAAe,OACftQ,WAAY5B,EAAM6B,QAAQK,OAAOiQ,SACjC3P,MAAO,GAET4P,WAAY,CACVJ,SAAU,WACVD,OAAQ,OACRvP,MAAO,OAIX,SAAS6P,EAAI5R,GAgBT,IAhBU,KACZ6R,EAAI,WACJzM,EAAU,IACV4J,EAAG,OACH8C,EAAM,YACNC,GAWD/R,EACC,MAAM,QAAEE,GAAYb,IACd2S,GAAiBC,EAAAA,EAAAA,cACrB,CAACC,EAA2BC,IAC1BL,EAAOI,EAAmBC,EAAenD,IAC3C,CAACA,EAAK8C,IAIR,OACEjP,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAvG,SAAA,EACEF,EAAAA,EAAAA,KAAC8R,EAAAA,EAAY,CACXN,OAAQE,EACRD,YAAaA,EACbM,UAAQ,EACR9R,UAAWL,EAAQyR,WACnBpP,MAAO,CAAEsP,KAAMA,EAAOzM,EAAa,QAErC9E,EAAAA,EAAAA,KAAA,OAAKiC,MAAO,CAAEsP,KAAMA,EAAOzM,GAAc7E,UAAWL,EAAQsR,SAGlE,CAEe,SAAShK,EAASxB,GAU7B,IAV8B,OAChCQ,EAAM,UACNC,EAAS,SACT6L,EAAQ,WACRlN,EAAa,GAMdY,EACC,MAAM,QAAE9F,GAAYb,IACdkT,EAAU,IACTC,EAASC,IAAc9O,EAAAA,EAAAA,YAC9B,IAAI+O,EAAOJ,EAAW,GAAK,EAC3B,IAAK,IAAIpJ,EAAI,EAAGA,EAAI1C,EAAOM,OAAQoC,IAAK,CACtC,MAAMnH,EAAQyE,EAAO0C,GACrBqJ,EAAQrJ,GAAKnH,EAAQ2Q,EACrBA,GAAQ3Q,CACV,CAEA,OACEzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWL,EAAQmR,UAAU7Q,SAC/B+R,EAAQxM,KAAI,CAAC8L,EAAM3I,KAClB5I,EAAAA,EAAAA,KAACsR,EAAI,CAEHG,YAAaA,KACXU,EAAW,IAAIjM,GAAQ,EAEzBqL,KAAM3I,IAAMqJ,EAAQzL,OAAS,EAAI+K,EAAO,EAAIA,EAC5CC,OAAQA,CAACxC,EAAW6C,EAAuBnD,KACzC,MAAM2D,EAAY,IAAInM,GAEtBmM,EAAU3D,GAAO5E,KAAKE,IAAIkI,EAASxD,GAAOmD,EAAe,IACzD1L,EAAUkM,EAAU,EAEtB3D,IAAK9F,EACL9D,WAAYA,GAZP8D,MAiBf,C,kDC1GO,SAAS7D,IACd,MAAMF,GAAMyN,EAAAA,EAAAA,QAAuB,OAC5BxN,EAAYyN,IAAiBlP,EAAAA,EAAAA,UAAS,GAY7C,OAXAmP,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAY,KAAO,IAADC,EAC9B,MAAMhI,EAAiB,QAAdgI,EAAG9N,EAAI+N,eAAO,IAAAD,OAAA,EAAXA,EAAaE,cAAc,gCACnClI,GACF4H,EAAc5H,EAAI7F,WACpB,GACC,KACH,MAAO,KACLgO,cAAcL,EAAM,CACrB,GACA,IACI,CAAE5N,MAAKC,aAChB,C","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/index.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/util.ts","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/UriField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/index.tsx","../../../packages/core/BaseFeatureWidget/util.tsx","../../../packages/core/ui/ResizeBar.tsx","../../../packages/core/ui/useResizeBar.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport isObject from 'is-object'\nimport { Link } from '@mui/material'\n\n// locals\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n","import React, { lazy, useState, Suspense } from 'react'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { BaseProps } from './../types'\nimport { LoadingEllipses } from '../../ui'\n\n// icons\nimport HelpIcon from '@mui/icons-material/Help'\n\n// lazies\nconst HelpDlg = lazy(() => import('./SequenceHelpDialog'))\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeaturePanel({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n\n  return !model ? null : (\n    <div className={classes.container}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n            key={feature.uniqueId as string}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n      {helpShown ? (\n        <Suspense fallback={<div />}>\n          <HelpDlg handleClose={() => setHelpShown(false)} />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","import isObject from 'is-object'\nimport { max, measureText } from '../../util'\nimport { ellipses } from '../util'\n\nexport function isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport function generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport function generateMaxWidth(array: unknown[][], prefix: string[]) {\n  return (\n    Math.ceil(\n      max(array.map(key => measureText([...prefix, key[0]].join('.'), 12))),\n    ) + 10\n  )\n}\n\nexport function toLocale(n: number) {\n  return n.toLocaleString('en-US')\n}\n\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nexport function accessNested(arr: string[], obj: Record<string, unknown> = {}) {\n  let obj2: unknown = obj\n  arr.forEach(elt => {\n    if (isObject(obj2)) {\n      obj2 = obj2[elt]\n    }\n  })\n  return typeof obj2 === 'string'\n    ? obj2\n    : isObject(obj2) && typeof obj2?.Description === 'string'\n    ? obj2.Description\n    : undefined\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\n\n// locals\nimport { measureGridWidth, getStr } from '../../util'\nimport ResizeBar from '../../ui/ResizeBar'\nimport FieldName from './FieldName'\nimport { useResizeBar } from '../../ui/useResizeBar'\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}))\n\ninterface Entry {\n  id: string\n  [key: string]: string\n}\n\nexport default function DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, unknown>[]\n}) {\n  const { classes } = useStyles()\n  const { ref, scrollLeft } = useResizeBar()\n  const [checked, setChecked] = useState(false)\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n\n  // avoids key 'id' from being used in row data\n  const rows = Object.entries(value).map(([k, val]) => {\n    const { id, ...rest } = val\n    return {\n      id: k, // used by material UI\n      identifier: id, // renamed from id to identifier\n      ...rest,\n    } as Entry\n  })\n\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  // avoids key 'id' from being used in column names, and tries\n  // to make it at the start of the colNames array\n  let colNames: string[]\n  if (unionKeys.has('id')) {\n    unionKeys.delete('id')\n    colNames = ['identifier', ...unionKeys]\n  } else {\n    colNames = [...unionKeys]\n  }\n  const [widths, setWidths] = useState(\n    colNames.map(e => measureGridWidth(rows.map(r => r[e]))),\n  )\n\n  if (unionKeys.size < keys.length + 5) {\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={event => setChecked(event.target.checked)}\n            />\n          }\n          label={<Typography variant=\"body2\">Show options</Typography>}\n        />\n        <div className={classes.margin} ref={ref}>\n          <ResizeBar\n            widths={widths}\n            setWidths={setWidths}\n            scrollLeft={scrollLeft}\n          />\n          <DataGrid\n            disableRowSelectionOnClick\n            // @ts-expect-error the rows gets confused by the renderCell of the\n            // columns below\n            rows={rows}\n            rowCount={25}\n            rowHeight={25}\n            columnHeaderHeight={35}\n            hideFooter={rows.length < 25}\n            slots={{ toolbar: checked ? GridToolbar : null }}\n            slotProps={{\n              toolbar: {\n                printOptions: {\n                  disableToolbarButton: true,\n                },\n              },\n            }}\n            columns={colNames.map((val, index) => ({\n              field: val,\n              renderCell: params => {\n                const value = params.value as string\n                return (\n                  <div className={classes.cell}>\n                    <SanitizedHTML html={getStr(value)} />\n                  </div>\n                )\n              },\n              width: widths[index],\n            }))}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport isObject from 'is-object'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport Attributes from './Attributes'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()(theme => ({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    border: `1px solid ${theme.palette.action.selected}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport default function ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val as Record<string, unknown>}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport FieldName from './FieldName'\nimport { makeStyles } from 'tss-react/mui'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function UriField({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n","import React from 'react'\nimport isObject from 'is-object'\n\n// locals\nimport { accessNested, generateMaxWidth } from './util'\nimport { isUriLocation } from '../../util'\nimport DataGridDetails from './DataGridDetails'\nimport ArrayValue from './ArrayValue'\nimport UriAttribute from './UriField'\nimport SimpleField from './SimpleField'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\nexport default function Attributes(props: {\n  attributes: {\n    [key: string]: unknown\n    __jbrowsefmt?: Record<string, unknown>\n  }\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...rest}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleField\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// icons\nimport ExpandMore from '@mui/icons-material/ExpandMore'\n\n// locals\nimport {\n  getEnv,\n  getSession,\n  assembleLocString,\n  ParsedLocString,\n} from '../../util'\nimport { ErrorMessage } from '../../ui'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from '../types'\nimport { SimpleFeatureSerialized } from '../../util'\nimport SimpleField from './SimpleField'\nimport Attributes from './Attributes'\nimport { generateTitle, isEmpty, toLocale } from './util'\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nfunction Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  // @ts-expect-error\n  const loc = assembleLocString(feature as ParsedLocString)\n  return <>{`${loc} ${str}`}</>\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  const { title = 'Primary data' } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {mate ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{ ...mate, uniqueId: uniqueId + '-mate' }}\n          />\n        </>\n      ) : null}\n\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{ ...sub, uniqueId: `${uniqueId}_${idx}` }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetail = observer(function ({ model }: BaseInputProps) {\n  const { error, featureData } = model\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  }\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const g = JSON.parse(\n    JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)),\n  )\n  return isEmpty(g) ? null : <FeatureDetails model={model} feature={g} />\n})\n\nexport default BaseFeatureDetail\n\nexport { default as Attributes } from './Attributes'\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  // checking length ensures the .at below are valid\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n\n  const lastCds = cds.at(-1)!\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n\n  const lastCds = cds.at(-1)!\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n","import React, { useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.action.disabled,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n  onMouseDown,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onMouseDown: (event: React.MouseEvent) => void\n  onDrag: (\n    lastFrameDistance: number,\n    totalDistance: number,\n    idx: number,\n  ) => void\n}) {\n  const { classes } = useStyles()\n  const onDragCallback = useCallback(\n    (lastFrameDistance: number, totalDistance: number) =>\n      onDrag(lastFrameDistance, totalDistance, idx),\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={onDragCallback}\n        onMouseDown={onMouseDown}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  const [initial, setInitial] = useState<number[]>()\n  let init = checkbox ? 52 : 0\n  for (let i = 0; i < widths.length; i++) {\n    const width = widths[i]\n    offsets[i] = width + init\n    init += width\n  }\n\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          onMouseDown={() => {\n            setInitial([...widths])\n          }}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={(_: number, totalDistance: number, idx: number) => {\n            const newWidths = [...widths]\n            // mui doesn't allow columns smaller than 50\n            newWidths[idx] = Math.max(initial![idx] - totalDistance, 50)\n            setWidths(newWidths)\n          }}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n"],"names":["useStyles","makeStyles","theme","fieldValue","wordBreak","maxHeight","fontSize","padding","spacing","overflow","BasicValue","_ref","value","classes","isLink","concat","match","_jsx","className","children","React","Link","href","SanitizedHTML","html","isObject","JSON","stringify","String","fieldDescription","background","palette","mode","fieldName","minWidth","borderBottom","action","disabledBackground","marginRight","FieldName","description","name","width","prefix","cx","val","join","Tooltip","title","placement","style","field","display","flexWrap","SimpleField","undefined","_jsxs","HelpDlg","lazy","SequenceFeatureDetails","formControl","margin","container","marginTop","marginBottom","SequenceFeaturePanel","model","feature","shown","setShown","useState","helpShown","setHelpShown","Button","variant","onClick","FormControl","IconButton","HelpIcon","Suspense","fallback","LoadingEllipses","uniqueId","handleClose","generateTitle","id","type","ellipses","filter","f","cell","whiteSpace","textOverflow","DataGridDetails","ref","scrollLeft","useResizeBar","checked","setChecked","keys","Object","sort","unionKeys","Set","rows","entries","map","_ref2","k","rest","identifier","add","colNames","has","delete","widths","setWidths","e","measureGridWidth","r","size","length","_Fragment","FormControlLabel","control","Checkbox","onChange","event","target","label","Typography","ResizeBar","DataGrid","disableRowSelectionOnClick","rowCount","rowHeight","columnHeaderHeight","hideFooter","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","columns","index","renderCell","params","getStr","fieldSubvalue","border","selected","boxSizing","ArrayValue","Attributes","attributes","every","i","UriField","uri","baseUri","URL","MAX_FIELD_NAME_WIDTH","globalOmit","props","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","array","Math","ceil","max","key","measureText","generateMaxWidth","v","_ref3","arr","_obj","obj2","arguments","forEach","elt","Description","accessNested","Array","isArray","isUriLocation","UriAttribute","_createElement","min","coreDetails","_theme$palette$tertia","expansionPanelDetails","expandIcon","color","tertiary","contrastText","BaseCard","defaultExpanded","expanded","setExpanded","Accordion","s","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","AccordionDetails","Position","strand","strandMap","str","loc","assembleLocString","CoreDetails","obj","formattedFeat","start","end","displayedDetails","n","toLocaleString","_ref4","BaseCoreDetails","BaseAttributes","FeatureDetails","depth","mate","subfeatures","pm","getEnv","pluginManager","session","getSession","ExtraPanel","evaluateExtensionPoint","Divider","ErrorBoundary","FallbackComponent","ErrorMessage","error","Component","sub","idx","observer","_ref5","featureData","g","parse","_","stitch","subfeats","sequence","slice","getItemId","feat","dedupe","list","item","pos","ary","revlist","seqlen","a","b","calculateUTRs","cds","exons","firstCds","at","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","calculateUTRs2","parentFeat","slug","resizeBar","height","position","tick","pointerEvents","disabled","hiddenTick","Tick","left","onDrag","onMouseDown","onDragCallback","useCallback","lastFrameDistance","totalDistance","ResizeHandle","vertical","checkbox","offsets","initial","setInitial","init","newWidths","useRef","setScrollLeft","useEffect","timer","setInterval","_ref$current","current","querySelector","clearInterval"],"sourceRoot":""}