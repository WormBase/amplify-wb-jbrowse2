{"version":3,"file":"static/js/3795.0ffb51d5.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/VerticalGuide.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Rubberband.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeRenderArea.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx"],"sourcesContent":["import React from 'react'\nimport { Tooltip, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { stringify } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()({\n  guide: {\n    pointerEvents: 'none',\n    height: '100%',\n    width: 1,\n    position: 'absolute',\n    zIndex: 10,\n  },\n  sm: {\n    fontSize: 10,\n  },\n})\n\nconst VerticalGuide = observer(function ({\n  model,\n  coordX,\n}: {\n  model: LCV\n  coordX: number\n}) {\n  const { classes } = useStyles()\n  return (\n    <Tooltip\n      open\n      placement=\"top\"\n      title={model.views\n        .map(view => view.pxToBp(coordX))\n        .map((elt, idx) => (\n          <Typography\n            className={classes.sm}\n            key={[JSON.stringify(elt), idx].join('-')}\n          >\n            {stringify(elt, true)}\n          </Typography>\n        ))}\n      arrow\n    >\n      <div\n        className={classes.guide}\n        style={{\n          left: coordX,\n          background: 'red',\n        }}\n      />\n    </Tooltip>\n  )\n})\n\nexport default VerticalGuide\n","import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport VerticalGuide from './VerticalGuide'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary, primary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.main, 0.7)\n    : alpha(primary.main, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n  }\n})\n\nconst LinearComparativeRubberband = observer(function Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberbandRef = useRef(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and dragging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          ref={controlsRef}\n          className={classes.rubberbandControl}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberbandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map((l, idx) => (\n              <Typography key={[JSON.stringify(l), idx, 'left'].join('-')}>\n                {stringify(l, true)}\n              </Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map((l, idx) => (\n              <Typography key={[JSON.stringify(l), idx, 'right'].join('-')}>\n                {stringify(l, true)}\n              </Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberbandRef}\n        className={classes.rubberband}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberbandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>\n              {`${n.toLocaleString('en-US')}bp`}\n            </Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        className={classes.rubberbandControl}\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n})\n\nexport default LinearComparativeRubberband\n","import React, { useState } from 'react'\nimport { Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(function ({\n  model,\n}: {\n  model: LinearComparativeViewModel\n}) {\n  return (\n    <CascadingMenuButton\n      menuItems={[\n        {\n          label: 'Synteny track selector',\n          onClick: () => model.activateTrackSelector(),\n        },\n        ...model.views.map((view, idx) => ({\n          label: `View ${idx + 1} track selector`,\n          onClick: () => view.activateTrackSelector(),\n        })),\n      ]}\n    >\n      <TrackSelectorIcon />\n    </CascadingMenuButton>\n  )\n})\n\nconst Header = observer(function ({\n  model,\n}: {\n  model: LinearComparativeViewModel\n}) {\n  const { classes } = useStyles()\n  const { views } = model\n  const [showSearchBoxes, setShowSearchBoxes] = useState(false)\n  return (\n    <div className={classes.headerBar}>\n      <TrackSelector model={model} />\n      <CascadingMenuButton\n        className={classes.iconButton}\n        menuItems={[\n          ...model.headerMenuItems(),\n          {\n            label: 'Show search boxes?',\n            checked: showSearchBoxes,\n            onClick: () => setShowSearchBoxes(!showSearchBoxes),\n            type: 'checkbox',\n          },\n        ]}\n      >\n        <MoreVertIcon />\n      </CascadingMenuButton>\n\n      {showSearchBoxes ? (\n        <div>\n          {views.map(view => (\n            <div key={view.id} className={classes.searchBox}>\n              <div className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                className={classes.bp}\n              >\n                {view.assemblyNames.join(',')}{' '}\n                {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n              </Typography>\n            </div>\n          ))}\n        </div>\n      ) : null}\n\n      <div className={classes.spacer} />\n    </div>\n  )\n})\n\nexport default Header\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { getConf } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  container: {\n    display: 'grid',\n  },\n\n  grid: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n  },\n})\n\nconst LinearComparativeRenderArea = observer(function ({\n  model,\n}: {\n  model: LinearComparativeViewModel\n}) {\n  const { classes } = useStyles()\n  const { views, levels } = model\n  const { pluginManager } = getEnv(model)\n  const { ReactComponent } = pluginManager.getViewType(views[0].type)\n  const RenderList = [\n    <ReactComponent key={views[0].id} model={views[0]} />,\n  ] as React.ReactNode[]\n  for (let i = 1; i < views.length; i++) {\n    RenderList.push(\n      <React.Fragment key={views[i].id}>\n        <div className={classes.grid}>\n          <Overlays model={model} level={i - 1} />\n        </div>\n        <ResizeHandle\n          onDrag={n => levels[i - 1].setHeight(levels[i - 1].height + n)}\n          className={classes.resizeHandle}\n        />\n        <ReactComponent model={views[i]} />\n      </React.Fragment>,\n    )\n  }\n  return <div className={classes.container}>{RenderList}</div>\n})\n\nconst Overlays = observer(function ({\n  model,\n  level,\n}: {\n  model: LinearComparativeViewModel\n  level: number\n}) {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.levels[level]?.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: display.height,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\nexport default LinearComparativeRenderArea\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport Rubberband from './Rubberband'\nimport Header from './Header'\nimport LinearComparativeRenderArea from './LinearComparativeRenderArea'\n\nconst useStyles = makeStyles()(theme => ({\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n\n  rubberbandDiv: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    height: 15,\n    '&:hover': {\n      background: theme.palette.action.selected,\n    },\n  },\n}))\n\nconst LinearComparativeView = observer(function ({\n  model,\n}: {\n  model: LinearComparativeViewModel\n}) {\n  const { classes } = useStyles()\n\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n      <LinearComparativeRenderArea model={model} />\n    </div>\n  )\n})\n\nexport default LinearComparativeView\n","import React, { lazy } from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\n\nconst ImportForm = lazy(() => import('./ImportForm'))\n\ntype LSV = LinearSyntenyViewModel\n\nconst LinearSyntenyView = observer(function ({ model }: { model: LSV }) {\n  return !model.initialized ? (\n    <ImportForm model={model} />\n  ) : (\n    <LinearComparativeViewComponent model={model} />\n  )\n})\n\nexport default LinearSyntenyView\n"],"names":["useStyles","makeStyles","guide","pointerEvents","height","width","position","zIndex","sm","fontSize","observer","model","coordX","classes","React","Tooltip","open","placement","title","views","map","view","pxToBp","elt","idx","Typography","className","key","JSON","stringify","join","arrow","style","left","background","theme","tertiary","primary","palette","rubberband","alpha","main","textAlign","overflow","rubberbandControl","cursor","minHeight","rubberbandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","ControlComponent","startX","setStartX","useState","currentX","setCurrentX","anchorPosition","setAnchorPosition","guideX","setGuideX","controlsRef","useRef","rubberbandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","VerticalGuide","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","iconButton","margin","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","CascadingMenuButton","label","onClick","activateTrackSelector","TrackSelectorIcon","showSearchBoxes","setShowSearchBoxes","headerMenuItems","checked","type","MoreVertIcon","id","SearchBox","showHelp","assemblyNames","round","coarseTotalBp","container","grid","overlay","resizeHandle","LinearComparativeRenderArea","levels","pluginManager","getEnv","ReactComponent","getViewType","RenderList","length","push","Overlays","level","ResizeHandle","onDrag","setHeight","tracks","track","displays","RenderingComponent","trackId","getConf","rubberbandContainer","rubberbandDiv","action","disabledBackground","selected","Header","Rubberband","ImportForm","lazy","initialized","LinearComparativeViewComponent"],"sourceRoot":""}