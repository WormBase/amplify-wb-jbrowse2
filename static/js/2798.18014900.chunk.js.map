{"version":3,"file":"static/js/2798.18014900.chunk.js","mappings":"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","sources":["../../../plugins/config/src/FromConfigAdapter/FromConfigAdapter.ts","../../../plugins/config/src/FromConfigSequenceAdapter/FromConfigSequenceAdapter.ts"],"sourcesContent":["import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport SimpleFeature, {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\n/**\n * Adapter that just returns the features defined in its `features` configuration\n * key, like:\n *   `\"features\": [ { \"refName\": \"ctgA\", \"start\":1, \"end\":20 }, ... ]`\n */\n\nexport default class FromConfigAdapter extends BaseFeatureDataAdapter {\n  protected features: Map<string, Feature[]>\n\n  constructor(\n    conf: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(conf, getSubAdapter, pluginManager)\n    const feats = readConfObject(conf, 'features') as SimpleFeatureSerialized[]\n    this.features = FromConfigAdapter.makeFeatures(feats || [])\n  }\n\n  static makeFeatures(fdata: SimpleFeatureSerialized[]) {\n    const features = new Map<string, Feature[]>()\n    for (const entry of fdata) {\n      if (entry) {\n        const f = this.makeFeature(entry)\n        const refName = f.get('refName') as string\n        let bucket = features.get(refName)\n        if (!bucket) {\n          bucket = []\n          features.set(refName, bucket)\n        }\n\n        bucket.push(f)\n      }\n    }\n\n    // sort the features on each reference sequence by start coordinate\n    for (const refFeatures of features.values()) {\n      refFeatures.sort((a, b) => a.get('start') - b.get('start'))\n    }\n\n    return features\n  }\n\n  static makeFeature(data: SimpleFeatureSerialized) {\n    return new SimpleFeature(data)\n  }\n\n  async getRefNames() {\n    return [...this.features.keys()]\n  }\n\n  async getRefNameAliases() {\n    return [...this.features.values()].map(featureArray => ({\n      refName: featureArray[0].get('refName'),\n      aliases: featureArray[0].get('aliases'),\n    }))\n  }\n\n  getFeatures(region: NoAssemblyRegion) {\n    const { refName, start, end } = region\n\n    return ObservableCreate<Feature>(async observer => {\n      const features = this.features.get(refName) || []\n      for (const f of features) {\n        if (f.get('end') > start && f.get('start') < end) {\n          observer.next(f)\n        }\n      }\n      observer.complete()\n    })\n  }\n\n  freeResources(/* { region } */): void {}\n}\n","import SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { toArray } from 'rxjs/operators'\nimport { RegionsAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\n// locals\nimport FromConfigAdapter from '../FromConfigAdapter/FromConfigAdapter'\nimport { firstValueFrom } from 'rxjs'\n\nexport default class FromConfigSequenceAdapter\n  extends FromConfigAdapter\n  implements RegionsAdapter\n{\n  /**\n   * Fetch features for a certain region\n   * @param region - Region\n   * @returns Observable of Feature objects in the region\n   */\n  getFeatures(region: NoAssemblyRegion) {\n    return ObservableCreate<Feature>(async observer => {\n      const feats = await firstValueFrom(\n        super.getFeatures(region).pipe(toArray()),\n      )\n      const feat = feats[0]\n      observer.next(\n        new SimpleFeature({\n          ...feat.toJSON(),\n          uniqueId: `${feat.id()}:${region.start}-${region.end}`,\n          end: region.end,\n          start: region.start,\n          seq: feat\n            .get('seq')\n            .slice(\n              Math.max(region.start - feat.get('start'), 0),\n              Math.max(region.end - feat.get('start'), 0),\n            ),\n        }),\n      )\n\n      observer.complete()\n    })\n  }\n\n  /**\n   * Get refName, start, and end for all features after collapsing any overlaps\n   */\n  async getRegions() {\n    const regions = []\n\n    // recall: features are stored in this object sorted by start coordinate\n    for (const [refName, features] of this.features) {\n      let currentRegion\n      for (const feature of features) {\n        if (\n          currentRegion &&\n          currentRegion.end >= feature.get('start') &&\n          currentRegion.start <= feature.get('end')\n        ) {\n          currentRegion.end = feature.get('end')\n        } else {\n          if (currentRegion) {\n            regions.push(currentRegion)\n          }\n          currentRegion = {\n            refName,\n            start: feature.get('start'),\n            end: feature.get('end'),\n          }\n        }\n      }\n      if (currentRegion) {\n        regions.push(currentRegion)\n      }\n    }\n\n    return regions\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the foreseeable future and can be purged\n   * from caches, etc\n   */\n  freeResources(/* { region } */): void {}\n}\n"],"names":["FromConfigAdapter","_BaseFeatureDataAdapt","_getRefNames","_getRefNameAliases","_inherits","_super","_createSuper","conf","getSubAdapter","pluginManager","_this","_classCallCheck","call","features","feats","readConfObject","makeFeatures","_createClass","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","_toConsumableArray","this","keys","stop","apply","arguments","_callee2","_context2","values","map","featureArray","refName","get","aliases","region","_ref","_this2","start","end","ObservableCreate","_x","_callee3","observer","_iterator","_step","f","_context3","_createForOfIteratorHelper","s","n","done","err","e","complete","fdata","_step2","Map","_iterator2","entry","makeFeature","bucket","set","push","_step3","_iterator3","sort","a","b","data","SimpleFeature","BaseFeatureDataAdapter","FromConfigSequenceAdapter","_FromConfigAdapter","_getRegions","feat","firstValueFrom","_get","_getPrototypeOf","prototype","pipe","toArray","sent","_objectSpread","toJSON","uniqueId","concat","id","seq","slice","Math","max","regions","_step$value","currentRegion","feature","_slicedToArray"],"sourceRoot":""}