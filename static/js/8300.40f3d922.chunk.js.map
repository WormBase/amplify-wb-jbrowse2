{"version":3,"file":"static/js/8300.40f3d922.chunk.js","mappings":"uOAUe,SAASA,EAAaC,GAUnC,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACzB,SAAEG,EAAQ,SAAEC,EAAQ,UAAEC,GAAcJ,GAEnCK,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,GAADC,OACzBN,IAAaO,OAAOC,UAAYR,EAAW,MAEzCS,EAAKC,IAAUL,EAAAA,EAAAA,UAAS,GAADC,OACzBL,IAAaM,OAAOI,UAAYV,EAAW,KAG1CW,IACI,KAART,GAAsB,KAARM,IAAeF,OAAOM,OAAOV,KAASI,OAAOM,OAAOJ,MAC7DA,GAAON,EAGRW,IACU,QAAdZ,GAA+B,KAARC,IAAeI,OAAOM,OAAOV,MAAQA,EAAM,EAEpE,OACEY,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAASnB,EAAaoB,MAAM,8BAA6BC,SAAA,EACpEL,EAAAA,EAAAA,MAACM,EAAAA,EAAa,CAAAD,SAAA,EACZE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAH,SAAC,0BACVR,EAIE,MAHFU,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,QAAOJ,SAAC,wCAK1BN,EAIE,MAHFQ,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,QAAOJ,SAAC,sDAK5BE,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,MAAOvB,EACPwB,SAAUC,GAASxB,EAAOwB,EAAMC,OAAOH,OACvCI,YAAY,qBAEdR,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,MAAOjB,EACPkB,SAAUC,GAASlB,EAAOkB,EAAMC,OAAOH,OACvCI,YAAY,wBAGhBR,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CAAAX,UACZE,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,QAAQ,YACRT,MAAM,UACNU,KAAK,SACLC,MAAO,CAAEC,WAAY,IACrBC,UAAWzB,EACX0B,QAASA,KACPxC,EAAMyC,YACI,KAARpC,GAAeI,OAAOM,OAAOV,QAAcqC,GAANrC,GAEvCL,EAAM2C,YACI,KAARhC,GAAeF,OAAOM,OAAOJ,QAAc+B,GAAN/B,GAEvCV,GAAa,EACbqB,SACH,eAMT,C","sources":["../../../plugins/wiggle/src/shared/SetMinMaxDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nexport default function SetMinMaxDlg(props: {\n  model: {\n    minScore: number\n    maxScore: number\n    scaleType: string\n    setMinScore: Function\n    setMaxScore: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { minScore, maxScore, scaleType } = model\n\n  const [min, setMin] = useState(\n    `${minScore !== Number.MIN_VALUE ? minScore : ''}`,\n  )\n  const [max, setMax] = useState(\n    `${maxScore !== Number.MAX_VALUE ? maxScore : ''}`,\n  )\n\n  const ok =\n    min !== '' && max !== '' && !Number.isNaN(+min) && !Number.isNaN(+max)\n      ? +max > +min\n      : true\n\n  const logOk =\n    scaleType === 'log' && min !== '' && !Number.isNaN(+min) ? +min > 0 : true\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set min/max score for track\">\n      <DialogContent>\n        <Typography>Enter min/max score: </Typography>\n        {!ok ? (\n          <Typography color=\"error\">\n            Max is greater than or equal to min\n          </Typography>\n        ) : null}\n\n        {!logOk ? (\n          <Typography color=\"error\">\n            Min score should be greater than 0 for log scale\n          </Typography>\n        ) : null}\n\n        <TextField\n          value={min}\n          onChange={event => setMin(event.target.value)}\n          placeholder=\"Enter min score\"\n        />\n        <TextField\n          value={max}\n          onChange={event => setMax(event.target.value)}\n          placeholder=\"Enter max score\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ marginLeft: 20 }}\n          disabled={!ok}\n          onClick={() => {\n            model.setMinScore(\n              min !== '' && !Number.isNaN(+min) ? +min : undefined,\n            )\n            model.setMaxScore(\n              max !== '' && !Number.isNaN(+max) ? +max : undefined,\n            )\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["SetMinMaxDlg","props","model","handleClose","minScore","maxScore","scaleType","min","setMin","useState","concat","Number","MIN_VALUE","max","setMax","MAX_VALUE","ok","isNaN","logOk","_jsxs","Dialog","open","onClose","title","children","DialogContent","_jsx","Typography","color","TextField","value","onChange","event","target","placeholder","DialogActions","Button","variant","type","style","marginLeft","disabled","onClick","setMinScore","undefined","setMaxScore"],"sourceRoot":""}