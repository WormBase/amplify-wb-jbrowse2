{"version":3,"file":"static/js/8010.466e5a82.chunk.js","mappings":"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","sources":["../../../plugins/breakpoint-split-view/src/BreakpointSplitView/svgcomponents/SVGBackground.tsx","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/svgcomponents/SVGBreakpointSplitView.tsx"],"sourcesContent":["import React from 'react'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={theme.palette.background.default}\n    />\n  )\n}\n","import React from 'react'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { when } from 'mobx'\nimport {\n  AbstractSessionModel,\n  getSession,\n  max,\n  measureText,\n  sum,\n} from '@jbrowse/core/util'\nimport { ThemeProvider } from '@mui/material'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\n\n// locals\nimport {\n  SVGTracks,\n  SVGRuler,\n  totalHeight,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport SVGBackground from './SVGBackground'\nimport { ExportSvgOptions, BreakpointViewModel } from '../model'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport Overlay from '../components/Overlay'\n\ntype BSV = BreakpointViewModel\n\nfunction getTrackNameMaxLen(\n  views: LinearGenomeViewModel[],\n  fontSize: number,\n  session: AbstractSessionModel,\n) {\n  return max(\n    views.flatMap(view =>\n      view.tracks.map(t =>\n        measureText(getTrackName(t.configuration, session), fontSize),\n      ),\n    ),\n    0,\n  )\n}\nfunction getTrackOffsets(\n  view: LinearGenomeViewModel,\n  textOffset: number,\n  extra = 0,\n) {\n  const offsets = {} as { [key: string]: number }\n  let curr = textOffset\n  for (let i = 0; i < view.tracks.length; i++) {\n    const track = view.tracks[i]\n    offsets[track.configuration.trackId] = curr + extra\n    curr += track.displays[0].height + textOffset\n  }\n  return offsets\n}\n\n// render LGV to SVG\nexport async function renderToSvg(model: BSV, opts: ExportSvgOptions) {\n  const {\n    textHeight = 18,\n    headerHeight = 30,\n    rulerHeight = 30,\n    fontSize = 13,\n    trackLabels = 'offset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Wrapper = ({ children }: any) => <>{children}</>,\n    themeName = 'default',\n  } = opts\n  const session = getSession(model)\n  const theme = session.allThemes?.()[themeName]\n  const { width, views } = model\n  const shift = 50\n  const offset = headerHeight + rulerHeight\n\n  const heights = views.map(\n    v => totalHeight(v.tracks, textHeight, trackLabels) + offset,\n  )\n  const totalHeightSvg = sum(heights) + 100\n  const displayResults = await Promise.all(\n    views.map(\n      async view =>\n        ({\n          view,\n          data: await Promise.all(\n            view.tracks.map(async track => {\n              const d = track.displays[0]\n              await when(() => (d.ready !== undefined ? d.ready : true))\n              return { track, result: await d.renderSvg({ ...opts, theme }) }\n            }),\n          ),\n        } as const),\n    ),\n  )\n\n  const trackLabelMaxLen = getTrackNameMaxLen(views, fontSize, session) + 40\n  const trackLabelOffset = trackLabels === 'left' ? trackLabelMaxLen : 0\n  const textOffset = trackLabels === 'offset' ? textHeight : 0\n  const trackOffsets = [\n    getTrackOffsets(views[0], textOffset, fontSize + offset),\n    getTrackOffsets(views[1], textOffset, fontSize + heights[0] + offset),\n  ]\n  const w = width + trackLabelOffset\n  const t = createJBrowseTheme(theme)\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={t}>\n      <Wrapper>\n        <svg\n          width={width}\n          height={totalHeightSvg}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w + shift * 2, totalHeightSvg].toString()}\n        >\n          <SVGBackground width={w} height={totalHeightSvg} shift={shift} />\n          <g transform={`translate(${shift} ${fontSize})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[0].assemblyNames.join(', ')}\n              </text>\n\n              <SVGRuler model={displayResults[0].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[0].view}\n              displayResults={displayResults[0].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n\n          <g transform={`translate(${shift} ${fontSize + heights[0]})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[1].assemblyNames.join(', ')}\n              </text>\n              <SVGRuler model={displayResults[1].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[1].view}\n              displayResults={displayResults[1].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n\n          <defs>\n            <clipPath id=\"clip-bsv\">\n              <rect x={0} y={0} width={width} height={totalHeightSvg} />\n            </clipPath>\n          </defs>\n          <g\n            transform={`translate(${trackLabelOffset + shift})`}\n            clipPath=\"url(#clip-bsv)\"\n          >\n            {model.matchedTracks.map(track => (\n              <Overlay\n                parentRef={{ current: null }}\n                key={track.configuration.trackId}\n                model={model}\n                trackId={track.configuration.trackId}\n                getTrackYPosOverride={(id, level) => trackOffsets[level][id]}\n              />\n            ))}\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n"],"names":["SVGBackground","_ref","width","height","shift","theme","useTheme","_jsx","fill","palette","background","default","getTrackNameMaxLen","views","fontSize","session","max","flatMap","view","tracks","map","t","measureText","getTrackName","configuration","getTrackOffsets","textOffset","extra","arguments","length","undefined","offsets","curr","i","track","trackId","displays","renderToSvg","_x","_x2","_renderToSvg","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","model","opts","_session$allThemes","_opts$textHeight","textHeight","_opts$headerHeight","headerHeight","_opts$rulerHeight","rulerHeight","_opts$fontSize","_opts$trackLabels","trackLabels","_opts$Wrapper","Wrapper","_opts$themeName","themeName","offset","heights","totalHeightSvg","displayResults","trackLabelMaxLen","trackLabelOffset","trackOffsets","w","wrap","_context3","prev","next","children","_Fragment","getSession","allThemes","call","v","totalHeight","sum","Promise","all","_ref2","_callee2","_context2","t0","_ref3","_callee","d","_context","when","ready","renderSvg","_objectSpread","t1","sent","abrupt","result","stop","_x4","data","_x3","createJBrowseTheme","renderToStaticMarkup","ThemeProvider","_jsxs","xmlns","xmlnsXlink","viewBox","toString","transform","concat","x","text","primary","assemblyNames","join","SVGRuler","SVGTracks","id","y","clipPath","matchedTracks","Overlay","parentRef","current","getTrackYPosOverride","level"],"sourceRoot":""}