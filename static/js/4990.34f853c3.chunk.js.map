{"version":3,"file":"static/js/4990.34f853c3.chunk.js","mappings":"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","sources":["../../../plugins/variants/src/VariantFeatureWidget/VariantSampleGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendOptionDialog.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/AnnotGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantAnnotationTable.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantFeatureWidget.tsx","../../../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../../../node_modules/@mui/material/Toolbar/Toolbar.js","../../../node_modules/@mui/material/Toolbar/toolbarClasses.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport {\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Typography,\n} from '@mui/material'\n\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { measureGridWidth, SimpleFeatureSerialized } from '@jbrowse/core/util'\nimport ResizeBar from '@jbrowse/core/ui/ResizeBar'\nimport { useResizeBar } from '@jbrowse/core/ui/useResizeBar'\n\ninterface Entry {\n  sample: string\n  id: string\n  [key: string]: string\n}\n\ntype InfoFields = Record<string, unknown>\ntype Filters = Record<string, string>\n\nfunction SampleFilters({\n  columns,\n  filter,\n  setFilter,\n}: {\n  columns: { field: string }[]\n  filter: Filters\n  setFilter: (arg: Filters) => void\n}) {\n  return (\n    <>\n      <Typography>\n        These filters can use a plain text search or regex style query, e.g. in\n        the genotype field, entering 1 will query for all genotypes that include\n        the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\d* will find\n        any non-zero allele e.g. 0|2 or 2/33\n      </Typography>\n      {columns.map(({ field }) => (\n        <TextField\n          key={`filter-${field}`}\n          placeholder={`Filter ${field}`}\n          value={filter[field] || ''}\n          onChange={event =>\n            setFilter({ ...filter, [field]: event.target.value })\n          }\n        />\n      ))}\n    </>\n  )\n}\n\nexport default function VariantSamples(props: {\n  feature: SimpleFeatureSerialized\n  descriptions?: { FORMAT?: Record<string, { Description?: string }> } | null\n}) {\n  const { feature, descriptions = {} } = props\n  const { ref, scrollLeft } = useResizeBar()\n  const [filter, setFilter] = useState<Filters>({})\n  const samples = (feature.samples || {}) as Record<string, InfoFields>\n  const preFilteredRows = Object.entries(samples)\n\n  let error\n  let rows = [] as Entry[]\n  const filters = Object.keys(filter)\n\n  // catch some error thrown from regex\n  // note: maps all values into a string, if this is not done rows are not\n  // sortable by the data-grid\n  try {\n    rows = preFilteredRows\n      .map(row => {\n        return {\n          ...Object.fromEntries(\n            Object.entries(row[1]).map(e => [e[0], `${e[1]}`]),\n          ),\n          sample: row[0],\n          id: row[0],\n        } as Entry\n      })\n      .filter(row =>\n        filters.length\n          ? filters.every(key => {\n              const currFilter = filter[key]\n              return currFilter\n                ? row[key].match(new RegExp(currFilter, 'i'))\n                : true\n            })\n          : true,\n      )\n  } catch (e) {\n    error = e\n  }\n\n  const keys = ['sample', ...Object.keys(preFilteredRows[0]?.[1] || {})]\n  const [checked, setChecked] = useState(false)\n  const [widths, setWidths] = useState(\n    keys.map(e => measureGridWidth(rows.map(r => r[e]))),\n  )\n  const columns = keys.map((field, index) => ({\n    field,\n    description: descriptions?.FORMAT?.[field]?.Description,\n    width: widths[index],\n  }))\n\n  // disableRowSelectionOnClick helps avoid\n  // https://github.com/mui-org/material-ui-x/issues/1197\n  return !preFilteredRows.length ? null : (\n    <BaseCard {...props} title=\"Samples\">\n      {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => setChecked(event.target.checked)}\n          />\n        }\n        label={<Typography variant=\"body2\">Show options</Typography>}\n      />\n      {checked ? (\n        <SampleFilters\n          setFilter={setFilter}\n          columns={columns}\n          filter={filter}\n        />\n      ) : null}\n      <div ref={ref}>\n        <ResizeBar\n          widths={widths}\n          setWidths={setWidths}\n          scrollLeft={scrollLeft}\n        />\n        <DataGrid\n          rows={rows}\n          hideFooter={rows.length < 100}\n          columns={columns}\n          disableRowSelectionOnClick\n          rowHeight={25}\n          columnHeaderHeight={35}\n          disableColumnMenu\n          slots={{ toolbar: checked ? GridToolbar : null }}\n          slotProps={{\n            toolbar: { printOptions: { disableToolbarButton: true } },\n          }}\n        />\n      </div>\n    </BaseCard>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSnapshot } from 'mobx-state-tree'\n// jbrowse\nimport { Dialog } from '@jbrowse/core/ui'\nimport { getSession, Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  block: {\n    display: 'block',\n  },\n})\n\nconst BreakendOptionDialog = observer(function ({\n  model,\n  handleClose,\n  feature,\n  viewType,\n}: {\n  model: any\n  handleClose: () => void\n  feature: Feature\n  viewType: any\n}) {\n  const { classes } = useStyles()\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirrorTracks, setMirrorTracks] = useState(true)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Breakpoint split view options\">\n      <DialogContent>\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={copyTracks}\n              onChange={event => setCopyTracks(event.target.checked)}\n            />\n          }\n          label=\"Copy tracks into the new view\"\n        />\n\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={mirrorTracks}\n              onChange={event => setMirrorTracks(event.target.checked)}\n            />\n          }\n          label=\"Mirror tracks vertically in vertically stacked view\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const { view } = model\n            const session = getSession(model)\n            try {\n              const viewSnapshot = viewType.snapshotFromBreakendFeature(\n                feature,\n                view,\n              )\n\n              interface Track {\n                trackId: string\n                [key: string]: unknown\n              }\n              function remapIds(arr: Track[]) {\n                return arr.map(v => ({\n                  ...v,\n                  id: `${v.trackId}-${Math.random()}`,\n                }))\n              }\n              viewSnapshot.views[0].offsetPx -= view.width / 2 + 100\n              viewSnapshot.views[1].offsetPx -= view.width / 2 + 100\n              viewSnapshot.featureData = feature\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n              const viewTracks = getSnapshot(view.tracks) as Track[]\n              viewSnapshot.views[0].tracks = remapIds(viewTracks)\n              viewSnapshot.views[1].tracks = remapIds(\n                mirrorTracks ? [...viewTracks].reverse() : viewTracks,\n              )\n\n              session.addView('BreakpointSplitView', viewSnapshot)\n            } catch (e) {\n              console.error(e)\n              session.notify(`${e}`)\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default BreakendOptionDialog\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { Link, Typography } from '@mui/material'\nimport SimpleFeature, {\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport BreakendOptionDialog from './BreakendOptionDialog'\n\nexport default function BreakendPanel(props: {\n  locStrings: string[]\n  model: any\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, locStrings, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const [breakpointDialog, setBreakpointDialog] = useState(false)\n  let viewType\n\n  try {\n    viewType = pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  const simpleFeature = new SimpleFeature(feature)\n  return (\n    <BaseCard {...props} title=\"Breakends\">\n      <Typography>Link to linear view of breakend endpoints</Typography>\n      <ul>\n        {locStrings.map(locString => (\n          <li key={`${JSON.stringify(locString)}`}>\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                const { view } = model\n                try {\n                  if (view) {\n                    view.navToLocString?.(locString)\n                  } else {\n                    throw new Error(\n                      'No view associated with this feature detail panel anymore',\n                    )\n                  }\n                } catch (e) {\n                  console.error(e)\n                  session.notify(`${e}`)\n                }\n              }}\n            >\n              {`LGV - ${locString}`}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {viewType ? (\n        <div>\n          <Typography>\n            Launch split views with breakend source and target\n          </Typography>\n          <ul>\n            {locStrings.map(locString => (\n              <li key={`${JSON.stringify(locString)}`}>\n                <Link\n                  href=\"#\"\n                  onClick={event => {\n                    event.preventDefault()\n                    setBreakpointDialog(true)\n                  }}\n                >\n                  {`${feature.refName}:${feature.start} // ${locString} (split view)`}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {breakpointDialog ? (\n            <BreakendOptionDialog\n              model={model}\n              feature={simpleFeature}\n              viewType={viewType}\n              handleClose={() => {\n                setBreakpointDialog(false)\n              }}\n            />\n          ) : null}\n        </div>\n      ) : null}\n    </BaseCard>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  DataGrid,\n  GridColDef,\n  GridToolbar,\n  GridValidRowModel,\n} from '@mui/x-data-grid'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\nimport ResizeBar from '@jbrowse/core/ui/ResizeBar'\nimport { measureGridWidth } from '@jbrowse/core/util'\nimport { useResizeBar } from '@jbrowse/core/ui/useResizeBar'\n\nexport default function VariantAnnotPanel({\n  rows,\n  columns,\n}: {\n  rows: GridValidRowModel[]\n  columns: GridColDef[]\n}) {\n  const { ref, scrollLeft } = useResizeBar()\n  const [checked, setChecked] = useState(false)\n  const [widths, setWidths] = useState(\n    columns.map(e => measureGridWidth(rows.map(r => r[e.field]))),\n  )\n\n  return rows.length ? (\n    <div ref={ref}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => setChecked(event.target.checked)}\n          />\n        }\n        label={<Typography variant=\"body2\">Show options</Typography>}\n      />\n      <div ref={ref}>\n        <ResizeBar\n          widths={widths}\n          setWidths={setWidths}\n          scrollLeft={scrollLeft}\n        />\n        <DataGrid\n          rowHeight={25}\n          rows={rows}\n          columns={columns.map((c, i) => ({ ...c, width: widths[i] }))}\n          slots={{ toolbar: checked ? GridToolbar : null }}\n        />\n      </div>\n    </div>\n  ) : null\n}\n","import React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport AnnotGrid from './AnnotGrid'\n\nexport default function VariantAnnotationTable({\n  data,\n  fields,\n  title,\n}: {\n  data: string[]\n  fields: string[]\n  title: string\n}) {\n  return data.length ? (\n    <BaseCard title={title}>\n      <AnnotGrid\n        rows={\n          data.map((elt, id) => ({\n            id,\n            ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n          })) || []\n        }\n        columns={fields.map(c => ({ field: c }))}\n      />\n    </BaseCard>\n  ) : null\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Divider, Paper } from '@mui/material'\nimport { FeatureDetails } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { parseBreakend } from '@gmod/vcf'\n\n// locals\nimport VariantSampleGrid from './VariantSampleGrid'\nimport BreakendPanel from './BreakendPanel'\nimport VariantAnnotationTable from './VariantAnnotationTable'\nimport { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\nconst basicDescriptions = {\n  CHROM: 'chromosome: An identifier from the reference genome',\n  POS: 'position: The reference position, with the 1st base having position 1',\n  ID: 'identifier: Semi-colon separated list of unique identifiers where available',\n  REF: 'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n  ALT: 'alternate base(s): Comma-separated list of alternate non-reference alleles',\n  QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n  FILTER:\n    'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n}\n\nfunction AnnPanel({\n  descriptions,\n  feature,\n}: {\n  descriptions: { INFO?: { ANN?: { Description?: string } } }\n  feature: { INFO?: { ANN?: string[] } }\n}) {\n  const annDesc = descriptions?.INFO?.ANN?.Description\n  const annFields =\n    annDesc?.match(/.*Functional annotations:'(.*)'$/)?.[1].split('|') || []\n  const ann = feature.INFO?.ANN || []\n  return (\n    <VariantAnnotationTable\n      fields={annFields}\n      data={ann}\n      title=\"Variant ANN field\"\n    />\n  )\n}\n\nfunction CsqPanel({\n  descriptions,\n  feature,\n}: {\n  descriptions: { INFO?: { CSQ?: { Description?: string } } }\n  feature: { INFO?: { CSQ?: string[] } }\n}) {\n  const csqDescription = descriptions?.INFO?.CSQ?.Description\n  const csqFields =\n    csqDescription?.match(/.*Format: (.*)/)?.[1].split('|') || []\n  const csq = feature.INFO?.CSQ || []\n  return (\n    <VariantAnnotationTable\n      fields={csqFields}\n      data={csq}\n      title=\"Variant CSQ field\"\n    />\n  )\n}\n\nconst VariantFeatureWidget = observer(function (props: {\n  model: {\n    featureData: SimpleFeatureSerialized\n    descriptions: Record<string, string>\n  }\n}) {\n  const { model } = props\n  const { featureData, descriptions } = model\n  const feat = JSON.parse(JSON.stringify(featureData))\n  const { samples, ...rest } = feat\n\n  return (\n    <Paper data-testid=\"variant-side-drawer\">\n      <FeatureDetails\n        feature={rest}\n        descriptions={{ ...basicDescriptions, ...descriptions }}\n        {...props}\n      />\n      <Divider />\n      <CsqPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      <AnnPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      {feat.type === 'breakend' ? (\n        <BreakendPanel\n          feature={feat}\n          locStrings={feat.ALT.map(\n            (alt: string) => parseBreakend(alt)?.MatePosition || '',\n          )}\n          model={model}\n        />\n      ) : null}\n      {feat.type === 'translocation' ? (\n        <BreakendPanel\n          feature={feat}\n          model={model}\n          locStrings={[`${feat.INFO.CHR2[0]}:${feat.INFO.END}`]}\n        />\n      ) : null}\n      <VariantSampleGrid\n        feature={feat}\n        {...props}\n        descriptions={descriptions}\n      />\n    </Paper>\n  )\n})\n\nexport default VariantFeatureWidget\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;"],"names":["SampleFilters","_ref","columns","filter","setFilter","_jsxs","_Fragment","children","_jsx","Typography","map","_ref2","field","TextField","placeholder","concat","value","onChange","event","target","VariantSamples","props","_preFilteredRows$","feature","descriptions","ref","scrollLeft","useResizeBar","useState","samples","preFilteredRows","Object","entries","error","rows","filters","keys","row","fromEntries","e","sample","id","length","every","key","currFilter","match","RegExp","checked","setChecked","widths","setWidths","measureGridWidth","r","index","_descriptions$FORMAT","_descriptions$FORMAT$","description","FORMAT","Description","width","BaseCard","title","color","FormControlLabel","control","Checkbox","label","variant","ResizeBar","DataGrid","hideFooter","disableRowSelectionOnClick","rowHeight","columnHeaderHeight","disableColumnMenu","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","useStyles","makeStyles","block","display","observer","model","handleClose","viewType","classes","copyTracks","setCopyTracks","mirrorTracks","setMirrorTracks","Dialog","open","onClose","DialogContent","className","DialogActions","Button","onClick","view","session","getSession","viewSnapshot","snapshotFromBreakendFeature","remapIds","arr","v","trackId","Math","random","views","offsetPx","featureData","viewTracks","getSnapshot","tracks","reverse","addView","console","notify","autoFocus","BreakendPanel","locStrings","pluginManager","getEnv","breakpointDialog","setBreakpointDialog","getViewType","simpleFeature","SimpleFeature","locString","Link","href","preventDefault","Error","_view$navToLocString","navToLocString","call","JSON","stringify","refName","start","BreakendOptionDialog","VariantAnnotPanel","c","i","VariantAnnotationTable","data","fields","AnnotGrid","elt","split","basicDescriptions","CHROM","POS","ID","REF","ALT","QUAL","FILTER","AnnPanel","_descriptions$INFO","_descriptions$INFO$AN","_annDesc$match","_feature$INFO","annDesc","INFO","ANN","annFields","ann","CsqPanel","_descriptions$INFO2","_descriptions$INFO2$C","_csqDescription$match","_feature$INFO2","csqDescription","CSQ","csqFields","csq","feat","parse","rest","Paper","FeatureDetails","Divider","type","alt","_parseBreakend","parseBreakend","MatePosition","CHR2","END","VariantSampleGrid","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","handleClickAway","useEventCallback","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_excluded","ToolbarRoot","styled","name","slot","overridesResolver","styles","ownerState","root","disableGutters","gutters","theme","_extends","position","alignItems","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","inProps","useThemeProps","component","other","_objectWithoutPropertiesLoose","composeClasses","getToolbarUtilityClass","useUtilityClasses","as","clsx","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}