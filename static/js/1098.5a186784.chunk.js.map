{"version":3,"file":"static/js/1098.5a186784.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/ImportCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/util.ts","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/index.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotWarnings.tsx","../../../plugins/dotplot-view/src/DotplotView/components/PanButtons.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotControls.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotTooltip.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { getBlockLabelKeysToHide } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n}))\nexport const HorizontalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderY } = model\n  const { classes } = useStyles()\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      <HorizontalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const HorizontalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n  const theme = useTheme()\n  const hviewSnap = {\n    ...getSnapshot(hview),\n    width,\n    staticBlocks: hview.staticBlocks,\n  }\n\n  const ticks = hticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: hviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const x = region.offsetPx\n          const y = 0\n          const xoff = Math.floor(x - hview.offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${htextRotation},${xoff},${y})`}\n              key={JSON.stringify(region)}\n              x={xoff}\n              y={y + 1}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"hanging\"\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, x]) => {\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={theme.palette.grey[400]}\n          />\n        )\n      })}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, x]) => {\n          const y = 0\n          return x > 10 ? (\n            <text\n              x={x - 7}\n              y={y}\n              transform={`rotate(${htextRotation},${x},${y})`}\n              key={`text-${JSON.stringify(tick)}`}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"middle\"\n              textAnchor=\"end\"\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={borderY - 12}\n        x={(viewWidth - borderX) / 2}\n        fill={theme.palette.text.primary}\n        textAnchor=\"middle\"\n        fontSize={11}\n        dominantBaseline=\"hanging\"\n      >\n        {hview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\nexport const VerticalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { borderX, viewHeight } = model\n  const { classes } = useStyles()\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      <VerticalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const VerticalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewHeight, borderX, borderY, vview, vtextRotation, vticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n  const theme = useTheme()\n  const vviewSnap = {\n    ...getSnapshot(vview),\n    width,\n    staticBlocks: vview.staticBlocks,\n  }\n  const ticks = vticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: vviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const y = region.offsetPx\n          const x = borderX\n          const yoff = Math.floor(viewHeight - y + offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${vtextRotation},${x},${y})`}\n              key={JSON.stringify(region)}\n              x={x}\n              y={yoff}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, y]) => (\n        <line\n          key={`line-${JSON.stringify(tick)}`}\n          y1={viewHeight - y}\n          y2={viewHeight - y}\n          x1={borderX}\n          x2={borderX - (tick.type === 'major' ? 6 : 4)}\n          strokeWidth={1}\n          stroke={theme.palette.grey[400]}\n        />\n      ))}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, y]) => {\n          return y > 10 ? (\n            <text\n              y={viewHeight - y - 3}\n              x={borderX - 7}\n              key={`text-${JSON.stringify(tick)}`}\n              textAnchor=\"end\"\n              fill={theme.palette.text.primary}\n              dominantBaseline=\"hanging\"\n              fontSize={11}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={(viewHeight - borderY) / 2}\n        x={12}\n        fill={theme.palette.text.primary}\n        transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n        textAnchor=\"middle\"\n        fontSize={11}\n      >\n        {vview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { basename, extName, getName, stripGz } from './util'\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error(\n      `Unknown to detect type ${radioOption} from filename (select radio button to clarify)`,\n    )\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption = value || (fileName ? extName(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","export function getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nexport function stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nexport function basename(str: string) {\n  return str.split('#')[0].split('?')[0].split('/').pop()\n}\nexport function extName(str: string) {\n  const r = str.split('.').pop()\n  return r ? `.${r}` : ''\n}\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: DotplotViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks, sessionTracks } = session\n    const allTracks = [\n      ...tracks,\n      ...(sessionTracks || []),\n    ] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to change\n      // the state of the useState because it otherwise gets locked to a stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well as\n      // onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        <Typography paragraph>\n          Note: there is a track selector <i>inside</i> the DotplotView, which\n          can turn on one or more SyntenyTracks (more than one can be displayed\n          at once). Look for the track selector icon <TrackSelectorIcon />\n        </Typography>\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel } from '../../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n      model.setError(undefined)\n      transaction(() => {\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(assembly2, assembly1)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <Typography style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </Typography>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button } from '@mui/material'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nconst DotplotWarnings = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const trackWarnings = model.tracks.filter(t => t.displays[0].warnings?.length)\n  const [shown, setShown] = useState(false)\n  return trackWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          trackWarnings={trackWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n\nexport default DotplotWarnings\n","import React from 'react'\nimport { IconButton, Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\nimport ArrowDropUp from '@mui/icons-material/ArrowDropUp'\nimport ArrowLeft from '@mui/icons-material/ArrowLeft'\nimport ArrowRight from '@mui/icons-material/ArrowRight'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()({\n  dpad: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    margin: 0,\n    position: 'absolute',\n    right: 50,\n    zIndex: 1000,\n    top: 50,\n  },\n  icon: {\n    padding: 0,\n    margin: 0,\n  },\n})\n\nconst PanButtons = observer(function PanButtons({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.dpad} elevation={6}>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(100)}\n      >\n        <ArrowDropUp />\n      </IconButton>\n      <div />\n\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(-100)}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(100)}\n      >\n        <ArrowRight />\n      </IconButton>\n\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(-100)}\n      >\n        <ArrowDropDown />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomIn()\n          model.vview.zoomIn()\n        }}\n      >\n        <ZoomIn />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomOut()\n          model.vview.zoomOut()\n        }}\n      >\n        <ZoomOut />\n      </IconButton>\n    </Paper>\n  )\n})\n\nexport default PanButtons\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React from 'react'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst DotplotControls = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  return (\n    <div>\n      <IconButton onClick={model.zoomOutButton}>\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton onClick={model.zoomInButton}>\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={() => model.activateTrackSelector()}\n        title=\"Open track selector\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <CascadingMenuButton\n        menuItems={[\n          {\n            onClick: () => model.squareView(),\n            label: 'Square view - same base pairs per pixel',\n          },\n          {\n            onClick: () => model.squareViewProportional(),\n            label: 'Rectanglularize view - same total bp',\n          },\n          {\n            onClick: () => model.showAllRegions(),\n            label: 'Show all regions',\n          },\n          {\n            onClick: () => model.setDrawCigar(!model.drawCigar),\n            type: 'checkbox',\n            label: 'Draw CIGAR',\n            checked: model.drawCigar,\n          },\n          {\n            onClick: () => model.setShowPanButtons(!model.showPanButtons),\n            label: 'Show pan buttons',\n            type: 'checkbox',\n            checked: model.showPanButtons,\n          },\n          {\n            label: 'Click and drag mode',\n            subMenu: [\n              {\n                onClick: () => model.setCursorMode('move'),\n                label: 'Pan by default, select region when ctrl key is held',\n                icon: CursorMove,\n                type: 'radio',\n                checked: model.cursorMode === 'move',\n              },\n              {\n                onClick: () => model.setCursorMode('crosshair'),\n                label: 'Select region by default, pan when ctrl key is held',\n                icon: CursorMouse,\n                type: 'radio',\n                checked: model.cursorMode === 'crosshair',\n              },\n            ],\n          },\n          {\n            label: 'Wheel scroll mode',\n            subMenu: [\n              {\n                onClick: () => model.setWheelMode('pan'),\n                label: 'Pans view',\n                type: 'radio',\n                checked: model.wheelMode === 'pan',\n              },\n              {\n                onClick: () => model.setWheelMode('zoom'),\n                label: 'Zooms view',\n                type: 'radio',\n                checked: model.wheelMode === 'zoom',\n              },\n              {\n                onClick: () => model.setWheelMode('none'),\n                label: 'Disable',\n                type: 'radio',\n                checked: model.wheelMode === 'none',\n              },\n            ],\n          },\n        ]}\n      >\n        <MoreVert />\n      </CascadingMenuButton>\n    </div>\n  )\n})\n\nexport default DotplotControls\n","import React from 'react'\nimport { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport DotplotWarnings from './DotplotWarnings'\nimport PanButtons from './PanButtons'\nimport DotplotControls from './DotplotControls'\n\nconst useStyles = makeStyles()({\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n    position: 'relative',\n  },\n})\n\nconst DotplotHeader = observer(function ({\n  model,\n  selection,\n}: {\n  model: DotplotViewModel\n  selection?: { width: number; height: number }\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, showPanButtons } = model\n  return (\n    <div className={classes.headerBar}>\n      <DotplotControls model={model} />\n      <Typography className={classes.bp} variant=\"body2\" color=\"textSecondary\">\n        x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n        <br />\n        y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n      </Typography>\n      {selection ? (\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n          {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n        </Typography>\n      ) : null}\n      <div className={classes.spacer} />\n      <DotplotWarnings model={model} />\n      {showPanButtons ? <PanButtons model={model} /> : null}\n    </div>\n  )\n})\n\nexport default DotplotHeader\n","import React, { useMemo, useRef, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\nimport { Portal, alpha } from '@mui/material'\nimport { usePopper } from 'react-popper'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\ntype Coord = [number, number] | undefined\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nexport const TooltipWhereMouseovered = observer(function ({\n  model,\n  mouserect,\n  mouserectClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mouserect: Coord\n  mouserectClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  const offset = 6\n  const w = rect.height + offset * 2\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = offset + (mouserectClient?.[0] || 0) - (xdistance < 0 ? w : 0)\n        const y = offset + (mouserectClient?.[1] || 0) - (ydistance < 0 ? w : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mouserectClient, xdistance, ydistance, w],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'left' : 'right',\n  })\n  return (\n    <>\n      {mouserect ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mouserect[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n\nexport const TooltipWhereClicked = observer(function ({\n  model,\n  mousedown,\n  mousedownClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mousedown: Coord\n  mousedownClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = (mousedownClient?.[0] || 0) - (xdistance < 0 ? 0 : 0)\n        const y = (mousedownClient?.[1] || 0) - (ydistance < 0 ? 0 : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mousedownClient, xdistance, ydistance],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'right' : 'left',\n  })\n  return (\n    <>\n      {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mousedown[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { VerticalAxis, HorizontalAxis } from './Axes'\nimport { TooltipWhereClicked, TooltipWhereMouseovered } from './DotplotTooltip'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ninterface Rect {\n  left: number\n  top: number\n}\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const [ctrlKeyWasUsed, setCtrlKeyWasUsed] = useState(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const rootRect = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserectClient = mouseupClient || mousecurrClient\n  const mouserect = mouseup || mousecurr\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview, wheelMode, cursorMode } = model\n\n  const validPan =\n    (cursorMode === 'move' && !ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && ctrlKeyWasUsed)\n\n  const validSelect =\n    (cursorMode === 'move' && ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && !ctrlKeyWasUsed)\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      origEvent.preventDefault()\n\n      distanceX.current += event.pixelX\n      distanceY.current -= event.pixelY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            if (wheelMode === 'pan') {\n              hview.scroll(distanceX.current / 3)\n              vview.scroll(distanceY.current / 10)\n            } else if (wheelMode === 'zoom') {\n              if (\n                Math.abs(distanceY.current) > Math.abs(distanceX.current) * 2 &&\n                mousecurr\n              ) {\n                const val = distanceY.current < 0 ? 1.1 : 0.9\n                hview.zoomTo(hview.bpPerPx * val, mousecurr[0])\n                vview.zoomTo(\n                  vview.bpPerPx * val,\n                  rootRect.height - mousecurr[1],\n                )\n              }\n            }\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => curr.removeEventListener('wheel', onWheel)\n    }\n    return () => {}\n  }, [hview, vview, wheelMode, mousecurr, rootRect.height])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && validPan && !mouseupClient) {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => window.removeEventListener('mousemove', globalMouseMove)\n  }, [\n    validPan,\n    mousecurrClient,\n    mousedownClient,\n    cursorMode,\n    ctrlKeyWasUsed,\n    mouseupClient,\n    hview,\n    vview,\n  ])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n  // once that single mouseup is set\n  useEffect(() => {\n    function globalMouseUp(event: MouseEvent) {\n      if (Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 && validSelect) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      return () => window.removeEventListener('mouseup', globalMouseUp, true)\n    }\n    return () => {}\n  }, [\n    validSelect,\n    mousedown,\n    mousecurr,\n    mouseup,\n    xdistance,\n    ydistance,\n    ctrlKeyWasUsed,\n    cursorMode,\n  ])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          !validSelect || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => setMouseOvered(false)}\n        onMouseEnter={() => setMouseOvered(true)}\n      >\n        <div className={classes.container}>\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && validSelect ? (\n              <TooltipWhereMouseovered\n                model={model}\n                mouserect={mouserect}\n                mouserectClient={mouserectClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            {validSelect ? (\n              <TooltipWhereClicked\n                model={model}\n                mousedown={mousedown}\n                mousedownClient={mousedownClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            <div\n              style={{ cursor: ctrlKeyWasUsed ? 'pointer' : cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                  setCtrlKeyWasUsed(event.ctrlKey)\n                }\n              }}\n            >\n              <Grid model={model}>\n                {validSelect && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 50,\n                    left: mouseupClient[0] + 50,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 10000 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomIn(mousedown, mouseup)\n                  }\n                  // below line is needed to prevent tooltip from sticking\n                  setMouseOvered(false)\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                  // below line is needed to prevent tooltip from sticking\n                  setMouseOvered(false)\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          className={classes.resizeHandle}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nexport const GridRaw = observer(function ({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  if (!hblocks.length || !vblocks.length) {\n    return null\n  }\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0].offsetPx - hview.offsetPx\n  const vbottom = vblocks[0].offsetPx - vview.offsetPx\n  const theme = useTheme()\n  const stroke = theme.palette.divider\n\n  // Uses math.max/min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(viewHeight - vbottom - ry, viewHeight)\n\n  let lastx = Infinity\n  let lasty = Infinity\n  return (\n    <>\n      <rect\n        x={rx}\n        y={ry}\n        width={w}\n        height={h}\n        fill={theme.palette.background.default}\n      />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          const render = Math.floor(x) !== Math.floor(lastx)\n          if (render) {\n            lastx = x\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          const render = Math.floor(y) !== Math.floor(lasty)\n          if (render) {\n            lasty = y\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          stroke={stroke}\n        />\n      </g>\n      {children}\n    </>\n  )\n})\n\nexport default function Grid({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight } = model\n  return (\n    <svg\n      width={viewWidth}\n      height={viewHeight}\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n    >\n      <GridRaw model={model}>{children}</GridRaw>\n    </svg>\n  )\n}\n"],"names":["useStyles","makeStyles","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","HorizontalAxis","observer","_ref","model","viewWidth","borderY","classes","_jsx","width","height","className","children","HorizontalAxisRaw","_ref2","borderX","hview","htextRotation","hticks","offsetPx","dynamicBlocks","bpPerPx","dblocks","contentBlocks","hide","getBlockLabelKeysToHide","theme","useTheme","hviewSnap","getSnapshot","staticBlocks","ticks","map","tick","_bpToPx","bpToPx","refName","coord","base","self","filter","f","undefined","_jsxs","_Fragment","region","has","key","x","xoff","Math","floor","transform","concat","y","fill","palette","text","primary","fontSize","dominantBaseline","textAnchor","JSON","stringify","_ref3","x1","x2","y1","y2","type","strokeWidth","stroke","grey","t","_ref4","getTickDisplayStr","assemblyNames","join","VerticalAxis","_ref5","viewHeight","VerticalAxisRaw","_ref6","vview","vtextRotation","vticks","vviewSnap","_bpToPx2","yoff","_ref7","_ref8","getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","mcscanSimpleAnchorsLocation","Error","setSessionTrackData","setBed2Location","useState","setBed1Location","setFileLocation","value","setValue","error","setError","fileName","sessionTrackData","uri","localPath","name","str","r","split","pop","extName","endsWith","slice","stripGz","useEffect","fn","trackId","Date","now","adapter","e","console","Paper","style","padding","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","_filteredTracks$","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","track","readConfObject","includes","resetTrack","paragraph","TrackSelectorIcon","length","Select","MenuItem","getTrackName","importFormContainer","spacing","assemblySelector","TrackSelector","choice","setChoice","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","setAssembly2","setAssembly1","showTrackId","displayError","Container","alignItems","AssemblySelector","selected","val","Button","onClick","isSessionWithAddTracks","transaction","addTrackConf","toggleTrack","showTrack","setViews","setAssemblyNames","variant","color","WarningDialog","lazy","trackWarnings","_t$displays$0$warning","displays","warnings","shown","setShown","Alert","severity","handleClose","dpad","gridTemplateColumns","position","right","zIndex","top","icon","elevation","IconButton","scroll","ArrowDropUp","ArrowLeft","ArrowRight","ArrowDropDown","zoomIn","ZoomIn","zoomOut","ZoomOut","CursorMove","props","SvgIcon","d","CursorMouse","zoomOutButton","zoomInButton","activateTrackSelector","title","CascadingMenuButton","menuItems","squareView","squareViewProportional","showAllRegions","setDrawCigar","drawCigar","checked","setShowPanButtons","showPanButtons","subMenu","setCursorMode","cursorMode","setWheelMode","wheelMode","MoreVert","bp","marginLeft","spacer","flexGrow","headerBar","selection","DotplotControls","getBpDisplayStr","currBp","DotplotWarnings","PanButtons","tooltip","backgroundColor","alpha","borderRadius","shape","common","white","fontFamily","typography","pxToRem","lineHeight","round","maxWidth","wordWrap","blank","left","TooltipWhereMouseovered","_ref$current","mouserect","mouserectClient","xdistance","ydistance","anchorEl","setAnchorEl","rect","useRef","current","getBoundingClientRect","w","offset","virtElement","useMemo","bottom","toJSON","styles","attributes","usePopper","placement","Portal","ref","popper","locstr","TooltipWhereClicked","mousedown","mousedownClient","abs","root","marginBottom","overflow","overlay","cursor","content","resizeHandle","background","boxSizing","borderTop","getOffset","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","_ref$current2","mousecurrClient","setMouseCurrClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","ctrlKeyWasUsed","setCtrlKeyWasUsed","svg","rootRect","mousecurr","mouseup","validPan","validSelect","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","zoomTo","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","globalMouseUp","Header","onMouseLeave","onMouseEnter","onMouseDown","button","ctrlKey","min","Menu","open","Boolean","onMenuItemClick","_","callback","onClose","anchorReference","anchorPosition","onDotplotView","ResizeHandle","onDrag","n","setHeight","initialized","loading","ImportForm","LoadingEllipses","GridRaw","hblocks","vblocks","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","divider","rx","max","ry","h","lastx","Infinity","lasty","default","render"],"sourceRoot":""}